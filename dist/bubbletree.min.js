if("object"==typeof module&&"object"==typeof module.exports){var $=require("jquery"),Raphael=void 0;try{Raphael=require("raphael")}catch(e){Raphael=require("webpack-raphael")}var TWEEN=require("tween.js")}var vis4=function(){};vis4.log=function(){try{null!==window.console&&console.log.apply(this,arguments)}catch(e){}},vis4.str2time=function(e){var t=e.split(".");return Math.round(.001*Date.UTC(2e3+t[0],t[1]-1,t[2]))},vis4.round=function(e,t){var i=Math.pow(10,t);return Math.round(e*i)/i},vis4.formatNumber_ksep=".",vis4.formatNumber_dsep=",",vis4.formatNumber=function(e,t){e=""+e;for(var i="",o=0,n=e.length-1;n>=0;n--)o>0&&o<e.length&&o%3==0&&(i=vis4.formatNumber_ksep+i),i=e[n]+i,o++;return i},vis4.parseTSV=function(e,t){var i,o,n=e.split("\n"),s=[];for(o=0;o<n.length;o++){var a=n[o];if(""!==a)if(t)if(0===o)i=a.split("\t");else{var r={},l=a.split("\t");if(l.length!=i.length)return"wrong tsv format";for(var h=0;h<i.length;h++)r[$.trim(i[h])]=$.trim(l[h]);s.push(r)}else s.push(a.split("\t"))}return s},vis4.map=function(e,t){for(var i={},o=0;o<e.length;o++)i[e[o][t]]=e[o];return i},vis4.DelayedTask=function(){var e=this;e.init=function(e){var t=this,i=[];for(var o in e)o>2&&i.push(e[o]);t.func=e[2],t.scope=e[1],t.args=i,t.running=!0,t.timer=window.setTimeout(this.run.bind(t),e[0])},e.run=function(){var e=this;e.func.apply(e.scope,e.args),e.running=!1},e.cancel=function(){vis4.log("canceling timer",this),window.clearTimeout(this.timer),this.running=!1},e.init(arguments)};var vis4loadingItem=function(e,t,i,o){this.url=e,this.id=t,this.type=i,this.loader=o,this.load=function(){$.get(this.url,this.processContent.bind(this))},this.processContent=function(e){"tsv"==this.type?this.data=vis4.parseTSV(e,!0):"json"==this.type?this.data="string"==typeof e?$.parseJSON(e):e:this.data=e,this.loader.itemLoaded()}},vis4loader=function(){this.items=[],this.byID={},this.add=function(e,t,i){null===i&&(i="text");var o=new vis4loadingItem(e,t,i,this);this.items.push(o),this.byID[t]=o},this.load=function(e){this.callback=e,this.loaded=0;for(var t=0;t<this.items.length;t++)this.items[t].load()},this.itemLoaded=function(){this.loaded++,this.loaded==this.items.length&&this.callback(this)},this.get=function(e){return this.byID[e].data}},vis4color=function(e){this.h=0,this.s=.5,this.l=.8,this.v=1,this.i=1,this.r=255,this.g=0,this.b=0,this.x="#FF0000",this.u=0,this.br=1,this.K=1/180*Math.PI,"hsi"!=e&&"hsl"!=e&&"hsb"!=e&&"hsv"!=e||(this.mode=e),this.log=function(e){null!==window.console&&console.log(e)},this.cos=function(e){return Math.cos(e*this.K)},this.trim=function(e){return Math.max(0,Math.min(1,e))},this.setMode=function(e){"hsv"!=e&&"hsi"!=e&&"hsl"!=e&&"hsb"!=e&&this.log("unknown color mode "+e),this.mode=e,this.rgb2hsx()},this.setHexColor=function(e){"#"!=e.charAt(0)&&(e="#"+e),4==e.length&&(e="#"+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)+e.charAt(3)+e.charAt(3)),7!=e.length&&this.log("invalid hex color"),this.x=e,this.hex2int(),this.int2rgb(),this.rgb2hsx()},this.setRGBColor=function(e,t,i){this.r=e,this.b=i,this.g=t,this.rgb2int(),this.int2hex(),this.rgb2hsx()},this.setHSVColor=function(e,t,i){"hsv"!=this.mode&&(this.mode="hsv"),this.h=e,this.s=this.trim(t),this.v=this.trim(i),this.hsv2rgb(),this.rgb2int(),this.int2hex()},this.setHSLColor=function(e,t,i){"hsl"!=this.mode&&(this.mode="hsl"),this.h=e,this.s=this.trim(t),this.l=this.trim(i),this.hsl2rgb(),this.rgb2int(),this.int2hex()},this.setHSBColor=function(e,t,i){"hsb"!=this.mode&&(this.mode="hsb"),this.h=e,this.s=this.trim(t),this.b=this.trim(i),this.hsb2rgb(),this.rgb2int(),this.int2hex()},this.setHSIColor=function(e,t,i){"hsi"!=this.mode&&(this.mode="hsi"),this.h=e,this.s=this.trim(t),this.i=this.trim(i),this.hsi2rgb(),this.rgb2int(),this.int2hex()},this.onChange=function(){},this.rgb2int=function(){this.u=this.r<<16|this.g<<8|this.b,this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hex2int=function(){this.u=parseInt(this.x.substr(1),16),this.onChange()},this.int2hex=function(){var e="000000"+this.u.toString(16).toUpperCase();this.x="#"+e.substr(e.length-6),this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hsx2rgb=function(){switch(this.mode){case"hsv":this.hsv2rgb();break;case"hsi":this.hsi2rgb();break;case"hsl":this.hsl2rgb();break;case"hsb":this.hsb2rgb()}},this.rgb2hsx=function(){switch(this.mode){case"hsv":this.rgb2hsv();break;case"hsi":this.rgb2hsi();break;case"hsl":this.rgb2hsl();break;case"hsb":this.rgb2hsb()}},this.hue=function(e){return this._evaluate(e,"h"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.saturation=function(e){return this._evaluate(e,"s"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.lightness=function(e){return"hsl"!=this.mode?void this.log("WARNING: lightness property not available in "+this.mode+" mode"):(this._evaluate(e,"l"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.brightness=function(e){return"hsb"!=this.mode?void this.log("WARNING: brightness property not available in "+this.mode+" mode"):(this._evaluate(e,"br"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.value=function(e){return"hsv"!=this.mode?void this.log("WARNING: value property not available in "+this.mode+" mode"):(this._evaluate(e,"v"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.intensity=function(e){return"hsi"!=this.mode?void this.log("WARNING: intensity property not available in "+this.mode+" mode"):(this._evaluate(e,"i"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this._evaluate=function(e,t){"string"==typeof e?("+"!=e.charAt(0)||isNaN(e.substr(1))?"-"!=e.charAt(0)||isNaN(e.substr(1))||(this[t]=this[t]-Number(e.substr(1))):this[t]=Number(this[t])+Number(e.substr(1)),"*"!=e.charAt(0)||isNaN(e.substr(1))?"/"!=e.charAt(0)||isNaN(e.substr(1))||(this[t]=this[t]/Number(e.substr(1))):this[t]=this[t]*Number(e.substr(1))):isNaN(e)||(this[t]=Number(e))},this.rgb=function(){return[this.r,this.g,this.b]},this.hsl=function(){return[this.h,this.s,this.l]},this.rgb2hsv=function(){var e=Math.min(Math.min(this.r,this.g),this.b),t=Math.max(Math.max(this.r,this.g),this.b),i=t-e;this.v=t/255,this.s=i/t,0===this.s?this.h=void 0:(this.r==t&&(this.h=(this.g-this.b)/i),this.g==t&&(this.h=2+(this.b-this.r)/i),this.b==t&&(this.h=4+(this.r-this.g)/i),this.h*=60,this.h<0&&(this.h+=360))},this.hsv2rgb=function(){var e,t,i,o,n,s=this.h,a=this.s,r=this._rgb,l=255*this.v;if(0===this.s&&isNaN(s))this.r=this.g=this.b=l;else switch(360==s&&(s=0),s/=60,e=Math.floor(s),t=s-e,i=l*(1-a),o=l*(1-a*t),n=l*(1-a*(1-t)),e){case 0:r(l,n,i);break;case 1:r(o,l,i);break;case 2:r(i,l,n);break;case 3:r(i,o,l);break;case 4:r(n,i,l);break;case 5:r(l,i,o)}},this._rgb=function(e,t,i){this.r=e,this.g=t,this.b=i},this.rgb2hsl=function(){var e=this.r/255,t=this.g/255,i=this.b/255,o=Math.min(Math.min(e,t),i),n=Math.max(Math.max(e,t),i);this.l=(n+o)/2,n==o?(this.s=0,this.h=void 0):this.l<.5?this.s=(n-o)/(n+o):this.s=(n-o)/(2-n-o),e==n?this.h=(t-i)/(n-o):t==n?this.h=2+(i-e)/(n-o):i==n&&(this.h=4+(e-t)/(n-o)),this.h*=60,this.h<0&&(this.h+=360)},this.hsl2rgb=function(){if(0===this.s)this.r=this.g=this.b=255*this.l;else{var e,t,i=[0,0,0],o=[0,0,0];t=this.l<.5?this.l*(1+this.s):this.l+this.s-this.l*this.s,e=2*this.l-t;var n=this.h/360;i[0]=n+1/3,i[1]=n,i[2]=n-1/3;for(var s=0;s<3;s++)i[s]<0&&(i[s]+=1),i[s]>1&&(i[s]-=1),6*i[s]<1?o[s]=e+6*(t-e)*i[s]:2*i[s]<1?o[s]=t:3*i[s]<2?o[s]=e+(t-e)*(2/3-i[s])*6:o[s]=e;this.r=255*o[0],this.g=255*o[1],this.b=255*o[2]}},this.rgb2hsb=function(){this.rgb2hsl(),this.br=this._rgbLuminance()},this._rgbLuminance=function(){return(.2126*this.r+.7152*this.g+.0722*this.b)/255},this.hsb2rgb=function(){var e,t=.001,i=0,o=1,n=.5;this.l=n,this.hsl2rgb(),e=this._rgbLuminance();for(var s=0;Math.abs(e-this.br)>t&&s<100;)e>this.br?o=n:i=n,n=(i+o)/2,this.l=n,this.hsl2rgb(),e=this._rgbLuminance(),s++;this.br=e},this.rgb2hsi=function(){var e,t=this.r,i=this.g,o=this.b,n=(Math.max(Math.max(t,i),o),t+i+o);t/=n,i/=n,o/=n,e=Math.min(Math.min(t,i),o),this.i=(t+i+o)/765,this.h=this.acos((t-.5*i-.5*o)/Math.sqrt((t-i)*(t-i)+(t-o)*(i-o))),this.s=1-3*e,o>i&&(this.h=360-this.h)},this.hsi2rgb=function(){var e,t,i,o=this.h,n=this.i,s=this.s,a=this.cos;o<=120?(t=(1-s)/3,e=(1+s*a(o)/a(60-o))/3,i=1-(t+e)):o<=240?(o-=120,e=(1-s)/3,i=(1+s*a(o)/a(60-o))/3,t=1-(e+i)):(o-=240,i=(1-s)/3,t=(1+s*a(o)/a(60-o))/3,e=1-(i+t)),e=Math.min(255,e*n*3*255),i=Math.min(255,i*n*3*255),t=Math.min(255,t*n*3*255)}};vis4color.fromHex=function(e,t){null==t&&(t="hsl");var i=new vis4color(t);return i.setHexColor(e),i},vis4color.fromRGB=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setRGBolor(e,t,i),n},vis4color.fromHSV=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSVColor(e,t,i),n},vis4color.fromHSL=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSLColor(e,t,i),n},vis4color.fromHSB=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSBColor(e,t,i),n},vis4color.fromHSI=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSIColor(e,t,i),n};var BubbleTree=function(e,t,i){var o=$.history||{callback:null,options:null,init:function(e,t){this.callback=e,this.options=t,this.load("/")},load:function(e){"function"==typeof this.callback&&this.callback(e)}},n=this;if(n.version="2.0.4",n.$container=$(e.container).empty(),n.config=$.extend({formatValue:BubbleTree.Utils.formatNumber,clearColors:!1,autoColors:!1,rootPath:"",minRadiusLabels:40,minRadiusAmounts:20,minRadiusHideLabels:0,cutLabelsAt:50},e),n.tooltip=e.tooltipCallback?e.tooltipCallback:function(){},e.tooltip&&(n.tooltip=e.tooltip),n.style=e.bubbleStyles,n.ns=BubbleTree,n.nodesByUrlToken={},n.nodeList=[],n.iconsByUrlToken={},n.globalNodeCounter=0,n.displayObjects=[],n.bubbleScale=1,n.globRotation=0,n.currentYear=e.initYear,n.currentCenter=void 0,n.currentTransition=void 0,n.baseUrl="",n.loadData=function(e){$.ajax({url:e,dataType:"json",success:this.setData.bind(this)})},n.setData=function(e){var t=this;e||(e=t.config.data),t.initData(e),t.initPaper(),t.initBubbles(),t.initTween(),t.initHistory()},n.initData=function(e){var t=this;e.level=0,t.preprocessData(e),t.traverse(e,0),t.treeRoot=e},n.preprocessData=function(e){var t=this,i=t.config.maxNodesPerLevel;if(i&&i<e.children.length){var o=t.sortChildren(e.children);o.reverse();var n,s=[],a=[],r=0;for(var l in e.children)l<i?s.push(e.children[l]):(a.push(e.children[l]),r+=Math.max(0,e.children[l].amount));e.children=s,e.children.push({label:"More",name:"more",amount:r,children:a,breakdown:n})}},n.traverse=function(e,t){var i,o,n=this,s=n.config.bubbleStyles;if(e.children||(e.children=[]),n.nodeList.push(e),e.famount=n.config.formatValue(e.amount),e.parent&&(e.level=e.parent.level+1),n.config.clearColors===!0&&(e.color=!1),s){var a=["color","shortLabel","icon"];$.each(a,function(t,i){s.hasOwnProperty("id")&&s.id.hasOwnProperty(e.id)&&s.id[e.id].hasOwnProperty(i)?e[i]=s.id[e.id][i]:e.hasOwnProperty("name")&&s.hasOwnProperty("name")&&s.name.hasOwnProperty(e.name)&&s.name[e.name].hasOwnProperty(i)?e[i]=s.name[e.name][i]:e.hasOwnProperty("taxonomy")&&s.hasOwnProperty(e.taxonomy)&&s[e.taxonomy].hasOwnProperty(e.name)&&s[e.taxonomy][e.name].hasOwnProperty(i)&&(e[i]=s[e.taxonomy][e.name][i])})}if(!e.color)if(n.config.autoColors)if(0==e.level)e.color=vis4color.fromHSL(45,.9,.5).x;else if(1==e.level){var r=e.parent.children.length;e.color=vis4color.fromHSL(t/r*360,.7,.5).x}else e.color=vis4color.fromHex(e.parent.color).lightness("*"+(.5+.5*Math.random())).x;else e.level>0?e.color=e.parent.color:e.color="#999999";for(e.children.length<2&&e.color&&(e.color=vis4color.fromHex(e.color).saturation("*.86").x),e.level>0&&(i=e.parent.children,i.length>1&&(e.left=i[(t-1+i.length)%i.length],e.right=i[(Number(t)+1)%i.length],e.right==e.left&&(e.right=void 0))),o=void 0!==e.label&&""!==e.label?e.label:void 0!==e.token&&""!==e.token?e.token:""+n.globalNodeCounter,n.globalNodeCounter++,"number"==typeof o?e.urlToken=o.toString():e.urlToken=o.toLowerCase().replace(/\W/g,"-");n.nodesByUrlToken.hasOwnProperty(e.urlToken);)e.urlToken+="-";n.nodesByUrlToken[e.urlToken]=e,e.maxChildAmount=0,e.children=n.sortChildren(e.children,!0,n.config.sortBy),$.each(e.children,function(t,i){i.parent=e,e.maxChildAmount=Math.max(e.maxChildAmount,i.amount),n.traverse(i,t)}),e.breakdowns&&(e.breakdownsByName={},$.each(e.breakdowns,function(t,i){i.famount=n.config.formatValue(i.amount),i.name&&(e.breakdownsByName[i.name]=i)}))},n.sortChildren=function(e,t,i){var o=[],s=!0;if("label"==i?(i=n.compareLabels,t=!1):i=n.compareAmounts,e.sort(i),t){for(;e.length>0;)o.push(s?e.pop():e.shift()),s=!s;return o}return e},n.compareAmounts=function(e,t){return e.amount>t.amount?1:e.amount==t.amount?0:-1},n.compareLabels=function(e,t){return e.label>t.label?1:e.label==t.label?0:-1},n.initPaper=function(){var e,t=this,i=t.$container,o=t.treeRoot,n=i.width(),s=i.height(),a=Raphael(i[0],n,s),r=.5*Math.min(n,s)-40,l=t.ns.Vector,h=new l(.5*n,.5*s);t.width=n,t.height=s,t.paper=a,e=Math.pow((Math.pow(o.amount,.6)+2*Math.pow(o.maxChildAmount,.6))/r,1.6666666667),t.a2radBase=t.ns.a2radBase=e,t.origin=h,$(window).resize(t.onResize.bind(t))},n.onResize=function(){var e,t=this,i=t.$container,o=i.width(),n=i.height(),s=.5*Math.min(o,n)-40,a=t.treeRoot;t.paper.setSize(o,n),t.origin.x=.5*o,t.origin.y=.5*n,t.width=o,t.height=n,e=Math.pow((Math.pow(a.amount,.6)+2*Math.pow(a.maxChildAmount,.6))/s,1.6666666667),t.a2radBase=t.ns.a2radBase=e,$.each(t.displayObjects,function(e,i){"bubble"==i.className&&(i.bubbleRad=t.ns.Utils.amount2rad(i.node.amount))}),t.currentCenter&&t.changeView(t.currentCenter.urlToken)},n.initTween=function(){this.tweenTimer=setInterval(this.loop,1e3/120)},n.initBubbles=function(){var e=this,t=e.treeRoot,i=!1;e.ns.Bubbles;e.bubbleClasses=[],e.config.hasOwnProperty("bubbleType")||(e.config.bubbleType=["plain"]),$.isArray(e.config.bubbleType)||(e.config.bubbleType=[e.config.bubbleType]),$.isArray(e.config.bubbleType)&&$.each(e.config.bubbleType,function(t){"icon"==e.config.bubbleType[t]&&(i=!0),e.bubbleClasses.push(e.getBubbleType(e.config.bubbleType[t]))});var o=e.createBubble(t,e.origin,0,0,t.color);e.traverseBubbles(o)},n.getBubbleType=function(e){var t=this,i=t.ns.Bubbles;switch(e){case"pie":return i.Pies;case"donut":return i.Donut;case"multi":return i.Multi;case"icon":return i.Icon;default:return i.Plain}},n.traverseBubbles=function(e){var t,i,o,n,s,a=this,r=a.ns.Utils.amount2rad,l=0,h=0,c=2*Math.PI;i=e.node.children,$.each(i,function(e,t){l+=r(t.amount)}),i.length>0&&(t=a.createRing(e.node,e.pos,0,{stroke:"#888","stroke-dasharray":"-"})),$.each(i,function(t,i){n=r(i.amount)/l*c,s=h+.5*n,isNaN(s)&&vis4.log(h,n,i.amount,l,c),i.centerAngle=s,o=a.createBubble(i,e.pos,0,s,i.color),h+=n,a.traverseBubbles(o)})},n.createBubble=function(e,t,i,o,n){var s,a=this,r=(a.ns,e.level);return isNaN(r)&&(r=0),r=Math.min(r,a.bubbleClasses.length-1),s=new a.bubbleClasses[r](e,a,t,i,o,n),a.displayObjects.push(s),s},n.createRing=function(e,t,i,o){var n,s=this,a=s.ns;return n=new a.Ring(e,s,t,i,o),s.displayObjects.push(n),n},n.changeView=function(e){var t,i,o,n=this,s=(n.paper,.35*Math.min(n.width,n.height)),a=n.ns,r=a.Utils,l=n.origin,h=r.amount2rad,c=n.treeRoot,b=n.nodesByUrlToken,u=b.hasOwnProperty(e)?b[e]:null,d=new a.Layout,p=2*Math.PI,f=n.getBubble.bind(n),v=n.getRing.bind(n),g=n.unifyAngle;if(null!==u){var m,y,w,x,k,M,T,C,B,P,A,N=!1,L=!1;for(o in n.displayObjects)n.displayObjects[o].hideFlag=!0;if(u==c||u.parent==c&&u.children.length<2){d.$(n).bubbleScale=1,d.$(l).x=.5*n.width,d.$(l).y=.5*n.height,m=f(c),u!=c&&(m.childRotation=-u.centerAngle),k=h(c.amount)+h(c.maxChildAmount)+20,B=v(c),d.$(B).rad=k;for(o in c.children)x=c.children[o],t=f(x),d.$(t).angle=g(x.centerAngle+m.childRotation),d.$(t).rad=k}else{var R=u;u.children.length<2&&(u=u.parent),P=s/(h(u.amount)+2*h(u.maxChildAmount)),d.$(n).bubbleScale=P,m=f(u),n.currentCenter&&n.currentCenter==u.left?L=!0:n.currentCenter&&n.currentCenter==u.right&&(N=!0);var O=n.shortestAngleTo;d.$(m).angle=O(m.angle,0),k=(h(u.amount)+h(u.maxChildAmount))*P+20,B=v(u),d.$(B).rad=k,y=f(u.parent),y.childRotation=-u.centerAngle;for(var H=y;H&&H.node.parent;)H=f(H.node.parent,!0),d.$(H).rad=0;d.$(y).rad=0;var I=.5*n.width;if(M=0-Math.max(.8*I-P*(h(u.parent.amount)+h(Math.max(1.15*u.amount+1.15*u.maxChildAmount,.85*u.left.amount,.85*u.right.amount))),P*h(u.parent.amount)*-1+.15*I)+I,u.left&&u.right){P*h(Math.max(u.left.amount,u.right.amount))}A=k+M,d.$(l).x=.5*n.width-M-(u!=R?.35*k:0),d.$(l).y=.5*n.height,new vis4.DelayedTask(1500,vis4,vis4.log,l,y.pos),M+=.1*n.width,B=v(u.parent),d.$(B).rad=M,d.$(m).rad=M;var U=0-(u!=R?R.centerAngle+m.childRotation:0);for(o in u.children)x=u.children[o],t=f(x),d.$(t).angle=n.shortestAngleTo(t.angle,x.centerAngle+m.childRotation+U),d.$(t).rad=k;var S=.07*n.height;u.left&&(w=u.left,T=h(w.amount)*P,C=p-Math.asin((.5*n.paper.height+T-S)/M),t=f(w),d.$(t).rad=M,d.$(t).angle=O(t.angle,C)),u.right&&(w=u.right,T=h(w.amount)*P,C=Math.asin((.5*n.paper.height+T-S)/M),t=f(w),d.$(t).rad=M,d.$(t).angle=O(t.angle,C)),u=R}for(o in n.displayObjects){var j=n.displayObjects[o];j.hideFlag&&j.visible?(d.$(j).alpha=0,"bubble"==j.className&&j.node.level>1&&(d.$(j).rad=0),d.hide(j)):j.hideFlag||(d.$(j).alpha=1,j.visible||(j.alpha=0,d.show(j)))}i=new a.Transitioner(n.currentCenter==u?0:1e3),i.changeLayout(d),n.currentTransition=i,!n.currentCenter&&$.isFunction(n.config.firstNodeCallback)&&n.config.firstNodeCallback(u),n.currentCenter=u}else r.log("node "+e+" not found")},n.unifyAngle=function(e){for(var t=Math.PI,i=2*t;e>=i;)e-=i;for(;e<0;)e+=i;return e},n.shortestAngle=function(e,t){var i=Math.PI,o=2*i,s=n.unifyAngle;e=s(e),t=s(t);var a=t-e;return a>i&&(a-=o),a<-i&&(a+=o),a},n.shortestAngleTo=function(e,t){return e+n.shortestAngle(e,t)},n.shortestLeftTurn=function(e,t){var i=n.shortestAngle(e,t);return i>0&&(i-=2*Math.PI),e+i},n.shortestRightTurn=function(e,t){var i=n.shortestAngle(e,t);return i<0&&(i=2*Math.PI+i),e+i},n.getBubble=function(e,t){return this.getDisplayObject("bubble",e,t)},n.getRing=function(e){return this.getDisplayObject("ring",e)},n.getDisplayObject=function(e,t,i){var o,n,s=this;for(o in s.displayObjects)if(n=s.displayObjects[o],n.className==e&&n.node==t)return i||(n.hideFlag=!1),n;vis4.log(e+" not found for node",t)},n.initHistory=function(){o.init(n.urlChanged.bind(n),{unescape:",/"})},n.freshUrl="",n.urlChanged=function(e){var t=this,i=t.currentTransition;t.freshUrl||e.indexOf("/~/")&&(t.baseUrl=e.substr(0,e.indexOf("/~/"))),t.freshUrl=e,i&&i.running?(vis4.log("transition is running at the moment, adding listener"),i.onComplete(t.changeUrl.bind(t))):t.changeUrl()},n.changeUrl=function(){var e,t=this,i=t.freshUrl.split("/"),n=i[i.length-1];""===t.freshUrl&&t.navigateTo(t.treeRoot),t.nodesByUrlToken.hasOwnProperty(n)?(e=t.getUrlForNode(t.nodesByUrlToken[n]),t.freshUrl!=e?o.load(e):t.navigateTo(t.nodesByUrlToken[n],!0)):t.navigateTo(t.treeRoot)},n.navigateTo=function(e,t){var i=this;t?i.changeView(e.urlToken):o.load(i.getUrlForNode(e)),$(".bubbletree-label, .bubbletree-label2",i.$container).removeClass("current"),$(".bubbletree-label2."+e.id,i.$container).addClass("current"),$(".bubbletree-label."+e.id,i.$container).addClass("current")},n.getUrlForNode=function(e){var t=[];for(t.push(e.urlToken);e.parent;)t.push(e.parent.urlToken),e=e.parent;return t.reverse(),n.baseUrl+"/~/"+t.join("/")},n.onNodeClick=function(e){$.isFunction(n.config.nodeClickCallback)&&n.config.nodeClickCallback(e)},n.clean=function(){$(".bubbletree-label").remove()},this.loop=function(){TWEEN.update()},!n.config.hasOwnProperty("data"))throw new Error("no data");"string"==typeof n.config.data?n.loadData():new vis4.DelayedTask(1e3,n,n.setData,n.config.data)};BubbleTree.Styles={},BubbleTree.Layout=function(){var e=this;e.objects=[],e.props=[],e.toHide=[],e.toShow=[],e.$=function(e){var t,i,o,n=this;for(t in n.objects)if(i=n.objects[t],i==e)return n.props[t];return n.objects.push(e),o={},n.props.push(o),o},e.show=function(e){var t=this;t.toShow.push(e)},e.hide=function(e){var t=this;t.toHide.push(e)}},BubbleTree.Line=function(e,t,i,o,n,s){this.bc=e,this.o=i,this.angle=o,this.fromRad=n,this.attr=t,this.toRad=s,this.getXY=function(){this.x1=this.o.x+Math.cos(this.angle)*this.fromRad,this.y1=this.o.y-Math.sin(this.angle)*this.fromRad,this.x2=this.o.x+Math.cos(this.angle)*this.toRad,this.y2=this.o.y-Math.sin(this.angle)*this.toRad},this.init=function(){this.getXY(),console.log("foo","M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2,t),this.path=this.bc.paper.path("M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2).attr(this.attr)},this.draw=function(){this.getXY(),this.path.attr({path:"M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2})},this.init()},BubbleTree.Loader=function(e){var t=this;t.config=e,t.ns=BubbleTree,t.loadData=function(){var e=this,t=e.config.data;console.log("loading url ",t),$.ajax({url:t,context:e,dataType:"json",success:function(e){this.run(e)}})},t.run=function(e){var t=this,i=new BubbleTree(t.config);i.setData(e),t.config.instance=i},!t.config.hasOwnProperty("data"),"string"==typeof t.config.data?t.loadData():t.run(t.config.data)},BubbleTree.MouseEventGroup=function(e,t){var i=this;i.target=e,i.members=t,i.click=function(e){var t,i,o=this,n=o.members;o.clickCallback=e;for(t in n)i=n[t],$(i).click(o.handleClick.bind(o))},i.handleClick=function(e){var t=this;t.clickCallback({target:t.target,origEvent:e,mouseEventGroup:t})},i.hover=function(e){var t,i,o=this,n=o.members;o.hoverCallback=e;for(t in n)i=n[t],$(i).hover(o.handleMemberHover.bind(o),o.handleMemberUnHover.bind(o))},i.unhover=function(e){var t=this;t.unhoverCallback=e},i.wasHovering=!1,i.mouseIsOver=!1,i.handleMemberHover=function(e){var t=this;new vis4.DelayedTask(25,t,t.handleMemberHoverDelayed,e)},i.handleMemberHoverDelayed=function(e){var t=this;t.mouseIsOver=!0,t.wasHovering||(t.wasHovering=!0,$.isFunction(t.hoverCallback)&&t.hoverCallback({target:t.target,origEvent:e,mouseEventGroup:t}))},i.handleMemberUnHover=function(e){var t=this;t.mouseIsOver=!1,new vis4.DelayedTask(40,t,t.handleMemberUnHoverDelayed,e)},i.handleMemberUnHoverDelayed=function(e){var t=this;t.mouseIsOver||(t.wasHovering=!1,$.isFunction(t.unhoverCallback)&&t.unhoverCallback({target:t.target,origEvent:e,mouseEventGroup:t}))},i.addMember=function(e){var t=this;t.hoverCallback&&$(e).hover(t.handleMemberHover.bind(t),t.handleMemberUnHover.bind(t)),t.members.push(e)},i.removeMember=function(e){var t,i=this,o=i.members,n=[];i.clickCallback&&$(e).unbind("click"),i.hoverCallback&&$(e).unbind("mouseenter mouseleave");for(t in o)o[t]!=e&&n.push(o[t]);i.members=n}},BubbleTree.Ring=function(e,t,i,o,n){var s=this;s.className="ring",s.rad=o,s.bc=t,s.attr=n,s.origin=i,s.alpha=1,s.visible=!1,s.node=e,s.init=function(){},s.draw=function(){var e=this,t=e.origin;e.visible&&e.circle.attr({cx:t.x,cy:t.y,r:e.rad,"stroke-opacity":e.alpha})},s.hide=function(){var e=this;e.circle.remove(),e.visible=!1},s.show=function(){var e=this;e.circle=e.bc.paper.circle(i.x,i.y,e.rad).attr(e.attr),e.visible=!0,e.circle.toBack()},s.init()},BubbleTree.Transitioner=function(e){var t=this;t.duration=e,t.running=!1,t.completeCallbacks=[],t.changeLayout=function(e){var t,i,o,n,s=this;s.running=!0,s.layout=e;for(t in e.toShow)i=e.toShow[t],$.isFunction(i.show)&&i.show();for(t in e.objects)if(i=e.objects[t],void 0!==i&&null!==i)if(o=e.props[t],s.duration>0){var a=new TWEEN.Tween(i),r={};for(n in o)r[n]=o[n];a.to(r,s.duration),a.easing(TWEEN.Easing.Exponential.Out),$.isFunction(i.draw)&&a.onUpdate(i.draw.bind(i)),t==e.objects.length-1&&a.onComplete(s._completed.bind(s)),a.start()}else{for(n in o)i[n]=o[n];i&&$.isFunction(i.draw)&&i.draw()}if(0===s.duration){for(t in e.objects)i=e.objects[t],i&&$.isFunction(i.draw)&&i.draw();s._completed()}},t.onComplete=function(e){var t=this;try{$.isFunction(e)&&t.completeCallbacks.push(e)}catch(i){}},t._completed=function(){var e,t,i=this,o=i.completeCallbacks;i.running=!1;for(e in i.layout.objects)t=i.layout.objects[e],t&&$.isFunction(t.draw)&&t.draw();for(e in i.layout.toHide)t=i.layout.toHide[e],t&&$.isFunction(t.hide)&&t.hide();for(e in o)o[e]()}},BubbleTree.Utils={},BubbleTree.Utils.log=function(){try{window.hasOwnProperty("console")&&console.log.apply(this,arguments)}catch(e){}},BubbleTree.Utils.amount2rad=function(e){return Math.pow(Math.max(0,e)/BubbleTree.a2radBase,.6)},BubbleTree.Utils.formatNumber=function(e){var t="";return e<0&&(e*=-1,t="-"),e>=1e12?t+Math.round(e/1e11)/10+"t":e>=1e9?t+Math.round(e/1e8)/10+"b":e>=1e6?t+Math.round(e/1e5)/10+"m":e>=1e3?t+Math.round(e/100)/10+"k":t+e},BubbleTree.Vector=function(e,t){var i=this;i.x=e,i.y=t,i.length=function(){var e=this;return Math.sqrt(e.x*e.x+e.y*e.y)},i.normalize=function(e){var t=this,i=t.length();e||(e=1),t.x*=e/i,t.y*=e/i},i.clone=function(){var e=this;return new BubbleTree.Vector(e.x,e.y)}},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Plain=function(e,t,i,o,n,s){var a=BubbleTree,r=a.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=o,l.angle=n,l.color=s,l.alpha=1,l.visible=!1,l.ns=a,l.pos=a.Vector(0,0),l.bubbleRad=r.amount2rad(this.node.amount),l.container=l.bc.$container,l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},l.init=function(){var e=this;e.getXY();e.node.shortLabel||(e.node.shortLabel=e.node.label.length>e.bc.config.cutLabelsAt+3?e.node.label.substr(0,e.bc.config.cutLabelsAt)+"...":e.node.label),e.initialized=!0},l.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},l.draw=function(){var e=this,t=Math.max(5,e.bubbleRad*e.bc.bubbleScale),i=(e.pos.x,e.pos.y,e.getXY(),e.pos.x),o=e.pos.y;if(e.visible){e.circle.attr({cx:e.pos.x,cy:e.pos.y,r:t,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:e.pos.x,cy:e.pos.y,r:t-4,"stroke-opacity":.9*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.label.show(),e.label.find("*").show(),e.label2.show(),t>=e.bc.config.minRadiusLabels?e.label2.hide():t>=e.bc.config.minRadiusAmounts?e.label.find(".bubbletree-desc").hide():t>=e.bc.config.minRadiusHideLabels?e.label.hide():(e.label.hide(),e.label2.hide()),e.label.css({width:2*t+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-t+"px",top:e.pos.y-.5*e.label.height()+"px"});var n=Math.max(70,3*t);e.label2.css({width:n+"px",opacity:e.alpha}),e.label2.css({left:i-.5*n+"px",top:o+t+"px"})}},l.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1},l.show=function(){var e=this,t=e.pos.x,i=e.pos.y,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,o).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(t,i,o-3).attr({stroke:"#ffffff","stroke-dasharray":"- "}),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+e.bc.config.formatValue(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.container.append(e.label),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.container.append(e.label2);var n=[e.circle.node,e.label,e.dashedBorder.node],s=new e.ns.MouseEventGroup(e,n);s.click(e.onclick.bind(e)),s.hover(e.onhover.bind(e)),s.unhover(e.onunhover.bind(e)),e.visible=!0},l.addOverlay=function(){var e=this;e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff",opacity:0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e))},l.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Donut=function(e,t,i,o,n,s){var a=BubbleTree,r=a.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=o,l.angle=n,l.color=s,l.alpha=1,l.visible=!1,l.ns=a,l.bubbleRad=r.amount2rad(this.node.amount),l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},l.init=function(){var e=this;e.pos=new e.ns.Vector(0,0),e.getXY();var t,i,o,n=[],s=[],a=e.bc.config.bubbleStyles;e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.breakdownOpacities=[.2,.7,.45,.6,.35],e.breakdownColors=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];for(i in e.node.breakdowns)t=e.node.breakdowns[i],t.famount=e.bc.config.formatValue(t.amount),o=t.amount/e.node.amount,n.push(o),s.push(t),a&&a.hasOwnProperty("name")&&a.name.hasOwnProperty(t.name)&&a.name[t.name].hasOwnProperty("opacity")&&(e.breakdownOpacities[s.length-1]=a.name[t.name].opacity),a&&a.hasOwnProperty("name")&&a.name.hasOwnProperty(t.name)&&a.name[t.name].hasOwnProperty("color")&&(e.breakdownColors[s.length-1]=a.name[t.name].color,e.breakdownOpacities[s.length-1]=1);e.node.breakdowns=s,e.breakdown=n;e.initialized=!0},l.onclick=function(e){var t=this;t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.type="HIDE",e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},this.draw=function(){var e=this,t=Math.max(5,e.bubbleRad*e.bc.bubbleScale),i=(e.pos.x,e.pos.y,e.getXY(),t>20),o=e.pos.x,n=e.pos.y;if(e.visible){if(e.circle.attr({cx:o,cy:n,r:t,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:o,cy:n,r:.85*t,"stroke-opacity":.8*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.breakdown.length>1){var s,a,r,l,h,c,b,u,d,p,f=.85*t,v=.5*-Math.PI;for(s in e.breakdown){p=e.breakdown[s]*Math.PI*2,a=o+Math.cos(v)*f,c=n+Math.sin(v)*f,r=o+Math.cos(v+p)*f,b=n+Math.sin(v+p)*f,l=o+Math.cos(v+p)*t,u=n+Math.sin(v+p)*t,h=o+Math.cos(v)*t,d=n+Math.sin(v)*t,v+=p;var g="M"+a+" "+c+" A"+f+","+f+" 0 "+(p>Math.PI?"1,1":"0,1")+" "+r+","+b+" L"+l+" "+u+" A"+t+","+t+" 0 "+(p>Math.PI?"1,0":"0,0")+" "+h+" "+d+" Z";e.breakdownArcs[s].attr({path:g,"stroke-opacity":.2*e.alpha,"fill-opacity":e.breakdownOpacities[s]*e.alpha})}}i?(e.label.show(),t<40?(e.label.find(".bubbletree-desc").hide(),e.label2.show()):(e.label.find(".bubbletree-desc").show(),e.label2.hide())):(e.label.hide(),e.label2.show()),e.label.css({width:2*t*.9+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-.9*t+"px",top:e.pos.y-.53*e.label.height()+"px"});var m=Math.max(80,3*t);e.label2.css({width:m+"px",opacity:e.alpha}),e.label2.css({left:o-.5*m+"px",top:n+t+"px"})}},this.hide=function(){var e,t=this;t.circle.remove(),t.dashedBorder.remove(),t.label.remove(),t.label2.remove(),t.visible=!1;for(e in t.breakdownArcs)t.breakdownArcs[e].remove()},l.show=function(){var e,t=this,i=Math.max(5,t.bubbleRad*t.bc.bubbleScale);t.circle=t.paper.circle(t.pos.x,t.pos.y,i).attr({stroke:!1,fill:t.color}),$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node,t.circle.node),t.dashedBorder=t.paper.circle(t.pos.x,t.pos.y,.85*i).attr({stroke:"#fff","stroke-opacity":.4*t.alpha,"stroke-dasharray":". ",fill:!1}),t.label=$('<div class="bubbletree-label '+t.node.id+'"><div class="bubbletree-amount">'+t.bc.config.formatValue(t.node.amount)+'</div><div class="bubbletree-desc">'+t.node.shortLabel+"</div></div>"),
t.bc.$container.append(t.label),t.node.children.length>1&&($(t.circle.node).css({cursor:"pointer"}),$(t.label).css({cursor:"pointer"})),t.label2=$('<div class="bubbletree-label2 '+t.node.id+'"><span>'+t.node.shortLabel+"</span></div>"),t.bc.$container.append(t.label2);var o=[t.circle.node,t.label];if(t.breakdown.length>1){t.breakdownArcs={};for(e in t.breakdown){var n=t.breakdownColors[e]?t.breakdownColors[e]:"#fff",s=t.paper.path("M 0 0 L 2 2").attr({fill:n,"fill-opacity":.4*Math.random()+.3,stroke:"#fff"});t.breakdownArcs[e]=s,$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node.breakdowns[e],s.node)}for(e in t.breakdownArcs)$(t.breakdownArcs[e].node).click(t.onclick.bind(t))}var a=new t.ns.MouseEventGroup(t,o);a.click(t.onclick.bind(t)),a.hover(t.onhover.bind(t)),a.unhover(t.onunhover.bind(t)),t.visible=!0},l.arcHover=function(e){var t,i=this,o=i.bc.$container[0],n=i.breakdownArcs,s=i.node.breakdowns;for(t in n)if(n[t].node==e.target)return e.node=s[t],e.bubblePos={x:i.pos.x,y:i.pos.y},e.mousePos={x:e.pageX-o.offsetLeft,y:e.pageY-o.offsetTop},e.target=i,e.type="SHOW",void i.bc.tooltip(e);vis4.log("cant find the breakdown node")},l.arcUnhover=function(e){var t,i=this,o=i.bc.$container[0],n=i.breakdownArcs,s=i.node.breakdowns;for(t in n)if(n[t].node==e.target)return e.node=s[t],e.bubblePos={x:i.pos.x,y:i.pos.y},e.mousePos={x:e.pageX-o.offsetLeft,y:e.pageY-o.offsetTop},e.type="HIDE",e.target=i,void i.bc.tooltip(e);vis4.log("cant find the breakdown node")},l.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Icon=function(e,t,i,o,n,s){var a=BubbleTree,r=a.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=o,l.angle=n,l.color=s,l.alpha=1,l.visible=!1,l.ns=a,l.pos=a.Vector(0,0),l.bubbleRad=r.amount2rad(this.node.amount),l.iconLoaded=!1,l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},l.init=function(){var e=this;e.getXY(),e.hasIcon=e.node.hasOwnProperty("icon"),e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.initialized=!0},l.show=function(){var e=this,t=e.pos.x,i=e.pos.y,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,o).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(t,i,Math.min(o-3,.95*o)).attr({stroke:"#ffffff","stroke-dasharray":"- "}),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.circle.node),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+e.bc.config.formatValue(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.bc.$container.append(e.label),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.label[0]),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.bc.$container.append(e.label2),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.visible=!0,e.hasIcon?e.iconLoaded?e.displayIcon():e.loadIcon():e.addOverlay()},l.loadIcon=function(){var e=this,t=new vis4loader;t.add(e.bc.config.rootPath+e.node.icon),t.load(e.iconLoadComplete.bind(e))},l.iconLoadComplete=function(e){var t,i,o,n=this;t=e.items[0].data,n.iconPathData="",t=$(t),o=$("path",t);for(i in o)o[i]&&$.isFunction(o[i].getAttribute)&&(n.iconPathData+=String(o[i].getAttribute("d"))+" ");n.iconLoaded=!0,n.displayIcon()},l.displayIcon=function(){var e,t=this;t.iconPaths=[],e=t.paper.path(t.iconPathData),e.attr({fill:"#fff",stroke:"none"}).translate(-50,-50),t.iconPaths.push(e),t.addOverlay()},l.addOverlay=function(){var e=this;if(e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff","fill-opacity":0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e)),$(e.label2).click(e.onclick.bind(e)),$.isPlainObject(e.bc.tooltip)){var t=e.bc.tooltip.content(e.node);$(e.overlay.node).qtip({position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:e.bc.tooltip.delay||100},content:{title:t[0],text:t[1]}})}},l.removeIcon=function(){var e,t=this;for(e in t.iconPaths)t.iconPaths[e].remove();t.iconPaths=[]},l.draw=function(){var e,t,i,o,n,s=this,a=Math.max(5,s.bubbleRad*s.bc.bubbleScale),r=(s.pos.x,s.pos.y,s.getXY(),s.pos.x),l=s.pos.y,h=s.hasIcon&&a>15,c=s.hasIcon?a>40:a>20;if(s.visible){s.circle.attr({cx:r,cy:l,r:a,"fill-opacity":s.alpha}),s.overlay&&s.overlay.attr({cx:r,cy:l,r:Math.max(10,a)}),s.node.children.length>1?s.dashedBorder.attr({cx:s.pos.x,cy:s.pos.y,r:Math.min(a-3,a-4),"stroke-opacity":.9*s.alpha}):s.dashedBorder.attr({"stroke-opacity":0}),c?(s.label.show(),h&&a<70||!h&&a<40?(s.label.find(".bubbletree-desc").hide(),s.label2.show()):(s.label.find(".bubbletree-desc").show(),s.label2.hide())):(s.label.hide(),s.label2.show()),n=h?l+.77*a-s.label.height():l-.5*s.label.height(),s.label.css({width:(h?1.2*a:2*a)+"px",opacity:s.alpha}),s.label.css({left:(h?r-.6*a:r-a)+"px",top:n+"px"});var b=Math.max(80,3*a);if(s.label2.css({width:b+"px",opacity:s.alpha}),s.label2.css({left:r-.5*b+"px",top:l+a+"px"}),s.hasIcon)if(h){i=(a-(c?.5*s.label.height():0))/60;for(e in s.iconPaths)t=s.iconPaths[e],o="1"==Raphael.version[0]?"scale("+i+") translate("+r/i+", "+(l+(c?s.label.height()*-.5:0))/i+")":"scale("+i+") translate("+(r/i-50)+", "+((l+(c?s.label.height()*-.5:0))/i-50)+")",t.node.setAttribute("transform",o),t.attr({"fill-opacity":s.alpha})}else for(e in s.iconPaths)t=s.iconPaths[e],t.attr({"fill-opacity":0})}},l.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1,e.hasIcon&&e.removeIcon(),e.overlay&&e.overlay.remove()},l.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",e.target=t,t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},l.init()},"object"==typeof module&&"object"==typeof module.exports&&(module.exports=BubbleTree);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludHJvLmpzIiwidmlzNC5qcyIsImJ1YmJsZXRyZWUuanMiLCJsYXlvdXQuanMiLCJsaW5lLmpzIiwibG9hZGVyLmpzIiwibW91c2VldmVudGdyb3VwLmpzIiwicmluZy5qcyIsInRyYW5zaXRpb25lci5qcyIsInV0aWxzLmpzIiwidmVjdG9yLmpzIiwicGxhaW4uanMiLCJkb251dC5qcyIsImljb24uanMiLCJvdXRyby5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiJCIsInJlcXVpcmUiLCJSYXBoYWVsIiwidW5kZWZpbmVkIiwiZSIsIlRXRUVOIiwidmlzNCIsImxvZyIsIndpbmRvdyIsImNvbnNvbGUiLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJzdHIydGltZSIsInMiLCJwIiwic3BsaXQiLCJNYXRoIiwicm91bmQiLCJEYXRlIiwiVVRDIiwidmFsIiwicHJlYyIsImQiLCJwb3ciLCJmb3JtYXROdW1iZXJfa3NlcCIsImZvcm1hdE51bWJlcl9kc2VwIiwiZm9ybWF0TnVtYmVyIiwibnIiLCJvdXQiLCJjIiwiaSIsImxlbmd0aCIsInBhcnNlVFNWIiwicmF3IiwiYXNPYmplY3QiLCJwcm9wcyIsImwiLCJsaW5lcyIsImRhdGEiLCJsaW5lIiwib2JqIiwidmFsdWVzIiwidHJpbSIsInB1c2giLCJtYXAiLCJhcnIiLCJpZENvbCIsIkRlbGF5ZWRUYXNrIiwibWUiLCJpbml0IiwiYXJncyIsInRhc2tBcmdzIiwiZnVuYyIsInNjb3BlIiwicnVubmluZyIsInRpbWVyIiwic2V0VGltZW91dCIsInJ1biIsImJpbmQiLCJjYW5jZWwiLCJjbGVhclRpbWVvdXQiLCJ2aXM0bG9hZGluZ0l0ZW0iLCJ1cmwiLCJpZCIsInR5cGUiLCJsZHIiLCJsb2FkZXIiLCJsb2FkIiwiZ2V0IiwicHJvY2Vzc0NvbnRlbnQiLCJjb250ZW50IiwicGFyc2VKU09OIiwiaXRlbUxvYWRlZCIsInZpczRsb2FkZXIiLCJpdGVtcyIsImJ5SUQiLCJhZGQiLCJpdGVtIiwiY2FsbGJhY2siLCJsb2FkZWQiLCJ2aXM0Y29sb3IiLCJtb2RlIiwiaCIsInYiLCJyIiwiZyIsImIiLCJ4IiwidSIsImJyIiwiSyIsIlBJIiwiY29zIiwidmFsdWUiLCJtYXgiLCJtaW4iLCJzZXRNb2RlIiwicmdiMmhzeCIsInNldEhleENvbG9yIiwiaGV4IiwiY2hhckF0IiwiaGV4MmludCIsImludDJyZ2IiLCJzZXRSR0JDb2xvciIsInJnYjJpbnQiLCJpbnQyaGV4Iiwic2V0SFNWQ29sb3IiLCJoc3YycmdiIiwic2V0SFNMQ29sb3IiLCJoc2wycmdiIiwic2V0SFNCQ29sb3IiLCJoc2IycmdiIiwic2V0SFNJQ29sb3IiLCJoc2kycmdiIiwib25DaGFuZ2UiLCJwYXJzZUludCIsInN1YnN0ciIsInN0ciIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJoc3gycmdiIiwicmdiMmhzdiIsInJnYjJoc2kiLCJyZ2IyaHNsIiwicmdiMmhzYiIsImh1ZSIsIl9ldmFsdWF0ZSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJicmlnaHRuZXNzIiwiaW50ZW5zaXR5IiwicHJvcE5hbWUiLCJpc05hTiIsIk51bWJlciIsInJnYiIsImhzbCIsImRlbHRhIiwiZiIsInEiLCJ0IiwiX3JnYiIsImZsb29yIiwidDEiLCJ0MiIsInQzIiwiX3JnYkx1bWluYW5jZSIsImN1cnJlbnRfYnJpZ2h0bmVzcyIsInRyZXNob2xkIiwibF9taW4iLCJsX21heCIsImxfZXN0IiwidHJ5cyIsImFicyIsInN1bSIsImFjb3MiLCJzcXJ0IiwiZnJvbUhleCIsImNvbG9yIiwiZnJvbVJHQiIsInNldFJHQm9sb3IiLCJmcm9tSFNWIiwiZnJvbUhTTCIsImZyb21IU0IiLCJmcm9tSFNJIiwiQnViYmxlVHJlZSIsImNvbmZpZyIsIm9uSG92ZXIiLCJvblVuSG92ZXIiLCJoaXN0b3J5Iiwib3B0aW9ucyIsInZlcnNpb24iLCIkY29udGFpbmVyIiwiY29udGFpbmVyIiwiZW1wdHkiLCJleHRlbmQiLCJmb3JtYXRWYWx1ZSIsIlV0aWxzIiwiY2xlYXJDb2xvcnMiLCJhdXRvQ29sb3JzIiwicm9vdFBhdGgiLCJtaW5SYWRpdXNMYWJlbHMiLCJtaW5SYWRpdXNBbW91bnRzIiwibWluUmFkaXVzSGlkZUxhYmVscyIsImN1dExhYmVsc0F0IiwidG9vbHRpcCIsInRvb2x0aXBDYWxsYmFjayIsInN0eWxlIiwiYnViYmxlU3R5bGVzIiwibnMiLCJub2Rlc0J5VXJsVG9rZW4iLCJub2RlTGlzdCIsImljb25zQnlVcmxUb2tlbiIsImdsb2JhbE5vZGVDb3VudGVyIiwiZGlzcGxheU9iamVjdHMiLCJidWJibGVTY2FsZSIsImdsb2JSb3RhdGlvbiIsImN1cnJlbnRZZWFyIiwiaW5pdFllYXIiLCJjdXJyZW50Q2VudGVyIiwiY3VycmVudFRyYW5zaXRpb24iLCJiYXNlVXJsIiwibG9hZERhdGEiLCJhamF4IiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwic2V0RGF0YSIsImluaXREYXRhIiwiaW5pdFBhcGVyIiwiaW5pdEJ1YmJsZXMiLCJpbml0VHdlZW4iLCJpbml0SGlzdG9yeSIsInJvb3QiLCJsZXZlbCIsInByZXByb2Nlc3NEYXRhIiwidHJhdmVyc2UiLCJ0cmVlUm9vdCIsIm1heE5vZGVzIiwibWF4Tm9kZXNQZXJMZXZlbCIsImNoaWxkcmVuIiwidG1wIiwic29ydENoaWxkcmVuIiwicmV2ZXJzZSIsImJyZWFrZG93biIsImtlZXAiLCJtb3ZlIiwibW92ZUFtb3VudCIsImFtb3VudCIsImxhYmVsIiwibmFtZSIsIm5vZGUiLCJpbmRleCIsInBjIiwidXJsVG9rZW5Tb3VyY2UiLCJzdHlsZXMiLCJmYW1vdW50IiwicGFyZW50IiwiZWFjaCIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsInRheG9ub215IiwiY291bnQiLCJyYW5kb20iLCJsZWZ0IiwicmlnaHQiLCJ0b2tlbiIsInVybFRva2VuIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwibWF4Q2hpbGRBbW91bnQiLCJzb3J0QnkiLCJjaGlsZCIsImJyZWFrZG93bnMiLCJicmVha2Rvd25zQnlOYW1lIiwiYmQiLCJhbHRlcm5hdGUiLCJvZGQiLCJjb21wYXJlTGFiZWxzIiwiY29tcGFyZUFtb3VudHMiLCJzb3J0IiwicG9wIiwic2hpZnQiLCJhIiwiYmFzZSIsIiRjIiwicnQiLCJ3Iiwid2lkdGgiLCJoZWlnaHQiLCJwYXBlciIsIm1heFJhZCIsIlZlY3RvciIsIm9yaWdpbiIsImEycmFkQmFzZSIsInJlc2l6ZSIsIm9uUmVzaXplIiwic2V0U2l6ZSIsInkiLCJjbGFzc05hbWUiLCJidWJibGVSYWQiLCJhbW91bnQycmFkIiwiY2hhbmdlVmlldyIsInR3ZWVuVGltZXIiLCJzZXRJbnRlcnZhbCIsImxvb3AiLCJpY29ucyIsIkJ1YmJsZXMiLCJidWJibGVDbGFzc2VzIiwiYnViYmxlVHlwZSIsImlzQXJyYXkiLCJnZXRCdWJibGVUeXBlIiwicm9vdEJ1YmJsZSIsImNyZWF0ZUJ1YmJsZSIsInRyYXZlcnNlQnViYmxlcyIsIlBpZXMiLCJEb251dCIsIk11bHRpIiwiSWNvbiIsIlBsYWluIiwicGFyZW50QnViYmxlIiwicmluZyIsImNoaWxkQnViYmxlIiwiZGEiLCJjYSIsImEycmFkIiwiY2hpbGRSYWRTdW0iLCJvYSIsInR3b3BpIiwiY3JlYXRlUmluZyIsInBvcyIsInN0cm9rZSIsInN0cm9rZS1kYXNoYXJyYXkiLCJjZW50ZXJBbmdsZSIsInJhZCIsImFuZ2xlIiwiYnViYmxlIiwiY2xhc3NJbmRleCIsImF0dHIiLCJSaW5nIiwidHIiLCJ1dGlscyIsIm8iLCJMYXlvdXQiLCJnZXRCdWJibGUiLCJnZXRSaW5nIiwidW5pZnkiLCJ1bmlmeUFuZ2xlIiwiZ3JhbmRwYSIsInNpYmxpbmciLCJjbiIsInJhZDEiLCJyYWQyIiwic3JhZCIsInNhbmciLCJ0Z3RTY2FsZSIsInJhZFN1bSIsImxlZnRUdXJuIiwicmlnaHRUdXJuIiwiaGlkZUZsYWciLCJjaGlsZFJvdGF0aW9uIiwib3JpZ05vZGUiLCJzYSIsInNob3J0ZXN0QW5nbGVUbyIsIm1heWJlUm9vdCIsImh3IiwiYW8iLCJzaWJsQ3V0IiwiYXNpbiIsInZpc2libGUiLCJhbHBoYSIsImhpZGUiLCJzaG93IiwiVHJhbnNpdGlvbmVyIiwiY2hhbmdlTGF5b3V0IiwiaXNGdW5jdGlvbiIsImZpcnN0Tm9kZUNhbGxiYWNrIiwicGkiLCJzaG9ydGVzdEFuZ2xlIiwic2hvcnRlc3RMZWZ0VHVybiIsInNob3J0ZXN0UmlnaHRUdXJuIiwia2VlcEhpZGRlbiIsImdldERpc3BsYXlPYmplY3QiLCJ1cmxDaGFuZ2VkIiwidW5lc2NhcGUiLCJmcmVzaFVybCIsImhhc2giLCJpbmRleE9mIiwib25Db21wbGV0ZSIsImNoYW5nZVVybCIsInBhcnRzIiwibmF2aWdhdGVUbyIsImdldFVybEZvck5vZGUiLCJmcm9tVXJsQ2hhbmdlIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImpvaW4iLCJvbk5vZGVDbGljayIsIm5vZGVDbGlja0NhbGxiYWNrIiwiY2xlYW4iLCJyZW1vdmUiLCJ1cGRhdGUiLCJFcnJvciIsIlN0eWxlcyIsIm9iamVjdHMiLCJ0b0hpZGUiLCJ0b1Nob3ciLCJMaW5lIiwiYmMiLCJmcm9tUmFkIiwidG9SYWQiLCJnZXRYWSIsIngxIiwieTEiLCJzaW4iLCJ4MiIsInkyIiwicGF0aCIsImRyYXciLCJMb2FkZXIiLCJjb250ZXh0IiwiYnViYmxlQ2hhcnQiLCJpbnN0YW5jZSIsIk1vdXNlRXZlbnRHcm91cCIsInRhcmdldCIsIm1lbWJlcnMiLCJjbGljayIsIm1lbSIsImNsaWNrQ2FsbGJhY2siLCJoYW5kbGVDbGljayIsImV2dCIsIm9yaWdFdmVudCIsIm1vdXNlRXZlbnRHcm91cCIsImhvdmVyIiwiaG92ZXJDYWxsYmFjayIsImhhbmRsZU1lbWJlckhvdmVyIiwiaGFuZGxlTWVtYmVyVW5Ib3ZlciIsInVuaG92ZXIiLCJ1bmhvdmVyQ2FsbGJhY2siLCJ3YXNIb3ZlcmluZyIsIm1vdXNlSXNPdmVyIiwiaGFuZGxlTWVtYmVySG92ZXJEZWxheWVkIiwiaGFuZGxlTWVtYmVyVW5Ib3ZlckRlbGF5ZWQiLCJhZGRNZW1iZXIiLCJyZW1vdmVNZW1iZXIiLCJ1bmJpbmQiLCJjaXJjbGUiLCJjeCIsImN5Iiwic3Ryb2tlLW9wYWNpdHkiLCJ0b0JhY2siLCJkdXJhdGlvbiIsImNvbXBsZXRlQ2FsbGJhY2tzIiwibGF5b3V0IiwidHdlZW4iLCJUd2VlbiIsInRvUHJvcHMiLCJ0byIsImVhc2luZyIsIkVhc2luZyIsIkV4cG9uZW50aWFsIiwiT3V0Iiwib25VcGRhdGUiLCJfY29tcGxldGVkIiwic3RhcnQiLCJjYWxsYmFja3MiLCJuIiwicHJlZml4Iiwibm9ybWFsaXplIiwibGVuIiwiY2xvbmUiLCJidWJibGVjaGFydCIsInJhZGl1cyIsInNob3J0TGFiZWwiLCJpbml0aWFsaXplZCIsIm9uY2xpY2siLCJvbmhvdmVyIiwiYnViYmxlUG9zIiwibW91c2VQb3MiLCJwYWdlWCIsIm9mZnNldExlZnQiLCJwYWdlWSIsIm9mZnNldFRvcCIsIm9udW5ob3ZlciIsImZpbGwtb3BhY2l0eSIsImRhc2hlZEJvcmRlciIsImZpbmQiLCJsYWJlbDIiLCJjc3MiLCJvcGFjaXR5IiwidG9wIiwiZmlsbCIsImFwcGVuZCIsImN1cnNvciIsImxpc3QiLCJtZ3JvdXAiLCJhZGRPdmVybGF5Iiwib3ZlcmxheSIsImF0dHJzIiwic3ZnIiwic2V0QXR0cmlidXRlIiwiYnJlYWtkb3duT3BhY2l0aWVzIiwiYnJlYWtkb3duQ29sb3JzIiwic2hvd0xhYmVsIiwieDAiLCJ4MyIsInkwIiwieTMiLCJpciIsImJyZWFrZG93bkFyY3MiLCJpbml0VG9vbHRpcCIsImNvbCIsImFyYyIsImFyY0hvdmVyIiwiYXJjcyIsImFyY1VuaG92ZXIiLCJpY29uTG9hZGVkIiwiaGFzSWNvbiIsImRpc3BsYXlJY29uIiwibG9hZEljb24iLCJpY29uIiwiaWNvbkxvYWRDb21wbGV0ZSIsImoiLCJwYXRocyIsImljb25QYXRoRGF0YSIsImdldEF0dHJpYnV0ZSIsIlN0cmluZyIsImljb25QYXRocyIsInRyYW5zbGF0ZSIsImlzUGxhaW5PYmplY3QiLCJ0dCIsInF0aXAiLCJwb3NpdGlvbiIsInZpZXdwb3J0IiwiYWRqdXN0IiwiZGVsYXkiLCJ0aXRsZSIsInRleHQiLCJyZW1vdmVJY29uIiwic2NhbGUiLCJ0cmFuc2Zvcm0iLCJseSIsInNob3dJY29uIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBLGdCQUFBQSxTQUFBLGdCQUFBQSxRQUFBQyxRQUFBLENBQ0EsR0FBQUMsR0FBQUMsUUFBQSxVQUNBQyxRQUFBQyxNQUNBLEtBQ0FELFFBQUFELFFBQUEsV0FDQSxNQUFBRyxHQUNBRixRQUFBRCxRQUFBLG1CQUVBLEdBQUFJLE9BQUFKLFFBQUEsWUNQQSxHQUFBSyxNQUFBLFlBRUFBLE1BQUFDLElBQUEsV0FDQSxJQUNBLE9BQUFDLE9BQUFDLFNBQUFBLFFBQUFGLElBQUFHLE1BQUFDLEtBQUFDLFdBQ0EsTUFBQVIsTUFHQUUsS0FBQU8sU0FBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUFELEVBQUFFLE1BQUEsSUFDQSxPQUFBQyxNQUFBQyxNQUFBLEtBQUFDLEtBQUFDLElBQUEsSUFBQUwsRUFBQSxHQUFBQSxFQUFBLEdBQUEsRUFBQUEsRUFBQSxNQUdBVCxLQUFBWSxNQUFBLFNBQUFHLEVBQUFDLEdBQ0EsR0FBQUMsR0FBQU4sS0FBQU8sSUFBQSxHQUFBRixFQUNBLE9BQUFMLE1BQUFDLE1BQUFHLEVBQUFFLEdBQUFBLEdBRUFqQixLQUFBbUIsa0JBQUEsSUFDQW5CLEtBQUFvQixrQkFBQSxJQUNBcEIsS0FBQXFCLGFBQUEsU0FBQUMsRUFBQVYsR0FFQVUsRUFBQSxHQUFBQSxDQUVBLEtBQUEsR0FEQUMsR0FBQSxHQUFBQyxFQUFBLEVBQ0FDLEVBQUFILEVBQUFJLE9BQUEsRUFBQUQsR0FBQSxFQUFBQSxJQUNBRCxFQUFBLEdBQUFBLEVBQUFGLEVBQUFJLFFBQUFGLEVBQUEsR0FBQSxJQUFBRCxFQUFBdkIsS0FBQW1CLGtCQUFBSSxHQUNBQSxFQUFBRCxFQUFBRyxHQUFBRixFQUNBQyxHQUVBLE9BQUFELElBRUF2QixLQUFBMkIsU0FBQSxTQUFBQyxFQUFBQyxHQUNBLEdBRUFDLEdBQ0FDLEVBSEFDLEVBQUFKLEVBQUFs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QSxRQUFBQyxVQUNBRCxPQUFBQyxRQUFBc0siLCJmaWxlIjoiYnViYmxldHJlZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAoKHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcpICYmICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT0gJ29iamVjdCcpKSB7XG4gIHZhciAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XG4gIHZhciBSYXBoYWVsID0gdW5kZWZpbmVkO1xuICB0cnkge1xuICAgIFJhcGhhZWwgPSByZXF1aXJlKCdyYXBoYWVsJyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBSYXBoYWVsID0gcmVxdWlyZSgnd2VicGFjay1yYXBoYWVsJyk7XG4gIH1cbiAgdmFyIFRXRUVOID0gcmVxdWlyZSgndHdlZW4uanMnKTtcbn0iLCJcbnZhciB2aXM0ID0gZnVuY3Rpb24oKSB7fTtcblxudmlzNC5sb2cgPSBmdW5jdGlvbigpIHtcblx0dHJ5IHtcblx0XHRpZiAod2luZG93LmNvbnNvbGUgIT09IG51bGwpIGNvbnNvbGUubG9nLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdH0gY2F0Y2ggKGUpIHt9O1xufTtcblxudmlzNC5zdHIydGltZSA9IGZ1bmN0aW9uKHMpIHtcblx0dmFyIHAgPSBzLnNwbGl0KFwiLlwiKTtcblx0cmV0dXJuIE1hdGgucm91bmQoRGF0ZS5VVEMoMjAwMCtwWzBdLCBwWzFdLTEsIHBbMl0pKjAuMDAxKTtcbn07XG5cbnZpczQucm91bmQgPSBmdW5jdGlvbih2YWwsIHByZWMpIHtcblx0dmFyIGQgPSBNYXRoLnBvdygxMCwgcHJlYyk7XG5cdHJldHVybiBNYXRoLnJvdW5kKHZhbCpkKS9kO1xufTtcbnZpczQuZm9ybWF0TnVtYmVyX2tzZXAgPSAnLic7XG52aXM0LmZvcm1hdE51bWJlcl9kc2VwID0gJywnO1xudmlzNC5mb3JtYXROdW1iZXIgPSBmdW5jdGlvbihuciwgcm91bmQpIHtcblx0Ly9pZiAobnIgPiA5OTk5OTkgJiYgcm91bmQpIHJldHVybiAoJycrdmlzNC5yb3VuZChuci8xMDAwMDAwLDEpKS5yZXBsYWNlKFwiLlwiLHZpczQuZm9ybWF0TnVtYmVyX2RzZXApK1wiJm5ic3A7TWlvXCI7XG5cdG5yID0gJycrbnI7XG5cdHZhciBvdXQgPSAnJywgYz0wO1xuXHRmb3IgKHZhciBpPW5yLmxlbmd0aC0xO2k+PTA7aS0tKSB7XG5cdFx0aWYgKGMgPiAwICYmIGMgPCBuci5sZW5ndGggJiYgYyUzPT0wKSBvdXQgPSB2aXM0LmZvcm1hdE51bWJlcl9rc2VwICsgb3V0O1xuXHRcdG91dCA9IG5yW2ldICsgb3V0O1xuXHRcdGMrKztcblx0fVxuXHRyZXR1cm4gb3V0O1xufTtcbnZpczQucGFyc2VUU1YgPSBmdW5jdGlvbihyYXcsIGFzT2JqZWN0KSB7XG5cdHZhciBsaW5lcyA9IHJhdy5zcGxpdChcIlxcblwiKTtcblx0dmFyIGRhdGEgPSBbXTtcblx0dmFyIHByb3BzO1xuXHR2YXIgbDtcblx0Zm9yIChsPTA7IGw8bGluZXMubGVuZ3RoOyBsKyspIHtcblx0XHR2YXIgbGluZSA9IGxpbmVzW2xdO1xuXHRcdGlmIChsaW5lICE9PSAnJykge1xuXHRcdFx0Ly9pZiAobGluZSAhPSBsaW5lc1tsaW5lcy5sZW5ndGgtMV0pIGxpbmUgPSBTdHJpbmdVdGlsLnRyaW0obGluZSk7XG5cdFx0XHRpZiAoYXNPYmplY3QpIHtcblx0XHRcdFx0aWYgKGwgPT09IDApIHByb3BzID0gbGluZS5zcGxpdChcIlxcdFwiKTtcblx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0dmFyIG9iaiA9IHsgfTtcblx0XHRcdFx0XHR2YXIgdmFsdWVzID0gbGluZS5zcGxpdChcIlxcdFwiKTtcblx0XHRcdFx0XHRpZiAodmFsdWVzLmxlbmd0aCAhPSBwcm9wcy5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdHJldHVybiBcIndyb25nIHRzdiBmb3JtYXRcIjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Zm9yICh2YXIgcCA9IDA7IHAgPCBwcm9wcy5sZW5ndGg7IHArKykge1xuXHRcdFx0XHRcdFx0b2JqWyQudHJpbShwcm9wc1twXSldID0gJC50cmltKHZhbHVlc1twXSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGEucHVzaChvYmopO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkYXRhLnB1c2gobGluZS5zcGxpdChcIlxcdFwiKSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHJldHVybiBkYXRhO1xufTtcblxudmlzNC5tYXAgPSBmdW5jdGlvbihhcnIsIGlkQ29sKSB7XG5cdHZhciBtYXAgPSB7fTtcblx0Zm9yICh2YXIgaT0wOyBpPGFyci5sZW5ndGg7IGkrKykge1xuXHRcdG1hcFthcnJbaV1baWRDb2xdXSA9IGFycltpXTtcblx0fVxuXHRyZXR1cm4gbWFwO1xufTtcblxudmlzNC5EZWxheWVkVGFzayA9IGZ1bmN0aW9uKC8qIGRlbGF5LCBzY29wZSwgZnVuYywgYXJncyAqLykge1xuXG5cdHZhciBtZSA9IHRoaXM7XG5cblx0bWUuaW5pdCA9IGZ1bmN0aW9uKGFyZ3MpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCB0YXNrQXJncyA9IFtdO1xuXHRcdGZvciAodmFyIGkgaW4gYXJncykge1xuXHRcdFx0aWYgKGkgPiAyKSB0YXNrQXJncy5wdXNoKGFyZ3NbaV0pO1xuXHRcdH1cblx0XHRtZS5mdW5jID0gYXJnc1syXTtcblx0XHRtZS5zY29wZSA9IGFyZ3NbMV07XG5cdFx0bWUuYXJncyA9IHRhc2tBcmdzO1xuXHRcdG1lLnJ1bm5pbmcgPSB0cnVlO1xuXHRcdG1lLnRpbWVyID0gd2luZG93LnNldFRpbWVvdXQodGhpcy5ydW4uYmluZChtZSksIGFyZ3NbMF0pO1xuXHR9O1xuXG5cdG1lLnJ1biA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0bWUuZnVuYy5hcHBseShtZS5zY29wZSwgbWUuYXJncyk7XG5cdFx0bWUucnVubmluZyA9IGZhbHNlO1xuXHR9O1xuXG5cdG1lLmNhbmNlbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZpczQubG9nKCdjYW5jZWxpbmcgdGltZXInLCB0aGlzKTtcblx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuXHRcdHRoaXMucnVubmluZyA9IGZhbHNlO1xuXHR9O1xuXG5cdG1lLmluaXQoYXJndW1lbnRzKTtcbn07XG5cbnZhciB2aXM0bG9hZGluZ0l0ZW0gPSBmdW5jdGlvbih1cmwsIGlkLCB0eXBlLCBsZHIpIHtcblx0dGhpcy51cmwgPSB1cmw7IHRoaXMuaWQgPSBpZDsgdGhpcy50eXBlID0gdHlwZTsgdGhpcy5sb2FkZXIgPSBsZHI7XG5cblx0dGhpcy5sb2FkID0gZnVuY3Rpb24oKSB7XG5cdFx0JC5nZXQodGhpcy51cmwsIHRoaXMucHJvY2Vzc0NvbnRlbnQuYmluZCh0aGlzKSk7XG5cdH07XG5cblx0dGhpcy5wcm9jZXNzQ29udGVudCA9IGZ1bmN0aW9uKGNvbnRlbnQpIHtcblx0XHRpZiAodGhpcy50eXBlID09ICd0c3YnKSB0aGlzLmRhdGEgPSB2aXM0LnBhcnNlVFNWKGNvbnRlbnQsIHRydWUpO1xuXHRcdGVsc2UgaWYgKHRoaXMudHlwZSA9PSAnanNvbicpIHRoaXMuZGF0YSA9ICh0eXBlb2YoY29udGVudCkgPT0gXCJzdHJpbmdcIikgPyAkLnBhcnNlSlNPTihjb250ZW50KSA6IGNvbnRlbnQ7XG5cdFx0ZWxzZSB0aGlzLmRhdGEgPSBjb250ZW50O1xuXHRcdHRoaXMubG9hZGVyLml0ZW1Mb2FkZWQoKTtcblx0fTtcblxufTtcblxuLypcbiAqIHVzYWdlOlxuICpcbiAqIHZhciBsZHIgPSBuZXcgdmlzNGxvYWRlcigpO1xuICogbGRyLmFkZCgnZGF0YS50eHQnLCAnaWQxJyk7XG4gKiBsZHIuYWRkKCdkYXRhL2VtcGxveWVzLnRzdicsICdlbXBsb3llcycsICd0c3YnKTtcbiAqIGxkci5hZGQoJ2RhdGEvbGlzdC5qc29uJywgJ2xpc3QnLCAnanNvbicpO1xuICogbGRyLmxvYWQoZnVuY3Rpb24obGRyKVxuICpcbiAqL1xudmFyIHZpczRsb2FkZXIgPSBmdW5jdGlvbigpIHtcblx0dGhpcy5pdGVtcyA9IFtdOyB0aGlzLmJ5SUQgPSB7fTtcblxuXHR0aGlzLmFkZCA9IGZ1bmN0aW9uKHVybCwgaWQsIHR5cGUpIHtcblx0XHRpZiAodHlwZSA9PT0gbnVsbCkgdHlwZSA9ICd0ZXh0Jztcblx0XHR2YXIgaXRlbSA9IG5ldyB2aXM0bG9hZGluZ0l0ZW0odXJsLCBpZCwgdHlwZSwgdGhpcyk7XG5cdFx0dGhpcy5pdGVtcy5wdXNoKGl0ZW0pO1xuXHRcdHRoaXMuYnlJRFtpZF0gPSBpdGVtO1xuXHR9O1xuXG5cdHRoaXMubG9hZCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuXHRcdHRoaXMubG9hZGVkID0gMDtcblx0XHRmb3IgKHZhciBpPTA7aTx0aGlzLml0ZW1zLmxlbmd0aDtpKyspIHtcblx0XHRcdHRoaXMuaXRlbXNbaV0ubG9hZCgpO1xuXHRcdH1cblx0fTtcblxuXHR0aGlzLml0ZW1Mb2FkZWQgPSBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmxvYWRlZCsrO1xuXHRcdGlmICh0aGlzLmxvYWRlZCA9PSB0aGlzLml0ZW1zLmxlbmd0aCkgdGhpcy5jYWxsYmFjayh0aGlzKTtcblx0fTtcblxuXHR0aGlzLmdldCA9IGZ1bmN0aW9uKGlkKSB7XG5cdFx0cmV0dXJuIHRoaXMuYnlJRFtpZF0uZGF0YTtcblx0fTtcbn07XG5cbi8qXG4gKiB2aXM0Y29sb3IuZnJvbUhleChcIiNGRjAwMDBcIikuc2F0dXJhdGlvbihcIiouNVwiKS5saWdodG5lc3MoLjgpLmh1ZShcIisxMFwiKS5oZXg7XG4gKlxuICpcbiAqL1xuXG52YXIgdmlzNGNvbG9yID0gZnVuY3Rpb24obW9kZSkge1xuXG5cdHRoaXMuaCA9IDA7IHRoaXMucyA9IDAuNTsgdGhpcy5sID0gMC44OyB0aGlzLnYgPSAxOyB0aGlzLmkgPSAxOyB0aGlzLnIgPSAyNTU7IHRoaXMuZyA9IDA7IHRoaXMuYiA9IDA7XG5cdHRoaXMueCA9IFwiI0ZGMDAwMFwiOyB0aGlzLnUgPSAwOyB0aGlzLmJyID0gMTsgdGhpcy5LID0gMS8xODAqTWF0aC5QSTtcblx0aWYgKG1vZGUgPT0gJ2hzaScgfHwgbW9kZSA9PSAnaHNsJyB8fCBtb2RlID09ICdoc2InIHx8IG1vZGUgPT0gJ2hzdicpIHRoaXMubW9kZSA9IG1vZGU7XG5cblx0dGhpcy5sb2cgPSBmdW5jdGlvbihzKSB7XG5cdFx0aWYgKHdpbmRvdy5jb25zb2xlICE9PSBudWxsKSBjb25zb2xlLmxvZyhzKTtcblx0fTtcblxuXHR0aGlzLmNvcyA9IGZ1bmN0aW9uKGQpIHtcblx0XHRyZXR1cm4gTWF0aC5jb3MoZCp0aGlzLkspO1xuXHR9O1xuXG5cdHRoaXMudHJpbSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0cmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHZhbHVlKSk7XG5cdH07XG5cblx0dGhpcy5zZXRNb2RlID0gZnVuY3Rpb24obW9kZSkge1xuXHRcdGlmIChtb2RlICE9ICdoc3YnICYmIG1vZGUgIT0gJ2hzaScgJiYgbW9kZSAhPSAnaHNsJyAmJiBtb2RlICE9ICdoc2InKSB7XG5cdFx0XHR0aGlzLmxvZyhcInVua25vd24gY29sb3IgbW9kZSBcIittb2RlKTtcblx0XHR9XG5cdFx0dGhpcy5tb2RlID0gbW9kZTtcblx0XHQvLyByZWNhbGMgaHN4LWNvbG9yXG5cdFx0dGhpcy5yZ2IyaHN4KCk7XG5cdH07XG5cblx0dGhpcy5zZXRIZXhDb2xvciA9IGZ1bmN0aW9uKGhleCkge1xuXHRcdGlmIChoZXguY2hhckF0KDApICE9IFwiI1wiKSBoZXggPSBcIiNcIitoZXg7XG5cdFx0aWYgKGhleC5sZW5ndGggPT0gNCkgaGV4ID0gXCIjXCIraGV4LmNoYXJBdCgxKStoZXguY2hhckF0KDEpK2hleC5jaGFyQXQoMikraGV4LmNoYXJBdCgyKStoZXguY2hhckF0KDMpK2hleC5jaGFyQXQoMyk7XG5cdFx0aWYgKGhleC5sZW5ndGggIT0gNykgdGhpcy5sb2coXCJpbnZhbGlkIGhleCBjb2xvclwiKTtcblx0XHR0aGlzLnggPSBoZXg7XG5cdFx0dGhpcy5oZXgyaW50KCk7XG5cdFx0dGhpcy5pbnQycmdiKCk7XG5cdFx0dGhpcy5yZ2IyaHN4KCk7XG5cdH07XG5cblx0dGhpcy5zZXRSR0JDb2xvciA9IGZ1bmN0aW9uKHIsZyxiKSB7XG5cdFx0dGhpcy5yID0gcjsgdGhpcy5iID0gYjsgdGhpcy5nID0gZztcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0XHR0aGlzLnJnYjJoc3goKTtcblx0fTtcblxuXHR0aGlzLnNldEhTVkNvbG9yID0gZnVuY3Rpb24oaCxzLHYpIHtcblx0XHRpZiAodGhpcy5tb2RlICE9ICdoc3YnKSB0aGlzLm1vZGUgPSAnaHN2Jztcblx0XHR0aGlzLmggPSBoOyB0aGlzLnMgPSB0aGlzLnRyaW0ocyk7IHRoaXMudiA9IHRoaXMudHJpbSh2KTtcblx0XHR0aGlzLmhzdjJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0fTtcblxuXHR0aGlzLnNldEhTTENvbG9yID0gZnVuY3Rpb24oaCxzLGwpIHtcblx0XHRpZiAodGhpcy5tb2RlICE9ICdoc2wnKSB0aGlzLm1vZGUgPSAnaHNsJztcblx0XHR0aGlzLmggPSBoOyB0aGlzLnMgPSB0aGlzLnRyaW0ocyk7IHRoaXMubCA9IHRoaXMudHJpbShsKTtcblx0XHR0aGlzLmhzbDJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0fTtcblxuXHR0aGlzLnNldEhTQkNvbG9yID0gZnVuY3Rpb24oaCxzLGIpIHtcblx0XHRpZiAodGhpcy5tb2RlICE9ICdoc2InKSB0aGlzLm1vZGUgPSAnaHNiJztcblx0XHR0aGlzLmggPSBoOyB0aGlzLnMgPSB0aGlzLnRyaW0ocyk7IHRoaXMuYiA9IHRoaXMudHJpbShiKTtcblx0XHR0aGlzLmhzYjJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0fTtcblxuXHR0aGlzLnNldEhTSUNvbG9yID0gZnVuY3Rpb24oaCxzLGkpIHtcblx0XHRpZiAodGhpcy5tb2RlICE9ICdoc2knKSB0aGlzLm1vZGUgPSAnaHNpJztcblx0XHR0aGlzLmggPSBoOyB0aGlzLnMgPSB0aGlzLnRyaW0ocyk7IHRoaXMuaSA9IHRoaXMudHJpbShpKTtcblx0XHR0aGlzLmhzaTJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0fTtcblxuXHQvLyBwcml2YXRlIG1ldGhvZHNcblxuXHR0aGlzLm9uQ2hhbmdlID0gZnVuY3Rpb24oKSB7IH07XG5cblx0dGhpcy5yZ2IyaW50ID0gZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy51ID0gdGhpcy5yIDw8IDE2IHwgdGhpcy5nIDw8IDggfCB0aGlzLmI7XG5cdFx0dGhpcy5vbkNoYW5nZSgpO1xuXHR9O1xuXG5cdHRoaXMuaW50MnJnYiA9IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMuciA9IHRoaXMudSA+PiAxNjtcblx0XHR0aGlzLmcgPSB0aGlzLnUgPj4gOCAmIDB4RkY7XG5cdFx0dGhpcy5iID0gdGhpcy51ICYgMHhGRjtcblx0fTtcblxuXHR0aGlzLmhleDJpbnQgPSBmdW5jdGlvbigpIHtcblx0XHR0aGlzLnUgPSBwYXJzZUludCh0aGlzLnguc3Vic3RyKDEpLCAxNik7XG5cdFx0dGhpcy5vbkNoYW5nZSgpO1xuXHR9O1xuXG5cdHRoaXMuaW50MmhleCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBzdHIgPSBcIjAwMDAwMFwiICsgdGhpcy51LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuXHRcdHRoaXMueCA9IFwiI1wiICsgc3RyLnN1YnN0cihzdHIubGVuZ3RoIC0gNik7XG5cdFx0dGhpcy5vbkNoYW5nZSgpO1xuXHR9O1xuXG5cdHRoaXMuaW50MnJnYiA9IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMuciA9IHRoaXMudSA+PiAxNjtcblx0XHR0aGlzLmcgPSB0aGlzLnUgPj4gOCAmIDB4RkY7XG5cdFx0dGhpcy5iID0gdGhpcy51ICYgMHhGRjtcblx0fTtcblxuXHR0aGlzLmhzeDJyZ2IgPSBmdW5jdGlvbigpIHtcblx0XHRzd2l0Y2ggKHRoaXMubW9kZSkge1xuXHRcdFx0Y2FzZSAnaHN2JzogdGhpcy5oc3YycmdiKCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaHNpJzogdGhpcy5oc2kycmdiKCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaHNsJzogdGhpcy5oc2wycmdiKCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaHNiJzogdGhpcy5oc2IycmdiKCk7IGJyZWFrO1xuXHRcdH1cblx0fTtcblxuXHR0aGlzLnJnYjJoc3ggPSBmdW5jdGlvbigpIHtcblx0XHRzd2l0Y2ggKHRoaXMubW9kZSkge1xuXHRcdFx0Y2FzZSAnaHN2JzogdGhpcy5yZ2IyaHN2KCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaHNpJzogdGhpcy5yZ2IyaHNpKCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaHNsJzogdGhpcy5yZ2IyaHNsKCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaHNiJzogdGhpcy5yZ2IyaHNiKCk7IGJyZWFrO1xuXHRcdH1cblx0fTtcblxuXHR0aGlzLmh1ZSA9IGZ1bmN0aW9uKGgpIHtcblx0XHR0aGlzLl9ldmFsdWF0ZShoLCBcImhcIik7XG5cdFx0dGhpcy5oc3gycmdiKCk7XG5cdFx0dGhpcy5yZ2IyaW50KCk7XG5cdFx0dGhpcy5pbnQyaGV4KCk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG5cblx0dGhpcy5zYXR1cmF0aW9uID0gZnVuY3Rpb24ocykge1xuXHRcdHRoaXMuX2V2YWx1YXRlKHMsIFwic1wiKTtcblx0XHR0aGlzLmhzeDJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fTtcblxuXHR0aGlzLmxpZ2h0bmVzcyA9IGZ1bmN0aW9uKGwpIHtcblx0XHRpZiAodGhpcy5tb2RlICE9IFwiaHNsXCIpIHsgdGhpcy5sb2coXCJXQVJOSU5HOiBsaWdodG5lc3MgcHJvcGVydHkgbm90IGF2YWlsYWJsZSBpbiBcIit0aGlzLm1vZGUrXCIgbW9kZVwiKTsgcmV0dXJuOyB9XG5cdFx0dGhpcy5fZXZhbHVhdGUobCwgXCJsXCIpO1xuXHRcdHRoaXMuaHN4MnJnYigpO1xuXHRcdHRoaXMucmdiMmludCgpO1xuXHRcdHRoaXMuaW50MmhleCgpO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdHRoaXMuYnJpZ2h0bmVzcyA9IGZ1bmN0aW9uKGJyKSB7XG5cdFx0aWYgKHRoaXMubW9kZSAhPSBcImhzYlwiKSB7IHRoaXMubG9nKFwiV0FSTklORzogYnJpZ2h0bmVzcyBwcm9wZXJ0eSBub3QgYXZhaWxhYmxlIGluIFwiK3RoaXMubW9kZStcIiBtb2RlXCIpOyByZXR1cm47IH1cblx0XHR0aGlzLl9ldmFsdWF0ZShiciwgXCJiclwiKTtcblx0XHR0aGlzLmhzeDJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fTtcblxuXHR0aGlzLnZhbHVlID0gZnVuY3Rpb24odikge1xuXHRcdGlmICh0aGlzLm1vZGUgIT0gXCJoc3ZcIikgeyB0aGlzLmxvZyhcIldBUk5JTkc6IHZhbHVlIHByb3BlcnR5IG5vdCBhdmFpbGFibGUgaW4gXCIrdGhpcy5tb2RlK1wiIG1vZGVcIik7IHJldHVybjsgfVxuXHRcdHRoaXMuX2V2YWx1YXRlKHYsIFwidlwiKTtcblx0XHR0aGlzLmhzeDJyZ2IoKTtcblx0XHR0aGlzLnJnYjJpbnQoKTtcblx0XHR0aGlzLmludDJoZXgoKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fTtcblxuXHR0aGlzLmludGVuc2l0eSA9IGZ1bmN0aW9uKGkpIHtcblx0XHRpZiAodGhpcy5tb2RlICE9IFwiaHNpXCIpIHsgdGhpcy5sb2coXCJXQVJOSU5HOiBpbnRlbnNpdHkgcHJvcGVydHkgbm90IGF2YWlsYWJsZSBpbiBcIit0aGlzLm1vZGUrXCIgbW9kZVwiKTsgcmV0dXJuOyB9XG5cdFx0dGhpcy5fZXZhbHVhdGUoaSwgXCJpXCIpO1xuXHRcdHRoaXMuaHN4MnJnYigpO1xuXHRcdHRoaXMucmdiMmludCgpO1xuXHRcdHRoaXMuaW50MmhleCgpO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdHRoaXMuX2V2YWx1YXRlID0gZnVuY3Rpb24odmFsLCBwcm9wTmFtZSkge1xuXHRcdGlmICh0eXBlb2YodmFsKSA9PSBcInN0cmluZ1wiKSB7XG5cdFx0XHRpZiAodmFsLmNoYXJBdCgwKSA9PSBcIitcIiAmJiAhaXNOYU4odmFsLnN1YnN0cigxKSkpIHtcblx0XHRcdFx0dGhpc1twcm9wTmFtZV0gPSBOdW1iZXIodGhpc1twcm9wTmFtZV0pICsgTnVtYmVyKHZhbC5zdWJzdHIoMSkpO1xuXHRcdFx0fSBlbHNlIGlmICh2YWwuY2hhckF0KDApID09IFwiLVwiICYmICFpc05hTih2YWwuc3Vic3RyKDEpKSkge1xuXHRcdFx0XHR0aGlzW3Byb3BOYW1lXSA9IHRoaXNbcHJvcE5hbWVdIC0gTnVtYmVyKHZhbC5zdWJzdHIoMSkpO1xuXHRcdFx0fSBpZiAodmFsLmNoYXJBdCgwKSA9PSBcIipcIiAmJiAhaXNOYU4odmFsLnN1YnN0cigxKSkpIHtcblx0XHRcdFx0dGhpc1twcm9wTmFtZV0gPSB0aGlzW3Byb3BOYW1lXSAqIE51bWJlcih2YWwuc3Vic3RyKDEpKTtcblx0XHRcdH0gZWxzZSBpZiAodmFsLmNoYXJBdCgwKSA9PSBcIi9cIiAmJiAhaXNOYU4odmFsLnN1YnN0cigxKSkpIHtcblx0XHRcdFx0dGhpc1twcm9wTmFtZV0gPSB0aGlzW3Byb3BOYW1lXSAvIE51bWJlcih2YWwuc3Vic3RyKDEpKTtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKCFpc05hTih2YWwpKSB7XG5cdFx0XHR0aGlzW3Byb3BOYW1lXSA9IE51bWJlcih2YWwpO1xuXHRcdH1cblx0fTtcblxuXHR0aGlzLnJnYiA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gW3RoaXMucix0aGlzLmcsdGhpcy5iXTsgfTtcblx0dGhpcy5oc2wgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFt0aGlzLmgsdGhpcy5zLHRoaXMubF07IH07XG5cblx0Ly8gaHN2IG1hZ2ljXG5cblx0dGhpcy5yZ2IyaHN2ID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1pbiA9IE1hdGgubWluKE1hdGgubWluKHRoaXMuciwgdGhpcy5nKSwgdGhpcy5iKSxcblx0XHRcdG1heCA9IE1hdGgubWF4KE1hdGgubWF4KHRoaXMuciwgdGhpcy5nKSwgdGhpcy5iKSxcblx0XHRcdGRlbHRhID0gbWF4IC0gbWluO1xuXG5cdFx0dGhpcy52ID0gbWF4LzI1NTtcblx0XHR0aGlzLnMgPSBkZWx0YSAvIG1heDtcblx0XHRpZiAodGhpcy5zID09PSAwKSB7XG5cdFx0XHR0aGlzLmggPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICh0aGlzLnIgPT0gbWF4KSB0aGlzLmggPSAodGhpcy5nIC0gdGhpcy5iKSAvIGRlbHRhO1xuXHRcdFx0aWYgKHRoaXMuZyA9PSBtYXgpIHRoaXMuaCA9IDIrKHRoaXMuYiAtIHRoaXMucikgLyBkZWx0YTtcblx0XHRcdGlmICh0aGlzLmIgPT0gbWF4KSB0aGlzLmggPSA0Kyh0aGlzLnIgLSB0aGlzLmcpIC8gZGVsdGE7XG5cdFx0XHR0aGlzLmggKj0gNjA7XG5cdFx0XHRpZiAodGhpcy5oIDwgMCkgdGhpcy5oICs9IDM2MDtcblx0XHR9XG5cdH07XG5cblx0dGhpcy5oc3YycmdiID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGggPSB0aGlzLmgsIHMgPSB0aGlzLnMsIF9yZ2IgPSB0aGlzLl9yZ2IsIHYgPSB0aGlzLnYqMjU1LCBpLCBmLCBwLCBxLCB0O1xuXG5cdFx0aWYgKHRoaXMucyA9PT0gMCAmJiBpc05hTihoKSkge1xuXHRcdFx0dGhpcy5yID0gdGhpcy5nID0gdGhpcy5iID0gdjtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKGggPT0gMzYwKSBoID0gMDtcblx0XHRcdGggLz0gNjA7XG5cdFx0XHRpID0gTWF0aC5mbG9vcihoKTtcblx0XHRcdGYgPSBoIC0gaTtcblx0XHRcdHAgPSB2ICogKDEgLSBzKTtcblx0XHRcdHEgPSB2ICogKDEgLSBzICogZik7XG5cdFx0XHR0ID0gdiAqICgxIC0gcyAqICgxIC0gZikpO1xuXG5cdFx0XHRzd2l0Y2ggKGkpIHtcblx0XHRcdFx0Y2FzZSAwOiBfcmdiKHYsIHQsIHApOyBicmVhaztcblx0XHRcdFx0Y2FzZSAxOiBfcmdiKHEsIHYsIHApOyBicmVhaztcblx0XHRcdFx0Y2FzZSAyOiBfcmdiKHAsIHYsIHQpOyBicmVhaztcblx0XHRcdFx0Y2FzZSAzOiBfcmdiKHAsIHEsIHYpOyBicmVhaztcblx0XHRcdFx0Y2FzZSA0OiBfcmdiKHQsIHAsIHYpOyBicmVhaztcblx0XHRcdFx0Y2FzZSA1OiBfcmdiKHYsIHAsIHEpO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblxuXHR0aGlzLl9yZ2IgPSBmdW5jdGlvbihyLGcsYikge1xuXHRcdHRoaXMuciA9IHI7IHRoaXMuZyA9IGc7IHRoaXMuYiA9IGI7XG5cdH07XG5cdC8vIGhzbCBtYWdpY1xuXG5cdHRoaXMucmdiMmhzbCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciByID0gdGhpcy5yIC8gMjU1LFxuXHRcdFx0ZyA9IHRoaXMuZyAvIDI1NSxcblx0XHRcdGIgPSB0aGlzLmIgLyAyNTUsXG5cdFx0XHRtaW4gPSBNYXRoLm1pbihNYXRoLm1pbihyLCBnKSwgYiksXG5cdFx0XHRtYXggPSBNYXRoLm1heChNYXRoLm1heChyLCBnKSwgYik7XG5cblx0XHR0aGlzLmwgPSAobWF4ICsgbWluKSAvIDI7XG5cdFx0aWYgKG1heCA9PSBtaW4pIHtcblx0XHRcdHRoaXMucyA9IDA7XG5cdFx0XHR0aGlzLmggPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICh0aGlzLmwgPCAwLjUpIHtcblx0XHRcdFx0dGhpcy5zID0gKG1heCAtIG1pbikgLyAobWF4ICsgbWluKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMucyA9IChtYXggLSBtaW4pIC8gKDIgLSBtYXggLSBtaW4pO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZiAociA9PSBtYXgpIHRoaXMuaCA9IChnIC0gYikgLyAobWF4IC0gbWluKTtcblx0XHRlbHNlIGlmIChnID09IG1heCkgdGhpcy5oID0gMiArIChiIC0gcikgLyAobWF4IC0gbWluKTtcblx0XHRlbHNlIGlmIChiID09IG1heCkgdGhpcy5oID0gNCArIChyIC0gZykgLyAobWF4IC0gbWluKTtcblxuXHRcdHRoaXMuaCAqPSA2MDtcblx0XHRpZiAodGhpcy5oIDwgMCkgdGhpcy5oICs9IDM2MDtcblx0fTtcblxuXHR0aGlzLmhzbDJyZ2IgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAodGhpcy5zID09PSAwKSB7XG5cdFx0XHR0aGlzLnIgPSB0aGlzLmcgPSB0aGlzLmIgPSB0aGlzLmwqMjU1O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgdDEsIHQyLCB0MyA9IFswLDAsMF0sIGMgPSBbMCwwLDBdO1xuXHRcdFx0aWYgKHRoaXMubCA8IDAuNSkge1xuXHRcdFx0XHR0MiA9IHRoaXMubCAqICgxICsgdGhpcy5zKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHQyID0gdGhpcy5sICsgdGhpcy5zIC0gdGhpcy5sICogdGhpcy5zO1xuXHRcdFx0fVxuXHRcdFx0dDEgPSAyICogdGhpcy5sIC0gdDI7XG5cdFx0XHR2YXIgaCA9IHRoaXMuaCAvIDM2MDtcblx0XHRcdHQzWzBdID0gaCArIDEgLyAzO1xuXHRcdFx0dDNbMV0gPSBoO1xuXHRcdFx0dDNbMl0gPSBoIC0gMSAvIDM7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkrKykge1xuXHRcdFx0XHRpZiAodDNbaV0gPCAwKSB0M1tpXSArPSAxO1xuXHRcdFx0XHRpZiAodDNbaV0gPiAxKSB0M1tpXSAtPSAxO1xuXG5cdFx0XHRcdGlmICg2ICogdDNbaV0gPCAxKSBjW2ldID0gdDEgKyAodDIgLSB0MSkgKiA2ICogdDNbaV07XG5cdFx0XHRcdGVsc2UgaWYgKDIgKiB0M1tpXSA8IDEpIGNbaV0gPSB0Mjtcblx0XHRcdFx0ZWxzZSBpZiAoMyAqIHQzW2ldIDwgMikgY1tpXSA9IHQxICsgKHQyIC0gdDEpICogKCgyIC8gMykgLSB0M1tpXSkgKiA2O1xuXHRcdFx0XHRlbHNlIGNbaV0gPSB0MTtcblx0XHRcdH1cblx0XHRcdHRoaXMuciA9IGNbMF0gKiAyNTU7XG5cdFx0XHR0aGlzLmcgPSBjWzFdICogMjU1O1xuXHRcdFx0dGhpcy5iID0gY1syXSAqIDI1NTtcblx0XHR9XG5cdH07XG5cblx0Ly8gaHNiIG1hZ2ljXG5cblx0dGhpcy5yZ2IyaHNiID0gZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy5yZ2IyaHNsKCk7XG5cdFx0dGhpcy5iciA9IHRoaXMuX3JnYkx1bWluYW5jZSgpO1xuXHR9O1xuXG5cdHRoaXMuX3JnYkx1bWluYW5jZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiAoMC4yMTI2ICogdGhpcy5yICsgMC43MTUyICogdGhpcy5nICsgMC4wNzIyICogdGhpcy5iKSAvIDI1NTtcblx0fTtcblxuXHR0aGlzLmhzYjJyZ2IgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgdHJlc2hvbGQgPSAwLjAwMTtcblx0XHR2YXIgbF9taW4gPSAwLCBsX21heCA9IDEsIGxfZXN0ID0gMC41O1xuXHRcdHZhciBjdXJyZW50X2JyaWdodG5lc3M7XG5cblx0XHQvLyBmaXJzdCB0cnlcblx0XHR0aGlzLmwgPSBsX2VzdDtcblx0XHR0aGlzLmhzbDJyZ2IoKTtcblx0XHRjdXJyZW50X2JyaWdodG5lc3MgPSB0aGlzLl9yZ2JMdW1pbmFuY2UoKTtcblx0XHR2YXIgdHJ5cyA9IDA7XG5cblx0XHR3aGlsZSAoTWF0aC5hYnMoY3VycmVudF9icmlnaHRuZXNzIC0gdGhpcy5icikgPiB0cmVzaG9sZCAmJiB0cnlzIDwgMTAwKSB7XG5cblx0XHRcdGlmIChjdXJyZW50X2JyaWdodG5lc3MgPiB0aGlzLmJyKSB7XG5cdFx0XHRcdC8vIHRvbyBicmlnaHQsIG5leHQgdHJ5IGRhcmtlclxuXHRcdFx0XHRsX21heCA9IGxfZXN0O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ly8gdG9vIGRhcmssIG5leHQgdHJ5IGJyaWdodGVyXG5cdFx0XHRcdGxfbWluID0gbF9lc3Q7XG5cdFx0XHR9XG5cdFx0XHRsX2VzdCA9IChsX21pbiArIGxfbWF4KSAvIDI7XG5cdFx0XHR0aGlzLmwgPSBsX2VzdDtcblx0XHRcdHRoaXMuaHNsMnJnYigpO1xuXHRcdFx0Y3VycmVudF9icmlnaHRuZXNzID0gdGhpcy5fcmdiTHVtaW5hbmNlKCk7XG5cdFx0XHR0cnlzKys7XG5cdFx0fVxuXHRcdHRoaXMuYnIgPSBjdXJyZW50X2JyaWdodG5lc3M7XG5cdH07XG5cblx0Ly8gaHNpIG1hZ2ljXG5cblx0dGhpcy5yZ2IyaHNpID0gZnVuY3Rpb24oKSB7IC8vIGh0dHA6Ly9mb3VyaWVyLmVuZy5obWMuZWR1L2UxNjEvbGVjdHVyZXMvY29sb3Jwcm9jZXNzaW5nL25vZGUzLmh0bWxcblx0XHR2YXIgbWluLCByID0gdGhpcy5yLCBnID0gdGhpcy5nLCBiID0gdGhpcy5iLFxuXHRcdFx0bWF4ID0gTWF0aC5tYXgoTWF0aC5tYXgociwgZyksIGIpLFxuXHRcdFx0c3VtID0gciArIGcgKyBiLFxuXHRcdFx0ZGVsdGEgPSBtYXggLSBtaW47XG5cblx0XHRyID0gciAvIHN1bTtcblx0XHRnID0gZyAvIHN1bTtcblx0XHRiID0gYiAvIHN1bTtcblxuXHRcdG1pbiA9IE1hdGgubWluKE1hdGgubWluKHIsIGcpLCBiKTtcblx0XHQvL3RyYWNlKCdyZ2IgPSAnLHIsZyxiLCcgbWluID0gJyArIG1pbik7XG5cblx0XHR0aGlzLmkgPSAociArIGcgKyBiKSAvIDc2NTtcblx0XHR0aGlzLmggPSB0aGlzLmFjb3MoKHIgLSAwLjUqZyAtIDAuNSpiKSAvIE1hdGguc3FydCggKHIgLSBnKSAqIChyIC0gZykgKyAociAtIGIpICogKGcgLSBiKSkgKTtcblx0XHR0aGlzLnMgPSAxIC0gMyAqIG1pbjtcblxuXHRcdGlmIChiID4gZykgdGhpcy5oID0gMzYwIC0gdGhpcy5oO1xuXHR9O1xuXG5cdHRoaXMuaHNpMnJnYiA9IGZ1bmN0aW9uKCkgeyAvLyBodHRwOi8vZm91cmllci5lbmcuaG1jLmVkdS9lMTYxL2xlY3R1cmVzL2NvbG9ycHJvY2Vzc2luZy9ub2RlNC5odG1sXG5cdFx0dmFyIGggPSB0aGlzLmgsaT10aGlzLmkscz10aGlzLnMsIHIsIGIsIGcsIGNvcyA9IHRoaXMuY29zO1xuXG5cdFx0aWYgKGggPD0gMTIwKSB7XG5cdFx0XHRiID0gKDEgLSBzKSAvIDM7XG5cdFx0XHRyID0gKDEgKyAocyAqIGNvcyhoKSkgLyBjb3MoNjAgLSBoKSkgLyAzO1xuXHRcdFx0ZyA9IDEgLSAoYiArIHIpO1xuXHRcdH0gZWxzZSBpZiAoaCA8PSAyNDApIHtcblx0XHRcdGggLT0gMTIwO1xuXHRcdFx0ciA9ICgxIC0gcykgLyAzO1xuXHRcdFx0ZyA9ICgxICsgKHMgKiBjb3MoaCkpIC8gY29zKDYwIC0gaCkpIC8gMztcblx0XHRcdGIgPSAxIC0gKHIgKyBnKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aCAtPSAyNDA7XG5cdFx0XHRnID0gKDEgLSBzKSAvIDM7XG5cdFx0XHRiID0gKDEgKyAocyAqIGNvcyhoKSkgLyBjb3MoNjAgLSBoKSkgLyAzO1xuXHRcdFx0ciA9IDEgLSAoZyArIGIpO1xuXHRcdH1cblx0XHRyID0gTWF0aC5taW4oMjU1LCByKmkqMyoyNTUpO1xuXHRcdGcgPSBNYXRoLm1pbigyNTUsIGcqaSozKjI1NSk7XG5cdFx0YiA9IE1hdGgubWluKDI1NSwgYippKjMqMjU1KTtcblx0fTtcbn07XG5cbi8vIHN0YXRpYyBjb25zdHJ1Y3RvcnNcblxudmlzNGNvbG9yLmZyb21IZXggPSBmdW5jdGlvbihjb2xvciwgbW9kZSkge1xuXHRpZiAobW9kZSA9PSBudWxsKSBtb2RlID0gJ2hzbCc7XG5cdHZhciBjID0gbmV3IHZpczRjb2xvcihtb2RlKTtcblx0Yy5zZXRIZXhDb2xvcihjb2xvcik7XG5cdHJldHVybiBjO1xufTtcblxudmlzNGNvbG9yLmZyb21SR0IgPSBmdW5jdGlvbihyLCBnLCBiLCBtb2RlKSB7XG5cdGlmIChtb2RlID09PSBudWxsKSBtb2RlID0gJ2hzbCc7XG5cdHZhciBjID0gbmV3IHZpczRjb2xvcihtb2RlKTtcblx0Yy5zZXRSR0JvbG9yKHIsZyxiKTtcblx0cmV0dXJuIGM7XG59O1xuXG52aXM0Y29sb3IuZnJvbUhTViA9IGZ1bmN0aW9uKGgscyx2LCBtb2RlKSB7XG5cdGlmIChtb2RlID09PSBudWxsKSBtb2RlID0gJ2hzbCc7XG5cdHZhciBjID0gbmV3IHZpczRjb2xvcihtb2RlKTtcblx0Yy5zZXRIU1ZDb2xvcihoLHMsdik7XG5cdHJldHVybiBjO1xufTtcblxudmlzNGNvbG9yLmZyb21IU0wgPSBmdW5jdGlvbihoLHMsbCwgbW9kZSkge1xuXHRpZiAobW9kZSA9PT0gbnVsbCkgbW9kZSA9ICdoc2wnO1xuXHR2YXIgYyA9IG5ldyB2aXM0Y29sb3IobW9kZSk7XG5cdGMuc2V0SFNMQ29sb3IoaCxzLGwpO1xuXHRyZXR1cm4gYztcbn07XG5cbnZpczRjb2xvci5mcm9tSFNCID0gZnVuY3Rpb24oaCxzLGIsIG1vZGUpIHtcblx0aWYgKG1vZGUgPT09IG51bGwpIG1vZGUgPSAnaHNsJztcblx0dmFyIGMgPSBuZXcgdmlzNGNvbG9yKG1vZGUpO1xuXHRjLnNldEhTQkNvbG9yKGgscyxiKTtcblx0cmV0dXJuIGM7XG59O1xuXG52aXM0Y29sb3IuZnJvbUhTSSA9IGZ1bmN0aW9uKGgscyxpLCBtb2RlKSB7XG5cdGlmIChtb2RlID09PSBudWxsKSBtb2RlID0gJ2hzbCc7XG5cdHZhciBjID0gbmV3IHZpczRjb2xvcihtb2RlKTtcblx0Yy5zZXRIU0lDb2xvcihoLHMsaSk7XG5cdHJldHVybiBjO1xufTtcbiIsIi8qIVxuICogQnViYmxlVHJlZSAyLjAuMlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMSBHcmVnb3IgQWlzY2ggKGh0dHA6Ly9kcml2ZW4tYnktZGF0YS5uZXQpXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqXG4gKi9cbi8qanNoaW50IHVuZGVmOiB0cnVlLCBicm93c2VyOnRydWUsIGpxdWVyeTogdHJ1ZSwgZGV2ZWw6IHRydWUsIHNtYXJ0dGFiczogdHJ1ZSAqL1xuLypnbG9iYWwgUmFwaGFlbCwgVFdFRU4sIHZpczQsIHZpczRjb2xvciwgdmlzNGxvYWRlciAqL1xuXG52YXIgQnViYmxlVHJlZSA9IGZ1bmN0aW9uKGNvbmZpZywgb25Ib3Zlciwgb25VbkhvdmVyKSB7XG5cblx0dmFyIGhpc3RvcnkgPSAkLmhpc3RvcnkgfHwge1xuICAgIGNhbGxiYWNrOiBudWxsLFxuICAgIG9wdGlvbnM6IG51bGwsXG4gICAgaW5pdDogZnVuY3Rpb24oY2FsbGJhY2ssIG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICB0aGlzLmxvYWQoJy8nKTtcbiAgICB9LFxuICAgIGxvYWQ6IGZ1bmN0aW9uKHVybCkge1xuICAgICAgaWYgKHR5cGVvZiB0aGlzLmNhbGxiYWNrID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjayh1cmwpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuXHR2YXIgbWUgPSB0aGlzO1xuXG5cdG1lLnZlcnNpb24gPSBcIjIuMC40XCI7XG5cblx0bWUuJGNvbnRhaW5lciA9ICQoY29uZmlnLmNvbnRhaW5lcikuZW1wdHkoKTtcblxuXHRtZS5jb25maWcgPSAkLmV4dGVuZCh7XG4gICAgLy8gRm9ybWF0IG5vZGUgdmFsdWVcbiAgICBmb3JtYXRWYWx1ZTogQnViYmxlVHJlZS5VdGlscy5mb3JtYXROdW1iZXIsXG4gICAgLy8gQ2xlYXIgY29sb3JzIGZvciBhbGwgbm9kZXMgKGlzIGRvaW5nIGJlZm9yZSBhdXRvQ29sb3JzISlcbiAgICBjbGVhckNvbG9yczogZmFsc2UsXG4gICAgLy8gSWYgbm9kZSBoYXMgbm8gY29sb3IgLSBhdXRvbWF0aWNhbGx5IGFzc2lnbiBpdFxuICAgIGF1dG9Db2xvcnM6IGZhbHNlLFxuXHRcdC8vIHRoaXMgaXMgd2hlcmUgd2UgbG9vayBmb3IgdGhlIGljb25zXG5cdFx0cm9vdFBhdGg6ICcnLFxuXHRcdC8vIHNob3cgZnVsbCBsYWJlbHMgaW5zaWRlIGJ1YmJsZXMgd2l0aCBtaW4gcmFkaXVzIG9mIDQwcHhcblx0XHRtaW5SYWRpdXNMYWJlbHM6IDQwLFxuXHRcdC8vIGp1c3Qgc2hvdyB0aGUgYW1vdW50cyBpbnNpZGUgYnViYmxlcyB3aXRoIG1pbiByYWRpdXMgb2YgMjBweFxuXHRcdG1pblJhZGl1c0Ftb3VudHM6IDIwLFxuXHRcdC8vIGhpZGUgbGFiZWxzIGF0IGFsbCBmb3IgYnViYmxlcyB3aXRoIG1pbiByYWRpdXMgb2YgMCAoZGVhY3RpdmF0ZWQgYnkgZGVmKVxuXHRcdG1pblJhZGl1c0hpZGVMYWJlbHM6IDAsXG5cdFx0Ly8gdHJpbSBsYWJlbHMgYWZ0ZXIgNTAgY2hhcmFjdGVyc1xuXHRcdGN1dExhYmVsc0F0OiA1MFxuXHR9LCBjb25maWcpO1xuXG5cdC8qXG5cdCAqIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIHdoZW4gdGhlIHVzZXIgaG92ZXJzIGEgYnViYmxlXG5cdCAqL1xuXHQvL21lLm9uSG92ZXIgPSBvbkhvdmVyO1xuXG5cdC8vbWUub25VbkhvdmVyID0gb25VbkhvdmVyO1xuXHRtZS50b29sdGlwID0gY29uZmlnLnRvb2x0aXBDYWxsYmFjayA/IGNvbmZpZy50b29sdGlwQ2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXHRpZiAoY29uZmlnLnRvb2x0aXApIG1lLnRvb2x0aXAgPSBjb25maWcudG9vbHRpcDtcblxuXHQvKlxuXHQgKiBzdHlsZXNoZWV0IEpTT04gdGhhdCBjb250YWlucyBjb2xvcnMgYW5kIGljb25zIGZvciB0aGUgYnViYmxlc1xuXHQgKi9cblx0bWUuc3R5bGUgPSBjb25maWcuYnViYmxlU3R5bGVzO1xuXG5cdG1lLm5zID0gQnViYmxlVHJlZTtcblxuXHQvKlxuXHQgKiBoYXNobWFwIG9mIGFsbCBub2RlcyBieSB1cmwgdG9rZW5cblx0ICovXG5cdG1lLm5vZGVzQnlVcmxUb2tlbiA9IHt9O1xuXG5cdC8qXG5cdCAqIGZsYXQgYXJyYXkgb2YgYWxsIG5vZGVzXG5cdCAqL1xuXHRtZS5ub2RlTGlzdCA9IFtdO1xuXG5cdG1lLmljb25zQnlVcmxUb2tlbiA9IHt9O1xuXG5cdG1lLmdsb2JhbE5vZGVDb3VudGVyID0gMDtcblxuXHRtZS5kaXNwbGF5T2JqZWN0cyA9IFtdO1xuXG5cdG1lLmJ1YmJsZVNjYWxlID0gMTtcblxuXHRtZS5nbG9iUm90YXRpb24gPSAwO1xuXG5cdG1lLmN1cnJlbnRZZWFyID0gY29uZmlnLmluaXRZZWFyO1xuXG5cdG1lLmN1cnJlbnRDZW50ZXIgPSB1bmRlZmluZWQ7XG5cblx0bWUuY3VycmVudFRyYW5zaXRpb24gPSB1bmRlZmluZWQ7XG5cblx0bWUuYmFzZVVybCA9ICcnO1xuXG5cdC8qXG5cdCAqIEBwdWJsaWMgbG9hZERhdGFcblx0ICovXG5cdG1lLmxvYWREYXRhID0gZnVuY3Rpb24odXJsKSB7XG5cdFx0JC5hamF4KHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0ZGF0YVR5cGU6ICdqc29uJyxcblx0XHRcdHN1Y2Nlc3M6IHRoaXMuc2V0RGF0YS5iaW5kKHRoaXMpXG5cdFx0fSk7XG5cdH07XG5cblx0Lypcblx0ICogaXMgZWl0aGVyIGNhbGxlZCBkaXJlY3RseSBvciBieSAkLmFqYXggd2hlbiBkYXRhIGpzb24gZmlsZSBpcyBsb2FkZWRcblx0ICovXG5cdG1lLnNldERhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblx0XHRpZiAoIWRhdGEpIGRhdGEgPSBtZS5jb25maWcuZGF0YTsgLy8gSUUgZml4XG5cdFx0bWUuaW5pdERhdGEoZGF0YSk7XG5cdFx0bWUuaW5pdFBhcGVyKCk7XG5cdFx0bWUuaW5pdEJ1YmJsZXMoKTtcblx0XHRtZS5pbml0VHdlZW4oKTtcblx0XHRtZS5pbml0SGlzdG9yeSgpO1xuXHR9O1xuXG5cdC8qXG5cdCAqIGluaXRpYWxpemVzIHRoZSBkYXRhIHRyZWUsIGFkZHMgbGlua3MgdG8gcGFyZW50IG5vZGUgZm9yIGVhc2llciB0cmF2ZXJzYWwgZXRjXG5cdCAqL1xuXHRtZS5pbml0RGF0YSA9IGZ1bmN0aW9uKHJvb3QpIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdHJvb3QubGV2ZWwgPSAwO1xuXHRcdG1lLnByZXByb2Nlc3NEYXRhKHJvb3QpO1xuXHRcdG1lLnRyYXZlcnNlKHJvb3QsIDApO1xuXHRcdG1lLnRyZWVSb290ID0gcm9vdDtcblx0fTtcblxuXHRtZS5wcmVwcm9jZXNzRGF0YSA9IGZ1bmN0aW9uKHJvb3QpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCBtYXhOb2RlcyA9IG1lLmNvbmZpZy5tYXhOb2Rlc1BlckxldmVsO1xuXHRcdGlmIChtYXhOb2Rlcykge1xuXHRcdFx0aWYgKG1heE5vZGVzIDwgcm9vdC5jaGlsZHJlbi5sZW5ndGgpIHtcblx0XHRcdFx0Ly8gdGFrZSB0aGUgc21hbGxlc3Qgbm9kZXNcblx0XHRcdFx0Ly8gc29ydCBjaGlsZHJlblxuXHRcdFx0XHR2YXIgdG1wID0gbWUuc29ydENoaWxkcmVuKHJvb3QuY2hpbGRyZW4pO1xuXHRcdFx0XHR0bXAucmV2ZXJzZSgpO1xuXHRcdFx0XHR2YXIga2VlcCA9IFtdLCBtb3ZlID0gW10sIG1vdmVBbW91bnQgPSAwLCBicmVha2Rvd247XG5cdFx0XHRcdGZvciAodmFyIGkgaW4gcm9vdC5jaGlsZHJlbikge1xuXHRcdFx0XHRcdGlmIChpIDwgbWF4Tm9kZXMpIHtcblx0XHRcdFx0XHRcdGtlZXAucHVzaChyb290LmNoaWxkcmVuW2ldKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0bW92ZS5wdXNoKHJvb3QuY2hpbGRyZW5baV0pO1xuXHRcdFx0XHRcdFx0bW92ZUFtb3VudCArPSBNYXRoLm1heCgwLCByb290LmNoaWxkcmVuW2ldLmFtb3VudCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJvb3QuY2hpbGRyZW4gPSBrZWVwO1xuXHRcdFx0XHRyb290LmNoaWxkcmVuLnB1c2goe1xuXHRcdFx0XHRcdCdsYWJlbCc6ICdNb3JlJyxcblx0XHRcdFx0XHQnbmFtZSc6ICdtb3JlJyxcblx0XHRcdFx0XHQnYW1vdW50JzogbW92ZUFtb3VudCxcblx0XHRcdFx0XHQnY2hpbGRyZW4nOiBtb3ZlLFxuXHRcdFx0XHRcdCdicmVha2Rvd24nOiBicmVha2Rvd25cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG5cdC8qXG5cdCAqIHVzZWQgZm9yIHJlY3Vyc2l2ZSB0cmVlIHRyYXZlcnNhbFxuXHQgKi9cblx0bWUudHJhdmVyc2UgPSBmdW5jdGlvbihub2RlLCBpbmRleCkge1xuXHRcdHZhciBjLCBjaGlsZCwgcGMsIG1lID0gdGhpcywgdXJsVG9rZW5Tb3VyY2UsIHN0eWxlcyA9IG1lLmNvbmZpZy5idWJibGVTdHlsZXM7XG5cblx0XHQvL2lmIChub2RlLmFtb3VudCA8PSAwKSByZXR1cm47XG5cblx0XHRpZiAoIW5vZGUuY2hpbGRyZW4pIG5vZGUuY2hpbGRyZW4gPSBbXTtcblxuXHRcdC8vIHN0b3JlIG5vZGUgaW4gZmxhdCBub2RlIGxpc3Rcblx0XHRtZS5ub2RlTGlzdC5wdXNoKG5vZGUpO1xuXG5cdFx0bm9kZS5mYW1vdW50ID0gbWUuY29uZmlnLmZvcm1hdFZhbHVlKG5vZGUuYW1vdW50KTtcblx0XHRpZiAobm9kZS5wYXJlbnQpIG5vZGUubGV2ZWwgPSBub2RlLnBhcmVudC5sZXZlbCArIDE7XG5cblx0XHRpZiAobWUuY29uZmlnLmNsZWFyQ29sb3JzID09PSB0cnVlKSBub2RlLmNvbG9yID0gZmFsc2U7XG5cblx0XHRpZiAoc3R5bGVzKSB7XG5cblx0XHRcdHZhciBwcm9wcyA9IFsnY29sb3InLCAnc2hvcnRMYWJlbCcsICdpY29uJ107XG5cblx0XHRcdCQuZWFjaChwcm9wcywgZnVuY3Rpb24gKHAsIHByb3ApIHtcblx0XHRcdFx0aWYgKHN0eWxlcy5oYXNPd25Qcm9wZXJ0eSgnaWQnKSAmJiBzdHlsZXMuaWQuaGFzT3duUHJvcGVydHkobm9kZS5pZCkgJiYgc3R5bGVzLmlkW25vZGUuaWRdLmhhc093blByb3BlcnR5KHByb3ApKSB7XG5cdFx0XHRcdFx0Ly8gdXNlIGNvbG9yIGJ5IGlkXG5cdFx0XHRcdFx0bm9kZVtwcm9wXSA9IHN0eWxlcy5pZFtub2RlLmlkXVtwcm9wXTtcblx0XHRcdFx0fSBlbHNlIGlmIChub2RlLmhhc093blByb3BlcnR5KCduYW1lJykgJiYgc3R5bGVzLmhhc093blByb3BlcnR5KCduYW1lJykgJiYgc3R5bGVzLm5hbWUuaGFzT3duUHJvcGVydHkobm9kZS5uYW1lKSAmJiBzdHlsZXMubmFtZVtub2RlLm5hbWVdLmhhc093blByb3BlcnR5KHByb3ApKSB7XG5cdFx0XHRcdFx0Ly8gdXNlIGNvbG9yIGJ5IGlkXG5cdFx0XHRcdFx0bm9kZVtwcm9wXSA9IHN0eWxlcy5uYW1lW25vZGUubmFtZV1bcHJvcF07XG5cdFx0XHRcdH0gZWxzZSBpZiAobm9kZS5oYXNPd25Qcm9wZXJ0eSgndGF4b25vbXknKSAmJiBzdHlsZXMuaGFzT3duUHJvcGVydHkobm9kZS50YXhvbm9teSkgJiYgc3R5bGVzW25vZGUudGF4b25vbXldLmhhc093blByb3BlcnR5KG5vZGUubmFtZSkgJiYgc3R5bGVzW25vZGUudGF4b25vbXldW25vZGUubmFtZV0uaGFzT3duUHJvcGVydHkocHJvcCkpIHtcblx0XHRcdFx0XHRub2RlW3Byb3BdID0gc3R5bGVzW25vZGUudGF4b25vbXldW25vZGUubmFtZV1bcHJvcF07XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGlmICghbm9kZS5jb2xvcikge1xuICAgICAgaWYgKG1lLmNvbmZpZy5hdXRvQ29sb3JzKSB7XG4gICAgICAgIGlmIChub2RlLmxldmVsID09IDApIHtcbiAgICAgICAgICBub2RlLmNvbG9yID0gdmlzNGNvbG9yLmZyb21IU0woNDUsIDAuOSwgMC41KS54O1xuICAgICAgICB9IGVsc2VcbiAgICAgICAgaWYgKG5vZGUubGV2ZWwgPT0gMSkge1xuICAgICAgICAgIHZhciBjb3VudCA9IG5vZGUucGFyZW50LmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgICAgICBub2RlLmNvbG9yID0gdmlzNGNvbG9yLmZyb21IU0woaW5kZXggLyBjb3VudCAqIDM2MCwgMC43LCAwLjUpLng7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbm9kZS5jb2xvciA9IHZpczRjb2xvci5mcm9tSGV4KG5vZGUucGFyZW50LmNvbG9yKS5saWdodG5lc3MoJyonICsgKDAuNStNYXRoLnJhbmRvbSgpICogMC41KSkueDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gdXNlIGNvbG9yIGZyb20gcGFyZW50IG5vZGUgaWYgbm8gb3RoZXIgbWF0Y2ggYXZhaWxhYmxlXG4gICAgICAgIGlmIChub2RlLmxldmVsID4gMCkgbm9kZS5jb2xvciA9IG5vZGUucGFyZW50LmNvbG9yO1xuICAgICAgICBlbHNlIG5vZGUuY29sb3IgPSAnIzk5OTk5OSc7XG4gICAgICB9XG5cdFx0fVxuXHRcdC8vIGxpZ2h0ZW4gdXAgdGhlIGNvbG9yIGlmIHRoZXJlIGFyZSBubyBjaGlsZHJlblxuXHRcdGlmIChub2RlLmNoaWxkcmVuLmxlbmd0aCA8IDIgJiYgbm9kZS5jb2xvcikge1xuXHRcdFx0bm9kZS5jb2xvciA9IHZpczRjb2xvci5mcm9tSGV4KG5vZGUuY29sb3IpLnNhdHVyYXRpb24oJyouODYnKS54O1xuXHRcdH1cblxuXHRcdGlmIChub2RlLmxldmVsID4gMCkge1xuXHRcdFx0cGMgPSBub2RlLnBhcmVudC5jaGlsZHJlbjtcblx0XHRcdGlmIChwYy5sZW5ndGggPiAxKSB7XG5cdFx0XHRcdG5vZGUubGVmdCA9IHBjWyhpbmRleC0xK3BjLmxlbmd0aCkgJSBwYy5sZW5ndGhdO1xuXHRcdFx0XHRub2RlLnJpZ2h0ID0gcGNbKE51bWJlcihpbmRleCkrMSkgJSBwYy5sZW5ndGhdO1xuXHRcdFx0XHRpZiAobm9kZS5yaWdodCA9PSBub2RlLmxlZnQpIG5vZGUucmlnaHQgPSB1bmRlZmluZWQ7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmIChub2RlLmxhYmVsICE9PSB1bmRlZmluZWQgJiYgbm9kZS5sYWJlbCAhPT0gXCJcIikge1xuXHRcdFx0dXJsVG9rZW5Tb3VyY2UgPSBub2RlLmxhYmVsO1xuXHRcdH0gZWxzZSBpZiAobm9kZS50b2tlbiAhPT0gdW5kZWZpbmVkICYmIG5vZGUudG9rZW4gIT09IFwiXCIpIHtcblx0XHRcdHVybFRva2VuU291cmNlID0gbm9kZS50b2tlbjtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dXJsVG9rZW5Tb3VyY2UgPSAnJyttZS5nbG9iYWxOb2RlQ291bnRlcjtcblx0XHR9XG5cblx0XHRtZS5nbG9iYWxOb2RlQ291bnRlcisrO1xuXG5cdFx0aWYgKHR5cGVvZih1cmxUb2tlblNvdXJjZSkgPT0gXCJudW1iZXJcIikge1xuXHRcdFx0bm9kZS51cmxUb2tlbiA9IHVybFRva2VuU291cmNlLnRvU3RyaW5nKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG5vZGUudXJsVG9rZW4gPSB1cmxUb2tlblNvdXJjZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xcVy9nLCBcIi1cIik7XG5cdFx0fVxuXG5cdFx0d2hpbGUgKG1lLm5vZGVzQnlVcmxUb2tlbi5oYXNPd25Qcm9wZXJ0eShub2RlLnVybFRva2VuKSkge1xuXHRcdFx0bm9kZS51cmxUb2tlbiArPSAnLSc7XG5cdFx0fVxuXHRcdG1lLm5vZGVzQnlVcmxUb2tlbltub2RlLnVybFRva2VuXSA9IG5vZGU7XG5cdFx0bm9kZS5tYXhDaGlsZEFtb3VudCA9IDA7XG5cblx0XHQvLyBzb3J0IGNoaWxkcmVuXG5cdFx0bm9kZS5jaGlsZHJlbiA9IG1lLnNvcnRDaGlsZHJlbihub2RlLmNoaWxkcmVuLCB0cnVlLCBtZS5jb25maWcuc29ydEJ5KTtcblxuXHRcdCQuZWFjaChub2RlLmNoaWxkcmVuLCBmdW5jdGlvbihjLCBjaGlsZCkge1xuXHRcdFx0Y2hpbGQucGFyZW50ID0gbm9kZTtcblx0XHRcdG5vZGUubWF4Q2hpbGRBbW91bnQgPSBNYXRoLm1heChub2RlLm1heENoaWxkQW1vdW50LCBjaGlsZC5hbW91bnQpO1xuXHRcdFx0bWUudHJhdmVyc2UoY2hpbGQsIGMpO1xuXHRcdH0pO1xuXG5cdFx0aWYgKG5vZGUuYnJlYWtkb3ducykge1xuXHRcdFx0bm9kZS5icmVha2Rvd25zQnlOYW1lID0ge307XG5cdFx0XHQkLmVhY2gobm9kZS5icmVha2Rvd25zLCBmdW5jdGlvbiAoYyxiZCkge1xuXHRcdFx0XHRiZC5mYW1vdW50ID0gbWUuY29uZmlnLmZvcm1hdFZhbHVlKGJkLmFtb3VudCk7XG5cdFx0XHRcdGlmIChiZC5uYW1lKSBub2RlLmJyZWFrZG93bnNCeU5hbWVbYmQubmFtZV0gPSBiZDtcblx0XHRcdH0pO1xuXHRcdH1cblx0fTtcblxuXHRtZS5zb3J0Q2hpbGRyZW4gPSBmdW5jdGlvbihjaGlsZHJlbiwgYWx0ZXJuYXRlLCBzb3J0QnkpIHtcblx0XHR2YXIgdG1wID0gW10sIG9kZCA9IHRydWU7XG5cdFx0aWYgKHNvcnRCeSA9PSAnbGFiZWwnKSB7XG5cdFx0XHRzb3J0QnkgPSBtZS5jb21wYXJlTGFiZWxzO1xuXHRcdFx0YWx0ZXJuYXRlID0gZmFsc2U7XG5cdFx0fSBlbHNlIHNvcnRCeSA9IG1lLmNvbXBhcmVBbW91bnRzO1xuXG5cdFx0Y2hpbGRyZW4uc29ydChzb3J0QnkpO1xuXHRcdGlmIChhbHRlcm5hdGUpIHtcblx0XHRcdHdoaWxlIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdHRtcC5wdXNoKG9kZCA/IGNoaWxkcmVuLnBvcCgpIDogY2hpbGRyZW4uc2hpZnQoKSk7XG5cdFx0XHRcdG9kZCA9ICFvZGQ7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdG1wO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gY2hpbGRyZW47XG5cdFx0fVxuXHR9O1xuXG5cdC8qXG5cdCAqIGNvbXBhcmVzIHR3byBpdGVtcyBieSBhbW91bnRcblx0ICovXG5cdG1lLmNvbXBhcmVBbW91bnRzID0gZnVuY3Rpb24oYSwgYikge1xuXHRcdGlmIChhLmFtb3VudCA+IGIuYW1vdW50KSByZXR1cm4gMTtcblx0XHRpZiAoYS5hbW91bnQgPT0gYi5hbW91bnQpIHJldHVybiAwO1xuXHRcdHJldHVybiAtMTtcblx0fTtcblxuXHQvKlxuXHQgKiBjb21wYXJlcyB0byBpdGVtIGJ5IGxhYmVsXG5cdCAqL1xuXHRtZS5jb21wYXJlTGFiZWxzID0gZnVuY3Rpb24oYSwgYikge1xuXHRcdGlmIChhLmxhYmVsID4gYi5sYWJlbCkgcmV0dXJuIDE7XG5cdFx0aWYgKGEubGFiZWwgPT0gYi5sYWJlbCkgcmV0dXJuIDA7XG5cdFx0cmV0dXJuIC0xO1xuXHR9O1xuXG5cdC8qXG5cdCAqIGluaXRpYWxpemVzIGFsbCB0aGF0IFJhcGhhZWxKUyBzdHVmZlxuXHQgKi9cblx0bWUuaW5pdFBhcGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgJGMgPSBtZS4kY29udGFpbmVyLCBydCA9IG1lLnRyZWVSb290LFxuXHRcdFx0dyA9ICRjLndpZHRoKCksIGggPSAkYy5oZWlnaHQoKSxcblx0XHRcdHBhcGVyID0gUmFwaGFlbCgkY1swXSwgdywgaCksXG5cdFx0XHRtYXhSYWQgPSBNYXRoLm1pbih3LCBoKSAqIDAuNSAtIDQwLFxuXHRcdFx0YmFzZSwgVmVjdG9yID0gbWUubnMuVmVjdG9yLFxuXHRcdFx0b3JpZ2luID0gbmV3IFZlY3Rvcih3ICogMC41LCBoICogMC41KTsgLy8gY2VudGVyXG5cblx0XHRtZS53aWR0aCA9IHc7XG5cdFx0bWUuaGVpZ2h0ID0gaDtcblx0XHRtZS5wYXBlciA9IHBhcGVyO1xuXHRcdGJhc2UgPSBNYXRoLnBvdygoTWF0aC5wb3cocnQuYW1vdW50LCAwLjYpICsgTWF0aC5wb3cocnQubWF4Q2hpbGRBbW91bnQsIDAuNikqMikgLyBtYXhSYWQsIDEuNjY2NjY2NjY2Nyk7XG5cdFx0bWUuYTJyYWRCYXNlID0gbWUubnMuYTJyYWRCYXNlID0gYmFzZTtcblxuXHRcdG1lLm9yaWdpbiA9IG9yaWdpbjtcblxuXHRcdCQod2luZG93KS5yZXNpemUobWUub25SZXNpemUuYmluZChtZSkpO1xuXHR9O1xuXG5cdG1lLm9uUmVzaXplID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgJGMgPSBtZS4kY29udGFpbmVyLCB3ID0gJGMud2lkdGgoKSwgaCA9ICRjLmhlaWdodCgpLFxuXHRcdFx0bWF4UmFkID0gTWF0aC5taW4odywgaCkgKiAwLjUgLSA0MCwgYmFzZSwgcnQgPSBtZS50cmVlUm9vdCwgYiwgb2JqO1xuXHRcdG1lLnBhcGVyLnNldFNpemUodywgaCk7XG5cdFx0bWUub3JpZ2luLnggPSB3ICogMC41O1xuXHRcdG1lLm9yaWdpbi55ID0gaCAqIDAuNTtcblx0XHRtZS53aWR0aCA9IHc7XG5cdFx0bWUuaGVpZ2h0ID0gaDtcblx0XHRiYXNlID0gTWF0aC5wb3coKE1hdGgucG93KHJ0LmFtb3VudCwgMC42KSArIE1hdGgucG93KHJ0Lm1heENoaWxkQW1vdW50LCAwLjYpKjIpIC8gbWF4UmFkLCAxLjY2NjY2NjY2NjcpO1xuXHRcdG1lLmEycmFkQmFzZSA9IG1lLm5zLmEycmFkQmFzZSA9IGJhc2U7XG5cblx0XHQkLmVhY2gobWUuZGlzcGxheU9iamVjdHMsIGZ1bmN0aW9uKGIsIG9iaikge1xuXHRcdFx0aWYgKG9iai5jbGFzc05hbWUgPT0gXCJidWJibGVcIikge1xuXHRcdFx0XHRvYmouYnViYmxlUmFkID0gbWUubnMuVXRpbHMuYW1vdW50MnJhZChvYmoubm9kZS5hbW91bnQpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdC8vIHZpczQubG9nKG1lKTtcblx0XHRpZiAobWUuY3VycmVudENlbnRlcikge1xuXHRcdFx0bWUuY2hhbmdlVmlldyhtZS5jdXJyZW50Q2VudGVyLnVybFRva2VuKTtcblx0XHR9XG5cdH07XG5cblx0Lypcblx0ICogaW5pdGlhbGl6ZXMgdGhlIFR3ZWVuaW5nIGVuZ2luZVxuXHQgKi9cblx0bWUuaW5pdFR3ZWVuID0gZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy50d2VlblRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5sb29wLCAxMDAwLzEyMCk7XG5cdH07XG5cblx0Lypcblx0ICogY3JlYXRlcyBpbnN0YW5jZXMgZm9yIGFsbCBidWJibGVzIGluIHRoZSBkYXRhc2V0LiB0aGUgYnViYmxlcyB3aWxsXG5cdCAqIHJlbWFpbiBpbnZpc2JsZSB1bnRpbCB0aGV5IGVudGVyIHRoZSBzdGFnZSB2aWEgY2hhbmdlVmlldygpXG5cdCAqL1xuXHRtZS5pbml0QnViYmxlcyA9IGZ1bmN0aW9uKCkge1xuXHRcdC8vdmlzNC5sb2coJ2luaXRCdWJibGVzJyk7XG5cdFx0dmFyIG1lID0gdGhpcywgcnQgPSBtZS50cmVlUm9vdCwgaSwgaWNvbnMgPSBmYWxzZSwgQnViYmxlcyA9IG1lLm5zLkJ1YmJsZXMsIGJ1YmJsZUNsYXNzO1xuXG5cdFx0bWUuYnViYmxlQ2xhc3NlcyA9IFtdO1xuXG5cdFx0Ly8gZGVmYXVsdHMgdG8gcGxhaW4gYnViYmxlXG5cdFx0aWYgKCFtZS5jb25maWcuaGFzT3duUHJvcGVydHkoJ2J1YmJsZVR5cGUnKSkgbWUuY29uZmlnLmJ1YmJsZVR5cGUgPSBbJ3BsYWluJ107XG5cdFx0Ly8gY29udmVydCB0byBhcnJheSBpZiBuZWNjZXNzYWlyeVxuXHRcdGlmICghJC5pc0FycmF5KG1lLmNvbmZpZy5idWJibGVUeXBlKSkgbWUuY29uZmlnLmJ1YmJsZVR5cGUgPSBbbWUuY29uZmlnLmJ1YmJsZVR5cGVdO1xuXG5cdFx0aWYgKCQuaXNBcnJheShtZS5jb25maWcuYnViYmxlVHlwZSkpIHtcblx0XHRcdCQuZWFjaChtZS5jb25maWcuYnViYmxlVHlwZSwgZnVuY3Rpb24oaSkge1xuXHRcdFx0XHRpZiAobWUuY29uZmlnLmJ1YmJsZVR5cGVbaV0gPT0gJ2ljb24nKSBpY29ucyA9IHRydWU7XG5cdFx0XHRcdG1lLmJ1YmJsZUNsYXNzZXMucHVzaChtZS5nZXRCdWJibGVUeXBlKG1lLmNvbmZpZy5idWJibGVUeXBlW2ldKSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHR2YXIgcm9vdEJ1YmJsZSA9IG1lLmNyZWF0ZUJ1YmJsZShydCwgbWUub3JpZ2luLCAwLCAwLCBydC5jb2xvcik7XG5cdFx0bWUudHJhdmVyc2VCdWJibGVzKHJvb3RCdWJibGUpO1xuXHR9O1xuXG5cdC8qXG5cdCAqIHJldHVybnMgdGhlIGJ1YmJsZSBjbGFzcyBmb3IgYSBnaXZlbiBidWJibGUgY2xhc3MgaWRcblx0ICogZS5nLiAnaWNvbicgPiBCdWJibGVUcmVlLkJ1YmJsZXMuSWNvblxuXHQgKi9cblx0bWUuZ2V0QnViYmxlVHlwZSA9IGZ1bmN0aW9uKGlkKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgQnViYmxlcyA9IG1lLm5zLkJ1YmJsZXM7XG5cdFx0Ly8gY2hvc3NlIG9uZSBvZiB0aGVtIGZvciB0aGUgdmlzXG5cdFx0c3dpdGNoIChpZCkge1xuXHRcdFx0Y2FzZSAncGllJzogcmV0dXJuIEJ1YmJsZXMuUGllcztcblx0XHRcdGNhc2UgJ2RvbnV0JzogcmV0dXJuIEJ1YmJsZXMuRG9udXQ7XG5cdFx0XHRjYXNlICdtdWx0aSc6IHJldHVybiBCdWJibGVzLk11bHRpO1xuXHRcdFx0Y2FzZSAnaWNvbic6IHJldHVybiBCdWJibGVzLkljb247XG5cdFx0XHRkZWZhdWx0OiByZXR1cm4gQnViYmxlcy5QbGFpbjtcblx0XHR9XG5cdH07XG5cblx0Lypcblx0ICogaXRlcmF0ZXMgb3ZlciB0aGUgY29tcGxldGUgdHJlZSBhbmQgY3JlYXRlcyBhIGJ1YmJsZSBmb3Jcblx0ICogZWFjaCBub2RlXG5cdCAqL1xuXHRtZS50cmF2ZXJzZUJ1YmJsZXMgPSBmdW5jdGlvbihwYXJlbnRCdWJibGUpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCByaW5nLFxuXHRcdFx0YTJyYWQgPSBtZS5ucy5VdGlscy5hbW91bnQycmFkLFxuXHRcdFx0aSwgYywgY2hpbGRyZW4sIGNoaWxkQnViYmxlLCBjaGlsZFJhZFN1bSA9IDAsIG9hID0gMCwgZGEsIGNhLCB0d29waSA9IE1hdGguUEkgKiAyO1xuXHRcdGNoaWxkcmVuID0gcGFyZW50QnViYmxlLm5vZGUuY2hpbGRyZW47XG5cblx0XHQvLyBzdW0gcmFkaWkgb2YgYWxsIGNoaWxkcmVuXG5cdFx0JC5lYWNoKGNoaWxkcmVuLCBmdW5jdGlvbihpLGMpIHtcblx0XHRcdGNoaWxkUmFkU3VtICs9IGEycmFkKGMuYW1vdW50KTtcblx0XHR9KTtcblxuXHRcdGlmIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG5cdFx0XHQvLyBjcmVhdGUgcmluZ1xuXHRcdFx0cmluZyA9IG1lLmNyZWF0ZVJpbmcocGFyZW50QnViYmxlLm5vZGUsIHBhcmVudEJ1YmJsZS5wb3MsIDAsIHsgc3Ryb2tlOiAnIzg4OCcsICdzdHJva2UtZGFzaGFycmF5JzogXCItXCIgfSk7XG5cdFx0fVxuXG5cdFx0JC5lYWNoKGNoaWxkcmVuLCBmdW5jdGlvbihpLGMpIHtcblxuXHRcdFx0ZGEgPSBhMnJhZChjLmFtb3VudCkgLyBjaGlsZFJhZFN1bSAqIHR3b3BpO1xuXHRcdFx0Y2EgPSBvYSArIGRhKjAuNTtcblxuXHRcdFx0aWYgKGlzTmFOKGNhKSkgdmlzNC5sb2cob2EsIGRhLCBjLmFtb3VudCwgY2hpbGRSYWRTdW0sIHR3b3BpKTtcblxuXHRcdFx0Yy5jZW50ZXJBbmdsZSA9IGNhO1xuXG5cdFx0XHRjaGlsZEJ1YmJsZSA9IG1lLmNyZWF0ZUJ1YmJsZShjLCBwYXJlbnRCdWJibGUucG9zLCAwLCBjYSwgYy5jb2xvcik7XG5cdFx0XHQvLyBmw7xyIGplZGVzIGtpbmQgZWluZW4gYnViYmxlIGFubGVnZW4gdW5kIG1pdCBkZW0gcGFyZW50IHZlcmJpbmRlblxuXHRcdFx0b2EgKz0gZGE7XG5cblx0XHRcdG1lLnRyYXZlcnNlQnViYmxlcyhjaGlsZEJ1YmJsZSk7XG5cdFx0fSk7XG5cblx0fTtcblxuXG5cdC8qXG5cdCAqIGNyZWF0ZXMgYSBuZXcgYnViYmxlIGZvciBhIGdpdmVuIG5vZGUuIHRoZSBidWJibGUgdHlwZSB3aWxsIGJlIGNob3NlblxuXHQgKiBieSB0aGUgbGV2ZWwgb2YgdGhlIG5vZGVcblx0ICovXG5cdG1lLmNyZWF0ZUJ1YmJsZSA9IGZ1bmN0aW9uKG5vZGUsIG9yaWdpbiwgcmFkLCBhbmdsZSwgY29sb3IpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCBucyA9IG1lLm5zLCBpLCBiLCBidWJibGUsIGNsYXNzSW5kZXggPSBub2RlLmxldmVsO1xuXHRcdGlmIChpc05hTihjbGFzc0luZGV4KSkgY2xhc3NJbmRleCA9IDA7XG5cdFx0Y2xhc3NJbmRleCA9IE1hdGgubWluKGNsYXNzSW5kZXgsIG1lLmJ1YmJsZUNsYXNzZXMubGVuZ3RoLTEpO1xuXG5cdFx0YnViYmxlID0gbmV3IG1lLmJ1YmJsZUNsYXNzZXNbY2xhc3NJbmRleF0obm9kZSwgbWUsIG9yaWdpbiwgcmFkLCBhbmdsZSwgY29sb3IpO1xuXHRcdG1lLmRpc3BsYXlPYmplY3RzLnB1c2goYnViYmxlKTtcblx0XHRyZXR1cm4gYnViYmxlO1xuXHR9O1xuXG5cdG1lLmNyZWF0ZVJpbmcgPSBmdW5jdGlvbihub2RlLCBvcmlnaW4sIHJhZCwgYXR0cikge1xuXHRcdHZhciBtZSA9IHRoaXMsIG5zID0gbWUubnMsIHJpbmc7XG5cdFx0cmluZyA9IG5ldyBucy5SaW5nKG5vZGUsIG1lLCBvcmlnaW4sIHJhZCwgYXR0cik7XG5cdFx0bWUuZGlzcGxheU9iamVjdHMucHVzaChyaW5nKTtcblx0XHRyZXR1cm4gcmluZztcblx0fTtcblxuXHQvKlxuXHQgKiBpcyBjYWxsZWQgZXZlcnkgdGltZSB0aGUgdXNlciBjaGFuZ2VzIHRoZSB2aWV3XG5cdCAqIGVhY2ggdmlldyBpcyBkZWZpbmVkIGJ5IHRoZSBzZWxlY3RlZCBub2RlICh3aGljaCBpcyBkaXNwbGF5ZWRcblx0ICovXG5cdG1lLmNoYW5nZVZpZXcgPSBmdW5jdGlvbih0b2tlbikge1xuXHRcdHZhciBtZSA9IHRoaXMsXG5cdFx0XHRwYXBlciA9IG1lLnBhcGVyLFxuXHRcdFx0bWF4UmFkID0gTWF0aC5taW4obWUud2lkdGgsIG1lLmhlaWdodCkgKiAwLjM1LFxuXHRcdFx0bnMgPSBtZS5ucyxcblx0XHRcdHV0aWxzID0gbnMuVXRpbHMsXG5cdFx0XHRvID0gbWUub3JpZ2luLFxuXHRcdFx0bDFhdHRyID0geyBzdHJva2U6ICcjY2NjJywgJ3N0cm9rZS1kYXNoYXJyYXknOiBcIi0gXCIgfSxcblx0XHRcdGwyYXR0ciA9IHsgc3Ryb2tlOiAnI2NjYycsICdzdHJva2UtZGFzaGFycmF5JzogXCIuIFwiIH0sXG5cdFx0XHRhMnJhZCA9IHV0aWxzLmFtb3VudDJyYWQsXG5cdFx0XHRyb290ID0gbWUudHJlZVJvb3QsXG5cdFx0XHRub2Rlc0J5VXJsVG9rZW4gPSBtZS5ub2Rlc0J5VXJsVG9rZW4sXG5cdFx0XHRub2RlID0gbm9kZXNCeVVybFRva2VuLmhhc093blByb3BlcnR5KHRva2VuKSA/IG5vZGVzQnlVcmxUb2tlblt0b2tlbl0gOiBudWxsLFxuXHRcdFx0dCA9IG5ldyBucy5MYXlvdXQoKSxcblx0XHRcdGJ1YmJsZSwgdHIsIGksIHR3b3BpID0gTWF0aC5QSSAqIDIsXG5cdFx0XHRnZXRCdWJibGUgPSBtZS5nZXRCdWJibGUuYmluZChtZSksIGdldFJpbmcgPSBtZS5nZXRSaW5nLmJpbmQobWUpLFxuXHRcdFx0dW5pZnkgPSBtZS51bmlmeUFuZ2xlO1xuXG5cdFx0aWYgKG5vZGUgIT09IG51bGwpIHtcblxuXHRcdFx0Ly8gd2hhdCBkbyB5b3Ugd2UgaGF2ZSB0byBkbyBoZXJlP1xuXHRcdFx0Ly8gLSBmaW5kIG91dCB0aGUgb3JpZ2luIHBvc2l0aW9uXG5cdFx0XHQvLyAtXG5cblx0XHRcdHZhciBwYXJlbnQsIGdyYW5kcGEsIHNpYmxpbmcsIGMsIGNuLCByYWQxLCByYWQyLCByYWQsIHNyYWQsIHNhbmcsIHJpbmcsIHRndFNjYWxlLFxuXHRcdFx0XHRyYWRTdW0sIGxlZnRUdXJuID0gZmFsc2UsIHJpZ2h0VHVybiA9IGZhbHNlO1xuXG5cblxuXHRcdFx0Ly8gaW5pdGlhbGx5IHdlIHdpbGwgbWFyayBhbGwgYnViYmxlcyBhbmQgcmluZ3MgZm9yIGhpZGluZ1xuXHRcdFx0Ly8gZ2V0Li4uLigpIHdpbGwgc2V0IHRoaXMgZmxhZyB0byBmYWxzZVxuXHRcdFx0Zm9yIChpIGluIG1lLmRpc3BsYXlPYmplY3RzKSBtZS5kaXNwbGF5T2JqZWN0c1tpXS5oaWRlRmxhZyA9IHRydWU7XG5cblxuXHRcdFx0aWYgKG5vZGUgPT0gcm9vdCB8fCBub2RlLnBhcmVudCA9PSByb290ICYmIG5vZGUuY2hpbGRyZW4ubGVuZ3RoIDwgMikge1xuXG5cdFx0XHRcdHQuJChtZSkuYnViYmxlU2NhbGUgPSAxLjA7XG5cblx0XHRcdFx0Ly8gbW92ZSBvcmlnaW4gdG8gY2VudGVyXG5cdFx0XHRcdHQuJChvKS54ID0gbWUud2lkdGggKiAwLjU7XG5cdFx0XHRcdHQuJChvKS55ID0gbWUuaGVpZ2h0ICogMC41O1xuXG5cdFx0XHRcdC8vIG1ha2UgdGhlIHJvb3QgYnViYmxlIHZpc2libGVcblx0XHRcdFx0cGFyZW50ID0gZ2V0QnViYmxlKHJvb3QpO1xuXG5cdFx0XHRcdC8vcGFyZW50LmNoaWxkUm90YXRpb24gPSAwO1xuXG5cdFx0XHRcdGlmIChub2RlICE9IHJvb3QpIHtcblx0XHRcdFx0XHRwYXJlbnQuY2hpbGRSb3RhdGlvbiA9IC1ub2RlLmNlbnRlckFuZ2xlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmFkMSA9IGEycmFkKHJvb3QuYW1vdW50KSArIGEycmFkKHJvb3QubWF4Q2hpbGRBbW91bnQpICsgMjA7XG5cblx0XHRcdFx0cmluZyA9IGdldFJpbmcocm9vdCk7XG5cdFx0XHRcdHQuJChyaW5nKS5yYWQgPSByYWQxO1xuXG5cdFx0XHRcdGZvciAoaSBpbiByb290LmNoaWxkcmVuKSB7XG5cdFx0XHRcdFx0Y24gPSByb290LmNoaWxkcmVuW2ldO1xuXHRcdFx0XHRcdC8vIGFkanVzdCByYWQgYW5kIGFuZ2xlIGZvciBjaGlsZHJlblxuXHRcdFx0XHRcdGJ1YmJsZSA9IGdldEJ1YmJsZShjbik7XG5cdFx0XHRcdFx0dC4kKGJ1YmJsZSkuYW5nbGUgPSB1bmlmeShjbi5jZW50ZXJBbmdsZSArIHBhcmVudC5jaGlsZFJvdGF0aW9uKTtcblx0XHRcdFx0XHR0LiQoYnViYmxlKS5yYWQgPSByYWQxO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gbm9kZSBpcyBub3QgdGhlIHJvb3Qgbm9kZVxuXG5cdFx0XHRcdHZhciBvcmlnTm9kZSA9IG5vZGU7IC8vIHNhdmUgdGhlIHJlZmVyZW5jZSBvZiB0aGUgbm9kZS4uXG5cblx0XHRcdFx0aWYgKG5vZGUuY2hpbGRyZW4ubGVuZ3RoIDwgMikgeyAvLyAuLmJlY2F1c2UgaWYgaXQgaGFzIG5vIGNoaWxkcmVuLi5cblx0XHRcdFx0XHRub2RlID0gbm9kZS5wYXJlbnQ7ICAgICAgICAgLy8gLi53ZSBjZW50ZXIgb24gaXRzIHBhcmVudFxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGd0U2NhbGUgPSBtYXhSYWQgLyAoYTJyYWQobm9kZS5hbW91bnQpICsgYTJyYWQobm9kZS5tYXhDaGlsZEFtb3VudCkqMik7XG5cdFx0XHRcdHQuJChtZSkuYnViYmxlU2NhbGUgPSB0Z3RTY2FsZTtcblxuXHRcdFx0XHRwYXJlbnQgPSBnZXRCdWJibGUobm9kZSk7XG5cblx0XHRcdFx0aWYgKG1lLmN1cnJlbnRDZW50ZXIgJiYgbWUuY3VycmVudENlbnRlciA9PSBub2RlLmxlZnQpIHJpZ2h0VHVybiA9IHRydWU7XG5cdFx0XHRcdGVsc2UgaWYgKG1lLmN1cnJlbnRDZW50ZXIgJiYgbWUuY3VycmVudENlbnRlciA9PSBub2RlLnJpZ2h0KSBsZWZ0VHVybiA9IHRydWU7XG5cblx0XHRcdFx0dmFyIHNhID0gbWUuc2hvcnRlc3RBbmdsZVRvO1xuXHRcdFx0XHQvL2lmIChsZWZ0VHVybikgc2EgPSBtZS5zaG9ydGVzdExlZnRUdXJuO1xuXHRcdFx0XHQvL2lmIChyaWdodFR1cm4pIHNhID0gbWUuc2hvcnRlc3RSaWdodFR1cm47XG5cblx0XHRcdFx0dC4kKHBhcmVudCkuYW5nbGUgPSBzYShwYXJlbnQuYW5nbGUsIDApO1xuXG5cdFx0XHRcdC8vIGZpbmQgdGhlIHN1bSBvZiBhbGwgcmFkaWkgZnJvbSBub2RlIHRvIHJvb3Rcblx0XHRcdFx0cmFkMSA9IChhMnJhZChub2RlLmFtb3VudCkgKyBhMnJhZChub2RlLm1heENoaWxkQW1vdW50KSkgKiB0Z3RTY2FsZSArIDIwO1xuXG5cdFx0XHRcdHJpbmcgPSBnZXRSaW5nKG5vZGUpO1xuXHRcdFx0XHR0LiQocmluZykucmFkID0gcmFkMTtcblxuXHRcdFx0XHRncmFuZHBhID0gZ2V0QnViYmxlKG5vZGUucGFyZW50KTtcblx0XHRcdFx0Z3JhbmRwYS5jaGlsZFJvdGF0aW9uID0gLW5vZGUuY2VudGVyQW5nbGU7XG5cblx0XHRcdFx0dmFyIG1heWJlUm9vdCA9IGdyYW5kcGE7XG5cblx0XHRcdFx0d2hpbGUgKG1heWJlUm9vdCAmJiBtYXliZVJvb3Qubm9kZS5wYXJlbnQpIHtcblx0XHRcdFx0XHRtYXliZVJvb3QgPSBnZXRCdWJibGUobWF5YmVSb290Lm5vZGUucGFyZW50LCB0cnVlKTtcblx0XHRcdFx0XHR0LiQobWF5YmVSb290KS5yYWQgPSAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dC4kKGdyYW5kcGEpLnJhZCA9IDA7XG5cdFx0XHRcdC8vXG5cdFx0XHRcdHZhciBodyA9IG1lLndpZHRoICogMC41O1xuXG5cdFx0XHRcdHJhZDIgPSAwIC0gTWF0aC5tYXgoXG5cdFx0XHRcdFx0Ly9odyAqMC44IC0gdGd0U2NhbGUgKiAoYTJyYWQobm9kZS5wYXJlbnQuYW1vdW50KSthMnJhZChub2RlLmFtb3VudCkpLCAvLyBtYXhpbXVtIHZpc2libGUgcGFydFxuXHRcdFx0XHRcdGh3ICogMC44IC0gdGd0U2NhbGUgKiAoYTJyYWQobm9kZS5wYXJlbnQuYW1vdW50KSArIGEycmFkKE1hdGgubWF4KG5vZGUuYW1vdW50KjEuMTUgKyBub2RlLm1heENoaWxkQW1vdW50KjEuMTUsIG5vZGUubGVmdC5hbW91bnQgKiAwLjg1LCBub2RlLnJpZ2h0LmFtb3VudCAqIDAuODUpKSksXG5cdFx0XHRcdFx0dGd0U2NhbGUqYTJyYWQobm9kZS5wYXJlbnQuYW1vdW50KSotMSArIGh3KjAuMTUgLy8gbWluaW11bSB2aXNpYmxlIHBhcnRcblx0XHRcdFx0KSArIGh3O1xuXG5cdFx0XHRcdC8vdmlzNC5sb2coJ3JhZCAocGFyZW50KSA9ICcrcmFkMiwnICAgcmFkIChjZW50ZXIpID0gJyxyYWQxKTtcblxuXHRcdFx0XHRpZiAobm9kZS5sZWZ0ICYmIG5vZGUucmlnaHQpIHtcblx0XHRcdFx0XHR2YXIgbWF4U2libFNpemUgPSB0Z3RTY2FsZSAqIGEycmFkKE1hdGgubWF4KG5vZGUubGVmdC5hbW91bnQsIG5vZGUucmlnaHQuYW1vdW50KSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvL3JhZDIgPSBodyAtICh0Z3RTY2FsZSphMnJhZChub2RlLnBhcmVudC5hbW91bnQpKi0xKyBodyowLjE1KTtcblxuXHRcdFx0XHRyYWRTdW0gPSByYWQxICsgcmFkMjtcblxuXHRcdFx0XHR0LiQobykueCA9IG1lLndpZHRoICogMC41IC0gcmFkMiAtIChub2RlICE9IG9yaWdOb2RlID8gcmFkMSAqIDAuMzU6IDApO1xuXHRcdFx0XHR0LiQobykueSA9IG1lLmhlaWdodCAqIDAuNTtcblxuXHRcdFx0XHQvL3ZpczQubG9nKCdvLnggPSAnK28ueCwnICAgIHQuJChvKS54ID0gJyt0LiQobykueCk7XG5cblx0XHRcdFx0bmV3IHZpczQuRGVsYXllZFRhc2soMTUwMCwgdmlzNCwgdmlzNC5sb2csIG8sIGdyYW5kcGEucG9zKTtcblxuXHRcdFx0XHRyYWQyICs9IG1lLndpZHRoICogMC4xO1xuXG5cdFx0XHRcdHJpbmcgPSBnZXRSaW5nKG5vZGUucGFyZW50KTtcblx0XHRcdFx0dC4kKHJpbmcpLnJhZCA9IHJhZDI7XG5cblx0XHRcdFx0dC4kKHBhcmVudCkucmFkID0gcmFkMjtcblxuXHRcdFx0XHR2YXIgYW8gPSAwLShub2RlICE9IG9yaWdOb2RlID8gb3JpZ05vZGUuY2VudGVyQW5nbGUgKyBwYXJlbnQuY2hpbGRSb3RhdGlvbjogMCk7XG5cdFx0XHRcdC8vIGNoaWxkcmVuXG5cdFx0XHRcdGZvciAoaSBpbiBub2RlLmNoaWxkcmVuKSB7XG5cdFx0XHRcdFx0Y24gPSBub2RlLmNoaWxkcmVuW2ldO1xuXHRcdFx0XHRcdC8vIGFkanVzdCByYWQgYW5kIGFuZ2xlIGZvciBjaGlsZHJlblxuXHRcdFx0XHRcdGJ1YmJsZSA9IGdldEJ1YmJsZShjbik7XG5cdFx0XHRcdFx0dC4kKGJ1YmJsZSkuYW5nbGUgPSBtZS5zaG9ydGVzdEFuZ2xlVG8oYnViYmxlLmFuZ2xlLCBjbi5jZW50ZXJBbmdsZSArIHBhcmVudC5jaGlsZFJvdGF0aW9uICsgYW8pO1xuXHRcdFx0XHRcdHQuJChidWJibGUpLnJhZCA9IHJhZDE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBsZWZ0IGFuZCByaWdodCBzaWJsaW5nXG5cblx0XHRcdFx0dmFyIHNpYmxDdXQgPSBtZS5oZWlnaHQgKiAwLjA3O1xuXG5cdFx0XHRcdGlmIChub2RlLmxlZnQpIHtcblx0XHRcdFx0XHRzaWJsaW5nID0gbm9kZS5sZWZ0O1xuXHRcdFx0XHRcdHNyYWQgPSBhMnJhZChzaWJsaW5nLmFtb3VudCkqdGd0U2NhbGU7XG5cdFx0XHRcdFx0c2FuZyA9IHR3b3BpIC0gTWF0aC5hc2luKChtZS5wYXBlci5oZWlnaHQqMC41ICsgc3JhZCAtIHNpYmxDdXQpIC8gcmFkMik7XG5cblx0XHRcdFx0XHRidWJibGUgPSBnZXRCdWJibGUoc2libGluZyk7XG5cdFx0XHRcdFx0dC4kKGJ1YmJsZSkucmFkID0gcmFkMjtcblx0XHRcdFx0XHR0LiQoYnViYmxlKS5hbmdsZSA9IHNhKGJ1YmJsZS5hbmdsZSwgc2FuZyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG5vZGUucmlnaHQpIHtcblx0XHRcdFx0XHRzaWJsaW5nID0gbm9kZS5yaWdodDtcblx0XHRcdFx0XHRzcmFkID0gYTJyYWQoc2libGluZy5hbW91bnQpKnRndFNjYWxlO1xuXHRcdFx0XHRcdHNhbmcgPSBNYXRoLmFzaW4oKG1lLnBhcGVyLmhlaWdodCowLjUgKyBzcmFkIC0gc2libEN1dCkgLyByYWQyKTtcblxuXHRcdFx0XHRcdGJ1YmJsZSA9IGdldEJ1YmJsZShzaWJsaW5nKTtcblx0XHRcdFx0XHR0LiQoYnViYmxlKS5yYWQgPSByYWQyO1xuXHRcdFx0XHRcdHQuJChidWJibGUpLmFuZ2xlID0gc2EoYnViYmxlLmFuZ2xlLCBzYW5nKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG5vZGUgPSBvcmlnTm9kZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gbm93IHdlJ3JlIGdvaW5nIHRvIGNoZWNrIGFsbCBoaWRlcyBhbmQgc2hvd3Ncblx0XHRcdGZvciAoaSBpbiBtZS5kaXNwbGF5T2JqZWN0cykge1xuXHRcdFx0XHR2YXIgb2JqID0gbWUuZGlzcGxheU9iamVjdHNbaV07XG5cdFx0XHRcdGlmIChvYmouaGlkZUZsYWcgJiYgb2JqLnZpc2libGUpIHtcblx0XHRcdFx0XHQvLyBidWJibGUgaXMgb24gc3RhZ2UgYnV0IHNob3VsZG4ndFxuXHRcdFx0XHRcdHQuJChvYmopLmFscGhhID0gMDsgLy8gbGV0IGl0IGRpc2FwcGVhclxuXHRcdFx0XHRcdGlmIChvYmouY2xhc3NOYW1lID09IFwiYnViYmxlXCIgJiYgb2JqLm5vZGUubGV2ZWwgPiAxKSB0LiQob2JqKS5yYWQgPSAwOyAvLyBtb3ZlIHRvIGNlbnRlclxuXHRcdFx0XHRcdC8vZWxzZSB0LiQob2JqKS5yYWQgPVxuXHRcdFx0XHRcdHQuaGlkZShvYmopOyAvLyByZW1vdmUgZnJvbSBzdGFnZSBhZnRlcndhcmRzXG5cdFx0XHRcdH0gZWxzZSBpZiAoIW9iai5oaWRlRmxhZykge1xuXHRcdFx0XHRcdC8vIGJ1YmJsZSBpcyBub3Qgb24gc3RhZ2UgYnV0IHNob3VsZFxuXHRcdFx0XHRcdHQuJChvYmopLmFscGhhID0gMTtcblx0XHRcdFx0XHRpZiAoIW9iai52aXNpYmxlKSB7XG5cdFx0XHRcdFx0XHRvYmouYWxwaGEgPSAwO1xuXHRcdFx0XHRcdFx0dC5zaG93KG9iaik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHRyID0gbmV3IG5zLlRyYW5zaXRpb25lcihtZS5jdXJyZW50Q2VudGVyID09IG5vZGUgPyAwIDogMTAwMCk7XG5cdFx0XHR0ci5jaGFuZ2VMYXlvdXQodCk7XG5cdFx0XHRtZS5jdXJyZW50VHJhbnNpdGlvbiA9IHRyO1xuXHRcdFx0aWYgKCFtZS5jdXJyZW50Q2VudGVyICYmICQuaXNGdW5jdGlvbihtZS5jb25maWcuZmlyc3ROb2RlQ2FsbGJhY2spKSB7XG5cdFx0XHRcdG1lLmNvbmZpZy5maXJzdE5vZGVDYWxsYmFjayhub2RlKTtcblx0XHRcdH1cblx0XHRcdG1lLmN1cnJlbnRDZW50ZXIgPSBub2RlO1xuXHRcdFx0Ly8gdmlzNC5sb2coJ2N1cnJlbnROb2RlID0gJyttZS5jdXJyZW50Q2VudGVyKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHR1dGlscy5sb2coJ25vZGUgJyt0b2tlbisnIG5vdCBmb3VuZCcpO1xuXHRcdH1cblx0XHQvLyBzdGVwMTpcblxuXHRcdC8vIHN0ZXAyOlxuXHR9O1xuXG5cdG1lLnVuaWZ5QW5nbGUgPSBmdW5jdGlvbihhKSB7XG5cdFx0dmFyIHBpID0gTWF0aC5QSSwgdHdvcGkgPSBwaSAqIDI7XG5cdFx0d2hpbGUgKGEgPj0gdHdvcGkpIGEgLT0gdHdvcGk7XG5cdFx0d2hpbGUgKGEgPCAwKSBhICs9IHR3b3BpO1xuXHRcdHJldHVybiBhO1xuXHR9O1xuXG5cdG1lLnNob3J0ZXN0QW5nbGUgPSBmdW5jdGlvbihmLCB0KSB7XG5cdFx0dmFyIGRlZyA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIE1hdGgucm91bmQoYS9NYXRoLlBJKjE4MCkrJyc7IH07XG5cdFx0dmFyIHBpID0gTWF0aC5QSSwgdHdvcGkgPSBwaSAqIDIsIHVuaWZ5PSBtZS51bmlmeUFuZ2xlO1xuXHRcdGYgPSB1bmlmeShmKTtcblx0XHR0ID0gdW5pZnkodCk7XG5cdFx0dmFyIHNhID0gdCAtIGY7XG5cdFx0aWYgKHNhID4gcGkpIHNhIC09IHR3b3BpO1xuXHRcdGlmIChzYSA8IC1waSkgc2EgKz0gdHdvcGk7XG5cblx0XHRyZXR1cm4gc2E7XG5cdH07XG5cblx0bWUuc2hvcnRlc3RBbmdsZVRvID0gZnVuY3Rpb24oZiwgdCkge1xuXHRcdHJldHVybiBmK21lLnNob3J0ZXN0QW5nbGUoZiwgdCk7XG5cdH07XG5cblx0bWUuc2hvcnRlc3RMZWZ0VHVybiA9IGZ1bmN0aW9uKGYsIHQpIHtcblx0XHR2YXIgc2EgPSBtZS5zaG9ydGVzdEFuZ2xlKGYsIHQpO1xuXHRcdGlmIChzYSA+IDApIHNhID0gc2EgLSBNYXRoLlBJKjI7XG5cdFx0cmV0dXJuIGYrc2E7XG5cdH07XG5cblx0bWUuc2hvcnRlc3RSaWdodFR1cm4gPSBmdW5jdGlvbihmLCB0KSB7XG5cdFx0dmFyIHNhID0gbWUuc2hvcnRlc3RBbmdsZShmLCB0KTtcblx0XHRpZiAoc2EgPCAwKSBzYSA9IE1hdGguUEkqMiArIHNhO1xuXHRcdHJldHVybiBmK3NhO1xuXHR9O1xuXG5cblx0Lypcblx0ICogcmV0dXJucyB0aGUgaW5zdGFuY2Ugb2YgYSBidWJibGUgZm9yIGEgZ2l2ZW4gbm9kZVxuXHQgKi9cblx0bWUuZ2V0QnViYmxlID0gZnVuY3Rpb24obm9kZSwga2VlcEhpZGRlbikge1xuXHRcdHJldHVybiB0aGlzLmdldERpc3BsYXlPYmplY3QoJ2J1YmJsZScsIG5vZGUsIGtlZXBIaWRkZW4pO1xuXHR9O1xuXG5cdC8qXG5cdCAqXG5cdCAqL1xuXHRtZS5nZXRSaW5nID0gZnVuY3Rpb24obm9kZSkge1xuXHRcdHJldHVybiB0aGlzLmdldERpc3BsYXlPYmplY3QoJ3JpbmcnLCBub2RlKTtcblx0fTtcblxuXHRtZS5nZXREaXNwbGF5T2JqZWN0ID0gZnVuY3Rpb24oY2xhc3NOYW1lLCBub2RlLCBrZWVwSGlkZGVuKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgaSwgbztcblx0XHRmb3IgKGkgaW4gbWUuZGlzcGxheU9iamVjdHMpIHtcblx0XHRcdG8gPSBtZS5kaXNwbGF5T2JqZWN0c1tpXTtcblx0XHRcdGlmIChvLmNsYXNzTmFtZSAhPSBjbGFzc05hbWUpIGNvbnRpbnVlO1xuXHRcdFx0aWYgKG8ubm9kZSA9PSBub2RlKSB7XG5cdFx0XHRcdGlmICgha2VlcEhpZGRlbikgby5oaWRlRmxhZyA9IGZhbHNlO1xuXHRcdFx0XHRyZXR1cm4gbztcblx0XHRcdH1cblx0XHR9XG5cdFx0dmlzNC5sb2coY2xhc3NOYW1lKycgbm90IGZvdW5kIGZvciBub2RlJywgbm9kZSk7XG5cdH07XG5cblx0Lypcblx0bWUuY3JlYXRlUmluZyA9IGZ1bmN0aW9uKHQsIG9yaWdpbiwgcmFkLCBhdHRyKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgbnMgPSBtZS5ucyxcblx0XHRcdHJpbmcgPSBuZXcgbnMuUmluZyhtZSwgb3JpZ2luLCBhdHRyLCByYWQpO1xuXHRcdHJpbmcudG9CYWNrKCk7XG5cdFx0bWUucmluZ3MucHVzaChyaW5nKTtcblx0XHR0LiQocmluZykucmFkID0gcmFkO1xuXHRcdHJldHVybiByaW5nO1xuXHR9O1xuXHQqL1xuXG5cdG1lLmluaXRIaXN0b3J5ID0gZnVuY3Rpb24oKSB7XG5cdFx0aGlzdG9yeS5pbml0KG1lLnVybENoYW5nZWQuYmluZChtZSksIHsgdW5lc2NhcGU6IFwiLC9cIiB9KTtcblx0fTtcblxuXHRtZS5mcmVzaFVybCA9ICcnO1xuXG5cdC8qXG5cdCAqIGNhbGxiYWNrIGZvciBldmVyeSB1cmwgY2hhbmdlLCBlaXRoZXIgaW5pdGlhdGVkIGJ5IHVzZXIgb3Jcblx0ICogYnkgdGhpcyBjbGFzcyBpdHNlbGZcblx0ICovXG5cdG1lLnVybENoYW5nZWQgPSBmdW5jdGlvbihoYXNoKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgdHIgPSBtZS5jdXJyZW50VHJhbnNpdGlvbjtcblxuXHRcdGlmICghbWUuZnJlc2hVcmwpIHtcblx0XHRcdC8vIHNldHRpbmcgYW4gdXJsIGZvciB0aGUgdmVyeSBmaXJzdCB0aW1lXG5cdFx0XHRpZiAoaGFzaC5pbmRleE9mKCcvfi8nKSkge1xuXHRcdFx0XHRtZS5iYXNlVXJsID0gaGFzaC5zdWJzdHIoMCwgaGFzaC5pbmRleE9mKCcvfi8nKSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdG1lLmZyZXNoVXJsID0gaGFzaDtcblxuXHRcdGlmICh0ciAmJiB0ci5ydW5uaW5nKSB7XG5cdFx0XHR2aXM0LmxvZygndHJhbnNpdGlvbiBpcyBydW5uaW5nIGF0IHRoZSBtb21lbnQsIGFkZGluZyBsaXN0ZW5lcicpO1xuXHRcdFx0dHIub25Db21wbGV0ZShtZS5jaGFuZ2VVcmwuYmluZChtZSkpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtZS5jaGFuZ2VVcmwoKTtcblx0XHR9XG5cdH07XG5cblx0Lypcblx0ICogdGhpcyBmdW5jdGlvbiBpbml0aWF0ZSB0aGUgYWN0aW9uIHdoaWNoIGZvbGxvd3MgdGhlIHVybCBjaGFuZ2Vcblx0ICovXG5cdG1lLmNoYW5nZVVybCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIHBhcnRzID0gbWUuZnJlc2hVcmwuc3BsaXQoJy8nKSwgdG9rZW4gPSBwYXJ0c1twYXJ0cy5sZW5ndGgtMV0sIHVybDtcblxuXHRcdC8vIHZhciB1cmxQYXJ0cyA9IG1lLmZyZXNoVXJsLnNwbGl0KCcvfi8nKTtcblx0XHRpZiAobWUuZnJlc2hVcmwgPT09IFwiXCIpIG1lLm5hdmlnYXRlVG8obWUudHJlZVJvb3QpO1xuXG5cdFx0aWYgKG1lLm5vZGVzQnlVcmxUb2tlbi5oYXNPd25Qcm9wZXJ0eSh0b2tlbikpIHtcblx0XHRcdHVybCA9IG1lLmdldFVybEZvck5vZGUobWUubm9kZXNCeVVybFRva2VuW3Rva2VuXSk7XG5cdFx0XHRpZiAobWUuZnJlc2hVcmwgIT0gdXJsKSB7XG5cdFx0XHRcdC8vIG5vZGUgZm91bmQgYnV0IHVybCBub3QgcGVyZmVjdFxuXHRcdFx0XHRoaXN0b3J5LmxvYWQodXJsKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1lLm5hdmlnYXRlVG8obWUubm9kZXNCeVVybFRva2VuW3Rva2VuXSwgdHJ1ZSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1lLm5hdmlnYXRlVG8obWUudHJlZVJvb3QpO1xuXHRcdH1cblx0fTtcblxuXHRtZS5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24obm9kZSwgZnJvbVVybENoYW5nZSkge1xuXHRcdC8vIHZpczQubG9nKCdiYy5uYXZpZ2F0ZVRvKCcsbm9kZSwnLCcsZnJvbVVybENoYW5nZSwnKScpO1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0aWYgKGZyb21VcmxDaGFuZ2UpIG1lLmNoYW5nZVZpZXcobm9kZS51cmxUb2tlbik7XG5cdFx0ZWxzZSBoaXN0b3J5LmxvYWQobWUuZ2V0VXJsRm9yTm9kZShub2RlKSk7XG5cdFx0Ly9cblx0XHQkKCcuYnViYmxldHJlZS1sYWJlbCwgLmJ1YmJsZXRyZWUtbGFiZWwyJywgbWUuJGNvbnRhaW5lcikucmVtb3ZlQ2xhc3MoJ2N1cnJlbnQnKTtcblx0XHQkKCcuYnViYmxldHJlZS1sYWJlbDIuJytub2RlLmlkLCBtZS4kY29udGFpbmVyKS5hZGRDbGFzcygnY3VycmVudCcpO1xuXHRcdCQoJy5idWJibGV0cmVlLWxhYmVsLicrbm9kZS5pZCwgbWUuJGNvbnRhaW5lcikuYWRkQ2xhc3MoJ2N1cnJlbnQnKTtcblx0fTtcblxuXHQvKlxuXHQgKiBjcmVhdGVzIGEgdmFsaWQgdXJsIGZvciBhIGdpdmVuIG5vZGUsIGUuZy4gLzIwMTAvaGVhbHRoL21lZGljYWwtc3VwcGxpZXNcblx0ICovXG5cdG1lLmdldFVybEZvck5vZGUgPSBmdW5jdGlvbihub2RlKSB7XG5cdFx0dmFyIHBhcnRzID0gW107XG5cdFx0cGFydHMucHVzaChub2RlLnVybFRva2VuKTtcblx0XHR3aGlsZSAobm9kZS5wYXJlbnQpIHtcblx0XHRcdHBhcnRzLnB1c2gobm9kZS5wYXJlbnQudXJsVG9rZW4pO1xuXHRcdFx0bm9kZSA9IG5vZGUucGFyZW50O1xuXHRcdH1cblx0XHRwYXJ0cy5yZXZlcnNlKCk7XG5cdFx0cmV0dXJuIG1lLmJhc2VVcmwrJy9+LycrcGFydHMuam9pbignLycpO1xuXHR9O1xuXG5cdG1lLm9uTm9kZUNsaWNrID0gZnVuY3Rpb24obm9kZSkge1xuXHRcdGlmICgkLmlzRnVuY3Rpb24obWUuY29uZmlnLm5vZGVDbGlja0NhbGxiYWNrKSkge1xuXHRcdFx0bWUuY29uZmlnLm5vZGVDbGlja0NhbGxiYWNrKG5vZGUpO1xuXHRcdH1cblx0fTtcblxuXHQvLyByZW1vdmVzIGFsbCBub2Rlc1xuXHRtZS5jbGVhbiA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGk7XG5cdFx0JCgnLmJ1YmJsZXRyZWUtbGFiZWwnKS5yZW1vdmUoKTtcblx0XHQvKmZvciAoaSBpbiBtZS5kaXNwbGF5T2JqZWN0cykge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0aWYgKCQuaXNGdW5jdGlvbihtZS5kaXNwbGF5T2JqZWN0c1tpXS5oaWRlKSkgbWUuZGlzcGxheU9iamVjdHNbaV0uaGlkZSgpO1xuXHRcdFx0fSBjYXRjaCAoZSkge1xuXG5cdFx0XHR9XG5cdFx0fSovXG5cdH07XG5cblx0dGhpcy5sb29wID0gZnVuY3Rpb24oKSB7XG5cdFx0VFdFRU4udXBkYXRlKCk7XG5cdH07XG5cblx0aWYgKCFtZS5jb25maWcuaGFzT3duUHJvcGVydHkoJ2RhdGEnKSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignbm8gZGF0YScpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtZS5jb25maWcuZGF0YSA9PSBcInN0cmluZ1wiKSB7XG5cdFx0Ly8gdXNlIHRoZSBnaXZlbiBqcyBvYmplY3Rcblx0XHRtZS5sb2FkRGF0YSgpO1xuXHR9IGVsc2Uge1xuXHRcdC8vIGxvYWQgbG9jYWwgdHJlZSBqc29uIGZpbGVcblx0XHRuZXcgdmlzNC5EZWxheWVkVGFzaygxMDAwLCBtZSwgbWUuc2V0RGF0YSwgbWUuY29uZmlnLmRhdGEpO1xuXHR9XG59O1xuXG5CdWJibGVUcmVlLlN0eWxlcyA9IHt9O1xuIiwiLypqc2hpbnQgdW5kZWY6IHRydWUsIGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlLCBkZXZlbDogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlICovXG4vKmdsb2JhbCBSYXBoYWVsLCBUV0VFTiwgQnViYmxlVHJlZSAqL1xuXG4vKlxuICogc3RvcmVzIHZpc3VhbCBhdHRyaWJ1dGVzIG9mIGFsbCBlbGVtZW50cyBpbiB0aGUgdmlzdWFsaXphdGlvblxuICogXG4gKi9cbkJ1YmJsZVRyZWUuTGF5b3V0ID0gZnVuY3Rpb24oKSB7XG5cblx0dmFyIG1lID0gdGhpcztcblx0bWUub2JqZWN0cyA9IFtdO1xuXHRtZS5wcm9wcyA9IFtdO1xuXHRtZS50b0hpZGUgPSBbXTtcblx0bWUudG9TaG93ID0gW107XG5cdFxuXHQvKlxuXHQgKiBmbGFyZS1zdHlsZSB0cmFuc2l0aW9uZXIgc3ludGF4XG5cdCAqXG5cdCAqIGlmIHlvdSBoYXZlIGFuIG9iamVjdCBidWJibGUsIHlvdSBjYW4gZWFzaWx5IGNoYW5nZSBpdHMgcHJvcGVydGllcyB3aXRoXG5cdCAqIFxuXHQgKiB2YXIgbCA9IG5ldyBPcGVuU3BlbmRpbmdzLkJ1YmJsZVRyZWUuTGF5b3V0KCk7XG5cdCAqIGwuJChidWJibGUpLnJhZGl1cyA9IDMwO1xuXHQgKiBsLiQoYnViYmxlKS5hbmdsZSA9IDMuMTQ7XG5cdCAqL1xuXHRtZS4kID0gZnVuY3Rpb24ob2JqKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgaSwgbywgcDtcblx0XHRmb3IgKGkgaW4gbWUub2JqZWN0cykge1xuXHRcdFx0byA9IG1lLm9iamVjdHNbaV07XG5cdFx0XHRpZiAobyA9PSBvYmopIHJldHVybiBtZS5wcm9wc1tpXTtcblx0XHR9XG5cdFx0bWUub2JqZWN0cy5wdXNoKG9iaik7XG5cdFx0cCA9IHt9O1xuXHRcdG1lLnByb3BzLnB1c2gocCk7XG5cdFx0cmV0dXJuIHA7XG5cdH07XG5cdFxuXHQvKlxuXHQgKiB1c2UgbWUgZnVuY3Rpb24gdG8gbWFyayBvYmplY3RzIHRoYXQgc2hvdWxkIGJlIHNob3duIGJlZm9yZVxuXHQgKiB0aGUgdHJhbnNpdGlvblxuXHQgKi9cblx0bWUuc2hvdyA9IGZ1bmN0aW9uKG9iaikge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0bWUudG9TaG93LnB1c2gob2JqKTtcblx0fTtcblx0XG5cdFxuXHQvKlxuXHQgKiB1c2UgbWUgZnVuY3Rpb24gdG8gbWFyayBvYmplY3RzIHRoYXQgc2hvdWxkIGJlIGhpZGRlbiBhZnRlclxuXHQgKiB0aGUgdHJhbnNpdGlvblxuXHQgKi9cblx0bWUuaGlkZSA9IGZ1bmN0aW9uKG9iaikge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0bWUudG9IaWRlLnB1c2gob2JqKTtcblx0fTtcblx0XG59OyIsIi8qanNoaW50IHVuZGVmOiB0cnVlLCBicm93c2VyOnRydWUsIGpxdWVyeTogdHJ1ZSwgZGV2ZWw6IHRydWUgKi9cbi8qZ2xvYmFsIFJhcGhhZWwsIFRXRUVOLCBCdWJibGVUcmVlICovXG4vKlxuICogcmVwcmVzZW50cyBhIHJhZGlhbCBsaW5lXG4gKi9cbkJ1YmJsZVRyZWUuTGluZSA9IGZ1bmN0aW9uKGJjLCBhdHRyLCBvcmlnaW4sIGFuZ2xlLCBmcm9tUmFkLCB0b1JhZCkge1xuXHR0aGlzLmJjID0gYmM7XG5cdHRoaXMubyA9IG9yaWdpbjtcblx0dGhpcy5hbmdsZSA9IGFuZ2xlO1xuXHR0aGlzLmZyb21SYWQgPSBmcm9tUmFkO1xuXHR0aGlzLmF0dHIgPSBhdHRyO1xuXHR0aGlzLnRvUmFkID0gdG9SYWQ7XG5cdFxuXHR0aGlzLmdldFhZID0gZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy54MSA9IHRoaXMuby54ICsgTWF0aC5jb3ModGhpcy5hbmdsZSkgKiB0aGlzLmZyb21SYWQ7IFxuXHRcdHRoaXMueTEgPSB0aGlzLm8ueSAtTWF0aC5zaW4odGhpcy5hbmdsZSkgKiB0aGlzLmZyb21SYWQ7XG5cdFx0dGhpcy54MiA9IHRoaXMuby54ICsgTWF0aC5jb3ModGhpcy5hbmdsZSkgKiB0aGlzLnRvUmFkOyBcblx0XHR0aGlzLnkyID0gdGhpcy5vLnkgIC1NYXRoLnNpbih0aGlzLmFuZ2xlKSAqIHRoaXMudG9SYWQ7XG5cdH07XG5cdFxuXHR0aGlzLmluaXQgPSBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmdldFhZKCk7XG5cdFx0Y29uc29sZS5sb2coXCJmb29cIiwgXCJNXCIrdGhpcy54MStcIiBcIit0aGlzLnkxK1wiTFwiK3RoaXMueDIrXCIgXCIrdGhpcy55MiwgYXR0cik7XG5cdFx0dGhpcy5wYXRoID0gdGhpcy5iYy5wYXBlci5wYXRoKFxuXHRcdFx0XCJNXCIrdGhpcy54MStcIiBcIit0aGlzLnkxK1wiTFwiK3RoaXMueDIrXCIgXCIrdGhpcy55MlxuXHRcdCkuYXR0cih0aGlzLmF0dHIpO1xuXHR9O1xuXHRcblx0dGhpcy5kcmF3ID0gZnVuY3Rpb24oKSB7XG5cdFx0Ly9jb25zb2xlLmxvZygnbGluZS5kcmF3KCknLCB0aGlzLmFuZ2xlLCB0aGlzLmZyb21SYWQsIHRoaXMudG9SYWQpO1xuXHRcdC8vY29uc29sZS5sb2codGhpcy54MSwgdGhpcyk7XG5cdFx0dGhpcy5nZXRYWSgpO1xuXHRcdC8vY29uc29sZS5sb2codGhpcy54MSk7XG5cdFx0dGhpcy5wYXRoLmF0dHIoeyBwYXRoOiBcIk1cIit0aGlzLngxK1wiIFwiK3RoaXMueTErXCJMXCIrdGhpcy54MitcIiBcIit0aGlzLnkyIH0pO1xuXHR9O1xuXHRcblx0XG5cdHRoaXMuaW5pdCgpO1xuXHRcbn07IiwiLypqc2hpbnQgdW5kZWY6IHRydWUsIGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlLCBkZXZlbDogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlICovXG4vKmdsb2JhbCB2aXM0LCBCdWJibGVUcmVlICovXG5cbi8qXG4gKiBsb2FkcyB0aGUgZGF0YSBhbmQgaW5pdGlhbGl6ZXMgdGhlIGJ1YmJsZWNoYXJ0XG4gKiB5b3UgbmVlZCB0byBpbmNsdWRlIHRoZSBidWJibGVjaGFydC5taW4uanMgZmlyc3RcbiAqL1xuQnViYmxlVHJlZS5Mb2FkZXIgPSBmdW5jdGlvbihjb25maWcpIHtcblxuXHR2YXIgbWUgPSB0aGlzO1xuXG5cdG1lLmNvbmZpZyA9IGNvbmZpZztcblxuXHRtZS5ucyA9IEJ1YmJsZVRyZWU7XG5cblx0Lypcblx0ICogbG9hZHMgZGF0YSBmcm9tIGEgbG9jYWwgSlNPTiBmaWxlXG5cdCAqL1xuXHRtZS5sb2FkRGF0YSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIHVybCA9IG1lLmNvbmZpZy5kYXRhO1xuXHRcdGNvbnNvbGUubG9nKCdsb2FkaW5nIHVybCAnLHVybCk7XG5cdFx0JC5hamF4KHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0Y29udGV4dDogbWUsXG5cdFx0XHRkYXRhVHlwZTogJ2pzb24nLFxuXHRcdFx0c3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuXHRcdFx0XHR0aGlzLnJ1bihkYXRhKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fTtcblxuXHQvKlxuXHQgKiBydW4gd2lsbCBiZSBjYWxsZWQgYnkgZGF0YUxvYWRlZCBvbmNlLCB3ZWxsLCB0aGUgZGF0YSBpcyBsb2FkZWRcblx0ICovXG5cdG1lLnJ1biA9IGZ1bmN0aW9uKGRhdGEpIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdC8vIGluaXRpYWxpemUgYnViYmxlIGNoYXJ0XG5cdFx0dmFyIGJ1YmJsZUNoYXJ0ID0gbmV3IEJ1YmJsZVRyZWUoXG5cdFx0XHRtZS5jb25maWdcblx0XHQpO1xuXHRcdGJ1YmJsZUNoYXJ0LnNldERhdGEoZGF0YSk7XG5cdFx0bWUuY29uZmlnLmluc3RhbmNlID0gYnViYmxlQ2hhcnQ7XG5cdH07XG5cblx0aWYgKCFtZS5jb25maWcuaGFzT3duUHJvcGVydHkoJ2RhdGEnKSkge1xuXHRcdC8vY29uc29sZS5lcnJvcignQnViYmxlVHJlZSBFcnJvcjogbm8gZGF0YSBzZXQnLCBtZS5jb25maWcpO1xuXHR9XG5cdGlmICh0eXBlb2YgbWUuY29uZmlnLmRhdGEgPT0gXCJzdHJpbmdcIikge1xuXHRcdC8vIHVzZSB0aGUgZ2l2ZW4ganMgb2JqZWN0XG5cdFx0bWUubG9hZERhdGEoKTtcblx0fSBlbHNlIHtcblx0XHQvLyBsb2FkIGxvY2FsIHRyZWUganNvbiBmaWxlXG5cdFx0bWUucnVuKG1lLmNvbmZpZy5kYXRhKTtcblx0fVxufTtcblxuIiwiLypqc2hpbnQgdW5kZWY6IHRydWUsIGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlLCBkZXZlbDogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlICovXG4vKmdsb2JhbCB2aXM0LCBCdWJibGVUcmVlICovXG4vKlxuICogaW4gSlMgdGhlcmUncyBubyB0aGluZyBsaWtlIG1vdXNlIGV2ZW50IGNhcHN1bGF0aW9uLCB0aGlzXG4gKiBjbGFzcyB3aWxsIHdvcmsgYXJvdW5kIHRoaXMuIEl0IG1ha2VzIGl0IHBvc3NpYmxlIHRvIHNldFxuICogZXZlbnRzIGxpa2UgY2xpY2sgYW5kIGhvdmVyIGZvciBhIGdyb3VwIG9mIG9iamVjdHMgdGhhdFxuICogYmVsb25nIHRvZ2V0aGVyXG4gKi9cbkJ1YmJsZVRyZWUuTW91c2VFdmVudEdyb3VwID0gZnVuY3Rpb24odGFyZ2V0LCBtZW1iZXJzKSB7XG5cdFxuXHR2YXIgbWUgPSB0aGlzO1xuXHRtZS50YXJnZXQgPSB0YXJnZXQ7IC8vIGUuZy4gaW5zdGFuY2Ugb2YgYSBidWJibGVcblx0bWUubWVtYmVycyA9IG1lbWJlcnM7IC8vIGUuZy4gcmFwaGFlbCBub2RlcyBvciBodG1sIGVsZW1lbnRzXG5cdFxuXHQvKlxuXHQgKiBwdWJsaWMgaW50ZXJmYWNlIGZvciBzZXR0aW5nIGNsaWNrIGhhbmRsZXJzXG5cdCAqL1xuXHRtZS5jbGljayA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgbWVtYmVycyA9IG1lLm1lbWJlcnMsIGksIG1lbTtcblx0XHRtZS5jbGlja0NhbGxiYWNrID0gY2FsbGJhY2s7XG5cdFx0Zm9yIChpIGluIG1lbWJlcnMpIHtcblx0XHRcdG1lbSA9IG1lbWJlcnNbaV07XG5cdFx0XHQkKG1lbSkuY2xpY2sobWUuaGFuZGxlQ2xpY2suYmluZChtZSkpO1xuXHRcdH1cblx0fTtcblx0XG5cdG1lLmhhbmRsZUNsaWNrID0gZnVuY3Rpb24oZXZ0KSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblx0XHRtZS5jbGlja0NhbGxiYWNrKHsgdGFyZ2V0OiBtZS50YXJnZXQsIG9yaWdFdmVudDogZXZ0LCBtb3VzZUV2ZW50R3JvdXA6IG1lIH0pO1xuXHR9O1xuXHRcblx0Lypcblx0ICpcblx0ICovXG5cdG1lLmhvdmVyID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR2YXIgbWUgPSB0aGlzLCBtZW1iZXJzID0gbWUubWVtYmVycywgaSwgbWVtO1xuXHRcdG1lLmhvdmVyQ2FsbGJhY2sgPSBjYWxsYmFjaztcblx0XHRmb3IgKGkgaW4gbWVtYmVycykge1xuXHRcdFx0bWVtID0gbWVtYmVyc1tpXTtcblx0XHRcdCQobWVtKS5ob3ZlcihtZS5oYW5kbGVNZW1iZXJIb3Zlci5iaW5kKG1lKSwgbWUuaGFuZGxlTWVtYmVyVW5Ib3Zlci5iaW5kKG1lKSk7XG5cdFx0fVxuXHR9O1xuXHRcblx0Lypcblx0ICogcHVibGljIGludGVyZmFjZSBmb3Igc2V0dGluZyB1bmhvdmVyIGNhbGxiYWNrXG5cdCAqL1xuXHRtZS51bmhvdmVyID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdG1lLnVuaG92ZXJDYWxsYmFjayA9IGNhbGxiYWNrO1xuXHR9O1xuXHRcblx0Lypcblx0ICogc3RvcmVzIHdldGhlciB0aGUgbW91c2UgY3VycmVudGx5IGhvdmVyIG92ZXIgYW55XG5cdCAqIG9iamVjdCBpbiBvdXIgbWVtYmVycyBsaXN0LiB0aGlzIGlzIHVzZWQgdG8gY2hlY2tcblx0ICogd2V0aGVyIGEgb2NjdXJpbmcgaG92ZXIgZXZlbnQgaXMgYW4gYWN0dWFsIGhvdmVyXG5cdCAqIGV2ZW50LlxuXHQgKi9cblx0bWUud2FzSG92ZXJpbmcgPSBmYWxzZTtcblx0bWUubW91c2VJc092ZXIgPSBmYWxzZTtcblx0XG5cdG1lLmhhbmRsZU1lbWJlckhvdmVyID0gZnVuY3Rpb24oZXZ0KSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblx0XHQvLyBzaW5jZSB3ZSBkb24ndCBrbm93IHdoaWNoIGV2ZW50IHdpbGwgcmVjZWl2ZSBmaXJzdCwgdGhlIHVuaG92ZXIgb2YgdGhlIG1lbWJlclxuXHRcdC8vIHRoZSBtb3VzZSBpcyBsZWF2aW5nIG9yIHRoZSBob3ZlciBvZiB0aGUgbWVtYmVyIHRoZSBtb3VzZSBpcyBlbnRlcmluZywgd2Ugd2lsbFxuXHRcdC8vIGRlbGF5IHRoZSBmaW5hbCBjaGVjayBhIGJpdFxuXHRcdG5ldyB2aXM0LkRlbGF5ZWRUYXNrKDI1LCBtZSwgbWUuaGFuZGxlTWVtYmVySG92ZXJEZWxheWVkLCBldnQpO1x0XG5cdFx0XG5cdH07XG5cblx0Lypcblx0ICogd2lsbCBiZSBjYWxsZWQgYWZ0ZXIgYWxsIHVuaG92ZXIgZXZlbnRzIGFyZSBwcm9jZXNzZWRcblx0ICovXG5cdG1lLmhhbmRsZU1lbWJlckhvdmVyRGVsYXllZCA9IGZ1bmN0aW9uKGV2dCkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0Ly8gdGhpcyB3aWxsIGV2ZW50dWFsbHkgb3ZlcnJpZGUgdGhlIGZhbHNlIHNldCBieSBoYW5kbGVNZW1iZXJVbkhvdmVyIGEgZmV3XG5cdFx0Ly8gbWlsbGlzZWNvbmRzIG9rLiBFeGFjdGx5IHdoYXQgd2Ugd2FudCFcblx0XHRtZS5tb3VzZUlzT3ZlciA9IHRydWU7XG5cdFx0XHRcdFxuXHRcdGlmICghbWUud2FzSG92ZXJpbmcpIHtcblx0XHRcdC8vIHRoZSB0YXJnZXQgaXMgbmV3bHkgaG92ZXJlZFxuXHRcdFx0XG5cdFx0XHRtZS53YXNIb3ZlcmluZyA9IHRydWU7XG5cdFx0XHRpZiAoJC5pc0Z1bmN0aW9uKG1lLmhvdmVyQ2FsbGJhY2spKSB7XG5cdFx0XHRcdG1lLmhvdmVyQ2FsbGJhY2soeyB0YXJnZXQ6IG1lLnRhcmdldCwgb3JpZ0V2ZW50OiBldnQsIG1vdXNlRXZlbnRHcm91cDogbWUgfSk7XG5cdFx0XHR9XG5cdFx0fSAvLyBlbHNlIGNhbiBiZSBpZ25vcmVkLCBubyBuZXdzXG5cdH07XG5cdFxuXG5cdG1lLmhhbmRsZU1lbWJlclVuSG92ZXIgPSBmdW5jdGlvbihldnQpIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdG1lLm1vdXNlSXNPdmVyID0gZmFsc2U7XG5cdFx0Ly8gd2UgbmVlZCB0byB3YWl0IGEgYml0IHRvIGZpbmQgb3V0IGlmIHRoaXMgaXMgYSByZWFsIHVuaG92ZXIgZXZlbnRcblx0XHQvLyBvciBqdXN0IHRoZSBjaGFuZ2UgdG8gYW5vdGhlciBlbGVtZW50IGluIHRoZSBtZW1iZXIgbGlzdFxuXHRcdC8vIHNvIHdlIG5lZWQgdG8gZGVsYXkgdGhlIGZpbmFsIGNoZWNrIGEgYml0IChsZXQncyBzYXkgMzBtcylcblx0XHRuZXcgdmlzNC5EZWxheWVkVGFzayg0MCwgbWUsIG1lLmhhbmRsZU1lbWJlclVuSG92ZXJEZWxheWVkLCBldnQpO1x0XG5cdH07XG5cdFxuXHRtZS5oYW5kbGVNZW1iZXJVbkhvdmVyRGVsYXllZCA9IGZ1bmN0aW9uKGV2dCkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0aWYgKCFtZS5tb3VzZUlzT3Zlcikge1xuXHRcdFx0Ly8gd2VsbCwgZmluYWxseSBubyBuYXN0eSBob3ZlciBldmVudCBoYXMgZGlzdHVyYmVkIG91ciBnb29kIHVuaG92ZXJcblx0XHRcdC8vIHByb2Nlc3MsIHNvIHdlIGNhbiBhc3N1bWUgdGhhdCB0aGlzIGlzIGEgcmVhbCB1bmhvdmVyIGV2ZW50XG5cdFx0XHRcblx0XHRcdG1lLndhc0hvdmVyaW5nID0gZmFsc2U7XG5cdFx0XHRpZiAoJC5pc0Z1bmN0aW9uKG1lLnVuaG92ZXJDYWxsYmFjaykpIHtcblx0XHRcdFx0bWUudW5ob3ZlckNhbGxiYWNrKHsgdGFyZ2V0OiBtZS50YXJnZXQsIG9yaWdFdmVudDogZXZ0LCBtb3VzZUV2ZW50R3JvdXA6IG1lIH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0XHRcblx0Lypcblx0ICogdGhpcyBmdW5jdGlvbiBpcyB1c2VkIGZvciBsYXRlciBhZGRpdGlvbiBvZiBtZW1iZXIgb2JqZWN0cyBsaWtlIGR5bmFtaWMgdG9vbHRpcHNcblx0ICovXG5cdG1lLmFkZE1lbWJlciA9IGZ1bmN0aW9uKG1lbSkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0Ly8gaWYgKG1lLmNsaWNrQ2FsbGJhY2sgJiYgbm9DbGljaykgJChtZW0pLmNsaWNrKG1lLmhhbmRsZUNsaWNrLmJpbmQobWUpKTtcblx0XHRpZiAobWUuaG92ZXJDYWxsYmFjaykgJChtZW0pLmhvdmVyKG1lLmhhbmRsZU1lbWJlckhvdmVyLmJpbmQobWUpLCBtZS5oYW5kbGVNZW1iZXJVbkhvdmVyLmJpbmQobWUpKTtcblx0XHRtZS5tZW1iZXJzLnB1c2gobWVtKTtcblx0fTtcblx0XG5cdC8qXG5cdCAqIHRoaXMgZnVuY3Rpb24gaXMgdXNlZCBmb3IgbGF0ZXIgcmVtb3ZhbCBvZiBtZW1iZXIgb2JqZWN0cyBsaWtlIGR5bmFtaWMgdG9vbHRpcHNcblx0ICovXG5cdG1lLnJlbW92ZU1lbWJlciA9IGZ1bmN0aW9uKG1lbSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIG1lbWJlcnMgPSBtZS5tZW1iZXJzLCBpLCB0bXAgPSBbXTtcblx0XHRpZiAobWUuY2xpY2tDYWxsYmFjaykgJChtZW0pLnVuYmluZCgnY2xpY2snKTtcblx0XHRpZiAobWUuaG92ZXJDYWxsYmFjaykgJChtZW0pLnVuYmluZCgnbW91c2VlbnRlciBtb3VzZWxlYXZlJyk7XG5cdFx0Zm9yIChpIGluIG1lbWJlcnMpIHtcblx0XHRcdGlmIChtZW1iZXJzW2ldICE9IG1lbSkgdG1wLnB1c2gobWVtYmVyc1tpXSk7XG5cdFx0fVxuXHRcdG1lLm1lbWJlcnMgPSB0bXA7XG5cdFx0XG5cdH07XG59O1xuIiwiLypqc2hpbnQgdW5kZWY6IHRydWUsIGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlLCBkZXZlbDogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlICovXG4vKmdsb2JhbCBSYXBoYWVsLCBUV0VFTiwgQnViYmxlVHJlZSAqL1xuXG4vKlxuICogcmVwcmVzZW50cyBhIHJpbmdcbiAqL1xuQnViYmxlVHJlZS5SaW5nID0gZnVuY3Rpb24obm9kZSwgYmMsIG8sIHJhZCwgYXR0cikge1xuXHRcblx0dmFyIG1lID0gdGhpcztcblx0bWUuY2xhc3NOYW1lID0gXCJyaW5nXCI7XG5cdG1lLnJhZCA9IHJhZDtcblx0bWUuYmMgPSBiYztcblx0bWUuYXR0ciA9IGF0dHI7XG5cdG1lLm9yaWdpbiA9IG87XG5cdG1lLmFscGhhID0gMTtcblx0bWUudmlzaWJsZSA9IGZhbHNlO1xuXHRtZS5ub2RlID0gbm9kZTtcblx0XG5cdG1lLmluaXQgPSBmdW5jdGlvbigpIHtcblx0XHQvL3ZhciBvID0gbWUub3JpZ2luO1xuXHR9O1xuXHRcblx0bWUuZHJhdyA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIG8gPSBtZS5vcmlnaW47XG5cdFx0aWYgKCFtZS52aXNpYmxlKSByZXR1cm47XG5cdFx0bWUuY2lyY2xlLmF0dHIoeyBjeDogby54LCBjeTogby55LCByOiBtZS5yYWQsICdzdHJva2Utb3BhY2l0eSc6IG1lLmFscGhhIH0pO1xuXHR9O1xuXHRcblx0Lypcblx0ICogcmVtb3ZlcyBhbGwgcmFwaGFlbCBub2RlcyBmcm9tIHN0YWdlXG5cdCAqL1xuXHRtZS5oaWRlID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblx0XHRtZS5jaXJjbGUucmVtb3ZlKCk7XG5cdFx0bWUudmlzaWJsZSA9IGZhbHNlO1xuXHR9O1xuXHRcblx0bWUuc2hvdyA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0bWUuY2lyY2xlID0gbWUuYmMucGFwZXIuY2lyY2xlKG8ueCwgby55LCBtZS5yYWQpLmF0dHIobWUuYXR0cik7XG5cdFx0bWUudmlzaWJsZSA9IHRydWU7XG5cdFx0bWUuY2lyY2xlLnRvQmFjaygpO1xuXHR9O1xuXHRcblx0XG5cdG1lLmluaXQoKTtcbn07IiwiLypqc2hpbnQgdW5kZWY6IHRydWUsIGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlLCBkZXZlbDogdHJ1ZSAqL1xuLypnbG9iYWwgUmFwaGFlbCwgVFdFRU4sIHZpczQsIEJ1YmJsZVRyZWUgKi9cblxuLypcbiAqIHRyYW5zZm9ybXMgdGhlIGN1cnJlbnQgZGlzcGxheSB0byBhIG5ldyBsYXlvdXRcbiAqIHdoaWxlIHRyYW5zaXRpb25pbmcsIHRoZXJlIGFyZSBzZXZlcmFsIHBvc3NpYmxlIGNhc2VzOlxuICogLSBhIG5vZGUgZXhpc3RzIGJvdGggYmVmb3JlIGFuZCBhZnRlciB0aGUgdHJhbnNpdGlvblxuICogLSBhIG5vZGUgYXBwZWFycyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB0cmFuc2l0aW9uXG4gKiAtIGEgbm9kZSBkaXNhcHBlYXJzIGF0IHRoZSBlbmQgb2YgdGhlIHRyYW5zdGlvblxuICovXG4gXG5CdWJibGVUcmVlLlRyYW5zaXRpb25lciA9IGZ1bmN0aW9uKGR1cmF0aW9uKSB7XG5cdFxuXHR2YXIgbWUgPSB0aGlzO1xuXHRcblx0bWUuZHVyYXRpb24gPSBkdXJhdGlvbjtcblx0bWUucnVubmluZyA9IGZhbHNlO1xuXHRtZS5jb21wbGV0ZUNhbGxiYWNrcyA9IFtdO1xuXHRcblx0bWUuY2hhbmdlTGF5b3V0ID0gZnVuY3Rpb24obGF5b3V0KSB7XG5cdFx0dmFyIGksIG8sIHByb3BzLCBwLCBtZSA9IHRoaXM7XG5cdFx0bWUucnVubmluZyA9IHRydWU7XG5cdFx0bWUubGF5b3V0ID0gbGF5b3V0O1xuXHRcdFxuXHRcdC8vIGF0IGZpcnN0IHNob3cgYWxsIG9iamVjdHMgdGhhdCBhcmUgbWFya2VkIGZvciBzaG93aW5nXG5cdFx0Zm9yIChpIGluIGxheW91dC50b1Nob3cpIHtcblx0XHRcdG8gPSBsYXlvdXQudG9TaG93W2ldO1xuXHRcdFx0aWYgKCQuaXNGdW5jdGlvbihvLnNob3cpKSBvLnNob3coKTtcblx0XHR9XG5cdFx0XG5cdFx0Zm9yIChpIGluIGxheW91dC5vYmplY3RzKSB7XG5cdFx0XHRvID0gbGF5b3V0Lm9iamVjdHNbaV07XG5cdFx0XHRpZiAobyA9PT0gdW5kZWZpbmVkIHx8IG8gPT09IG51bGwpIGNvbnRpbnVlO1xuXHRcdFx0cHJvcHMgPSBsYXlvdXQucHJvcHNbaV07XG5cdFx0XHRcblx0XHRcdGlmIChtZS5kdXJhdGlvbiA+IDApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKG8pLCB0b1Byb3BzID0ge307XG5cdFx0XHRcdFxuXHRcdFx0XHRmb3IgKHAgaW4gcHJvcHMpIHtcblx0XHRcdFx0XHQvL29bcF0gPSBwcm9wc1twXTtcblx0XHRcdFx0XHR0b1Byb3BzW3BdID0gcHJvcHNbcF07XG5cdFx0XHRcdH1cblx0XHRcdFx0dHdlZW4udG8odG9Qcm9wcywgbWUuZHVyYXRpb24pO1xuXHRcdFx0XHR0d2Vlbi5lYXNpbmcoVFdFRU4uRWFzaW5nLkV4cG9uZW50aWFsLk91dCk7XG5cdFx0XHRcdGlmICgkLmlzRnVuY3Rpb24oby5kcmF3KSkgdHdlZW4ub25VcGRhdGUoby5kcmF3LmJpbmQobykpO1xuXHRcdFx0XHRpZiAoaSA9PSBsYXlvdXQub2JqZWN0cy5sZW5ndGgtMSkgdHdlZW4ub25Db21wbGV0ZShtZS5fY29tcGxldGVkLmJpbmQobWUpKTtcblx0XHRcdFx0dHdlZW4uc3RhcnQoKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZvciAocCBpbiBwcm9wcykge1xuXHRcdFx0XHRcdG9bcF0gPSBwcm9wc1twXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAobyAmJiAkLmlzRnVuY3Rpb24oby5kcmF3KSkgby5kcmF3KCk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmIChtZS5kdXJhdGlvbiA9PT0gMCkge1xuXHRcdFx0Ly8gcmVkcmF3IGFsbFxuXHRcdFx0Zm9yIChpIGluIGxheW91dC5vYmplY3RzKSB7XG5cdFx0XHRcdG8gPSBsYXlvdXQub2JqZWN0c1tpXTtcblx0XHRcdFx0aWYgKG8gJiYgJC5pc0Z1bmN0aW9uKG8uZHJhdykpIG8uZHJhdygpO1xuXHRcdFx0fVxuXHRcdFx0bWUuX2NvbXBsZXRlZCgpO1xuXHRcdH1cblx0fTtcblx0XG5cdG1lLm9uQ29tcGxldGUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0dHJ5IHtcblx0XHRcdGlmICgkLmlzRnVuY3Rpb24oY2FsbGJhY2spKSBtZS5jb21wbGV0ZUNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHQvL3ZpczQubG9nKGUpO1xuXHRcdH1cblx0fTtcblx0XG5cdG1lLl9jb21wbGV0ZWQgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCBjYWxsYmFja3MgPSBtZS5jb21wbGV0ZUNhbGxiYWNrcywgaSwgb2JqO1xuXHRcdG1lLnJ1bm5pbmcgPSBmYWxzZTtcblx0XHRcblx0XHRmb3IgKGkgaW4gbWUubGF5b3V0Lm9iamVjdHMpIHtcblx0XHRcdG9iaiA9IG1lLmxheW91dC5vYmplY3RzW2ldO1xuXHRcdFx0aWYgKG9iaiAmJiAkLmlzRnVuY3Rpb24ob2JqLmRyYXcpKSBvYmouZHJhdygpOyAvLyB0aGUgZmluYWwgZHJhd1x0XG5cdFx0fVxuXHRcdC8vIG5vdyBoaWRlIGFsbCBvYmplY3RzIG1hcmtlZCBmb3IgaGlkaW5nXG5cdFx0Zm9yIChpIGluIG1lLmxheW91dC50b0hpZGUpIHtcblx0XHRcdG9iaiA9IG1lLmxheW91dC50b0hpZGVbaV07XG5cdFx0XHRpZiAob2JqICYmICQuaXNGdW5jdGlvbihvYmouaGlkZSkpIG9iai5oaWRlKCk7XG5cdFx0fVxuXHRcdFxuXHRcdGZvciAoaSBpbiBjYWxsYmFja3MpIHtcblx0XHRcdGNhbGxiYWNrc1tpXSgpO1xuXHRcdH1cblx0fTtcblx0XG59OyIsIi8qanNoaW50IHVuZGVmOiB0cnVlLCBicm93c2VyOnRydWUsIGpxdWVyeTogdHJ1ZSwgZGV2ZWw6IHRydWUgKi9cbi8qZ2xvYmFsIFJhcGhhZWwsIFRXRUVOLCBCdWJibGVUcmVlICovXG5cbkJ1YmJsZVRyZWUuVXRpbHMgPSB7fTtcblxuQnViYmxlVHJlZS5VdGlscy5sb2cgPSBmdW5jdGlvbigpIHtcblx0dHJ5IHtcblx0XHRpZiAod2luZG93Lmhhc093blByb3BlcnR5KCdjb25zb2xlJykpIGNvbnNvbGUubG9nLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdH0gY2F0Y2ggKGUpIHt9XHRcbn07XG5cbkJ1YmJsZVRyZWUuVXRpbHMuYW1vdW50MnJhZCA9IGZ1bmN0aW9uKGEpIHtcblx0cmV0dXJuIE1hdGgucG93KE1hdGgubWF4KDAsIGEpIC9CdWJibGVUcmVlLmEycmFkQmFzZSwgMC42KTtcbn07XG5cbkJ1YmJsZVRyZWUuVXRpbHMuZm9ybWF0TnVtYmVyID0gZnVuY3Rpb24obikge1xuXHR2YXIgcHJlZml4ID0gJyc7XG5cdGlmIChuIDwgMCkge1xuXHRcdG4gPSBuKi0xO1xuXHRcdHByZWZpeCA9ICctJztcblx0fVxuXHRpZiAobiA+PSAxMDAwMDAwMDAwMDAwKSByZXR1cm4gcHJlZml4K01hdGgucm91bmQobiAvIDEwMDAwMDAwMDAwMCkvMTAgKyAndCc7XG5cdGlmIChuID49IDEwMDAwMDAwMDApIHJldHVybiBwcmVmaXgrTWF0aC5yb3VuZChuIC8gMTAwMDAwMDAwKS8xMCArICdiJztcblx0aWYgKG4gPj0gMTAwMDAwMCkgcmV0dXJuIHByZWZpeCtNYXRoLnJvdW5kKG4gLyAxMDAwMDApLzEwICsgJ20nO1xuXHRpZiAobiA+PSAxMDAwKSByZXR1cm4gcHJlZml4K01hdGgucm91bmQobiAvIDEwMCkvMTAgKyAnayc7XG5cdGVsc2UgcmV0dXJuIHByZWZpeCtuO1xuXHRcbn07XG4iLCIvKmpzaGludCB1bmRlZjogdHJ1ZSwgYnJvd3Nlcjp0cnVlLCBqcXVlcnk6IHRydWUsIGRldmVsOiB0cnVlLCBzbWFydHRhYnM6IHRydWUgKi9cbi8qZ2xvYmFsIEJ1YmJsZVRyZWUgKi9cblxuXG5CdWJibGVUcmVlLlZlY3RvciA9IGZ1bmN0aW9uKHgseSkge1xuXHR2YXIgbWUgPSB0aGlzO1xuXHRtZS54ID0geDsgXG5cdG1lLnkgPSB5O1xuXHRcblx0Lypcblx0ICogY2FsY3VsYXRlcyB0aGUgbGVuZ3RoIG9mIHRoZSB2ZWN0b3Jcblx0ICovXG5cdG1lLmxlbmd0aCA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0cmV0dXJuIE1hdGguc3FydChtZS54Km1lLnggKyBtZS55ICogbWUueSk7XG5cdH07XG5cdFxuXHQvKlxuXHQgKiBjaGFuZ2VzIHRoZSBsZW5ndGggb2YgdGhlIHZlY3RvclxuXHQgKi9cblx0bWUubm9ybWFsaXplID0gZnVuY3Rpb24obGVuKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgbCA9IG1lLmxlbmd0aCgpO1xuXHRcdGlmICghbGVuKSBsZW4gPSAxLjA7XG5cdFx0bWUueCAqPSBsZW4vbDtcblx0XHRtZS55ICo9IGxlbi9sO1xuXHR9O1xuXHRcblx0Lypcblx0ICogY3JlYXRlcyBhbiBleGFjdCBjb3B5IG9mIHRoaXMgdmVjdG9yXG5cdCAqL1xuXHRtZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXM7XG5cdFx0cmV0dXJuIG5ldyBCdWJibGVUcmVlLlZlY3RvcihtZS54LCBtZS55KTtcblx0fTtcbn07IiwiLypqc2hpbnQgdW5kZWY6IHRydWUsIGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlLCBkZXZlbDogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlICovXG4vKmdsb2JhbCBSYXBoYWVsLCBUV0VFTiwgQnViYmxlVHJlZSwgdmlzNCAqL1xuXG5CdWJibGVUcmVlLkJ1YmJsZXMgPSBCdWJibGVUcmVlLkJ1YmJsZXMgfHwge307XG5cbi8qXG4gKiByZXByZXNlbnRzIGEgYnViYmxlXG4gKi9cbkJ1YmJsZVRyZWUuQnViYmxlcy5QbGFpbiA9IGZ1bmN0aW9uKG5vZGUsIGJ1YmJsZWNoYXJ0LCBvcmlnaW4sIHJhZGl1cywgYW5nbGUsIGNvbG9yKSB7XG5cblx0dmFyIG5zID0gQnViYmxlVHJlZSwgdXRpbHMgPSBucy5VdGlscywgbWUgPSB0aGlzO1xuXHRtZS5jbGFzc05hbWUgPSBcImJ1YmJsZVwiO1xuXHRtZS5ub2RlID0gbm9kZTtcblx0bWUucGFwZXIgPSBidWJibGVjaGFydC5wYXBlcjtcblx0bWUub3JpZ2luID0gb3JpZ2luO1xuXHRtZS5iYyA9IGJ1YmJsZWNoYXJ0O1xuXHRtZS5yYWQgPSByYWRpdXM7XG5cdG1lLmFuZ2xlID0gYW5nbGU7XG5cdG1lLmNvbG9yID0gY29sb3I7XG5cdG1lLmFscGhhID0gMTtcblx0bWUudmlzaWJsZSA9IGZhbHNlO1xuXHRtZS5ucyA9IG5zO1xuXHRtZS5wb3MgPSBucy5WZWN0b3IoMCwwKTtcblx0bWUuYnViYmxlUmFkID0gdXRpbHMuYW1vdW50MnJhZCh0aGlzLm5vZGUuYW1vdW50KTtcblx0bWUuY29udGFpbmVyID0gbWUuYmMuJGNvbnRhaW5lcjtcblxuXHQvKlxuXHQgKiBjaGlsZCByb3RhdGlvbiBpcyBqdXN0IHVzZWQgZnJvbSBvdXRzaWRlIHRvIGxheW91dCBwb3NzaWJsZSBjaGlsZCBidWJibGVzXG5cdCAqL1xuXHRtZS5jaGlsZFJvdGF0aW9uID0gMDtcblxuXG5cdC8qXG5cdCAqIGNvbnZlcnRlcyBwb2xhciBjb29yZGluYXRlcyB0byB4LHlcblx0ICovXG5cdG1lLmdldFhZID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgbyA9IG1lLm9yaWdpbiwgYSA9IG1lLmFuZ2xlLCByID0gbWUucmFkO1xuXHRcdGlmIChtZS5wb3MgPT09IHVuZGVmaW5lZCkgbWUucG9zID0gbmV3IG1lLm5zLlZlY3RvcigwLDApO1xuXHRcdG1lLnBvcy54ID0gby54ICsgTWF0aC5jb3MoYSkgKiByO1xuXHRcdG1lLnBvcy55ID0gby55IC0gTWF0aC5zaW4oYSkgKiByO1xuXHR9O1xuXG5cdC8qXG5cdCAqIGluaXN0YWxpemVzIHRoZSBidWJibGVcblx0ICovXG5cdG1lLmluaXQgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdG1lLmdldFhZKCk7XG5cblx0XHR2YXIgc2hvd0ljb24gPSBmYWxzZTsgLy90aGlzLmJ1YmJsZVJhZCAqIHRoaXMuYmMuYnViYmxlU2NhbGUgPiAzMDtcblxuXHRcdGlmICghbWUubm9kZS5zaG9ydExhYmVsKSBtZS5ub2RlLnNob3J0TGFiZWwgPSBtZS5ub2RlLmxhYmVsLmxlbmd0aCA+IG1lLmJjLmNvbmZpZy5jdXRMYWJlbHNBdCszID8gbWUubm9kZS5sYWJlbC5zdWJzdHIoMCwgbWUuYmMuY29uZmlnLmN1dExhYmVsc0F0KSsnLi4uJyA6IG1lLm5vZGUubGFiZWw7XG5cblx0XHRtZS5pbml0aWFsaXplZCA9IHRydWU7XG5cblx0XHQvL21lLnNob3coKTtcblx0fTtcblxuXHQvKlxuXHQgKlxuXHQgKi9cblx0bWUub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdG1lLmJjLm9uTm9kZUNsaWNrKG1lLm5vZGUpO1xuXG5cdFx0Ly9pZiAobWUubm9kZS5jaGlsZHJlbi5sZW5ndGggPiAxKSB7XG5cdFx0XHRtZS5iYy5uYXZpZ2F0ZVRvKG1lLm5vZGUpO1xuXHRcdC8vfVxuXHR9O1xuXG5cdG1lLm9uaG92ZXIgPSBmdW5jdGlvbihlKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgYyA9IG1lLmJjLiRjb250YWluZXJbMF07XG5cdFx0ZS5ub2RlID0gbWUubm9kZTtcblx0XHRlLnRhcmdldCA9IG1lO1xuXHRcdGUuYnViYmxlUG9zID0geyB4Om1lLnBvcy54LCB5OiBtZS5wb3MueSB9O1xuXHRcdGUubW91c2VQb3MgPSB7IHg6ZS5vcmlnRXZlbnQucGFnZVggLSBjLm9mZnNldExlZnQsIHk6IGUub3JpZ0V2ZW50LnBhZ2VZIC0gYy5vZmZzZXRUb3AgfTtcblx0XHRlLnR5cGUgPSAnU0hPVyc7XG5cdFx0bWUuYmMudG9vbHRpcChlKTtcblx0fTtcblxuXHRtZS5vbnVuaG92ZXIgPSBmdW5jdGlvbihlKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgYyA9IG1lLmJjLiRjb250YWluZXJbMF07XG5cdFx0ZS5ub2RlID0gbWUubm9kZTtcblx0XHRlLnR5cGUgPSAnSElERSc7XG5cdFx0ZS50YXJnZXQgPSBtZTtcblx0XHRlLmJ1YmJsZVBvcyA9IHsgeDptZS5wb3MueCwgeTogbWUucG9zLnkgfTtcblx0XHRlLm1vdXNlUG9zID0geyB4OmUub3JpZ0V2ZW50LnBhZ2VYIC0gYy5vZmZzZXRMZWZ0LCB5OiBlLm9yaWdFdmVudC5wYWdlWSAtIGMub2Zmc2V0VG9wIH07XG5cdFx0bWUuYmMudG9vbHRpcChlKTtcblx0fTtcblxuXHRtZS5kcmF3ID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcyxcblx0XHRcdHIgPSBNYXRoLm1heCg1LCBtZS5idWJibGVSYWQgKiBtZS5iYy5idWJibGVTY2FsZSksXG5cdFx0XHRveCA9IG1lLnBvcy54LFxuXHRcdFx0b3kgPSBtZS5wb3MueSxcblx0XHRcdGRldm51bGwgPSBtZS5nZXRYWSgpLFxuXHRcdHggPSBtZS5wb3MueCwgeSA9IG1lLnBvcy55O1xuXHRcdGlmICghbWUudmlzaWJsZSkgcmV0dXJuO1xuXG5cdFx0bWUuY2lyY2xlLmF0dHIoeyBjeDogbWUucG9zLngsIGN5OiBtZS5wb3MueSwgcjogciwgJ2ZpbGwtb3BhY2l0eSc6IG1lLmFscGhhIH0pO1xuXHRcdGlmIChtZS5ub2RlLmNoaWxkcmVuLmxlbmd0aCA+IDEpIG1lLmRhc2hlZEJvcmRlci5hdHRyKHsgY3g6IG1lLnBvcy54LCBjeTogbWUucG9zLnksIHI6IHItNCwgJ3N0cm9rZS1vcGFjaXR5JzogbWUuYWxwaGEgKiAwLjkgfSk7XG5cdFx0ZWxzZSBtZS5kYXNoZWRCb3JkZXIuYXR0cih7ICdzdHJva2Utb3BhY2l0eSc6IDAgfSk7XG5cblxuXHRcdC8vbWUubGFiZWwuYXR0cih7IHg6IG1lLnBvcy54LCB5OiBtZS5wb3MueSwgJ2ZvbnQtc2l6ZSc6IE1hdGgubWF4KDQsIG1lLmJ1YmJsZVJhZCAqIG1lLmJjLmJ1YmJsZVNjYWxlICogMC4yNSkgfSk7XG5cblx0XHRtZS5sYWJlbC5zaG93KCk7XG5cdFx0bWUubGFiZWwuZmluZCgnKicpLnNob3coKTtcblx0XHRtZS5sYWJlbDIuc2hvdygpO1xuXHRcdGlmIChyID49IG1lLmJjLmNvbmZpZy5taW5SYWRpdXNMYWJlbHMpIHtcblx0XHRcdC8vIGZ1bGwgbGFiZWxcblx0XHRcdG1lLmxhYmVsMi5oaWRlKCk7XG5cdFx0fSBlbHNlIGlmIChyID49IG1lLmJjLmNvbmZpZy5taW5SYWRpdXNBbW91bnRzKSB7XG5cdFx0XHQvLyBmdWxsIGxhYmVsXG5cdFx0XHRtZS5sYWJlbC5maW5kKCcuYnViYmxldHJlZS1kZXNjJykuaGlkZSgpO1xuXHRcdH0gZWxzZSBpZiAociA+PSBtZS5iYy5jb25maWcubWluUmFkaXVzSGlkZUxhYmVscykge1xuXHRcdFx0bWUubGFiZWwuaGlkZSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtZS5sYWJlbC5oaWRlKCk7XG5cdFx0XHRtZS5sYWJlbDIuaGlkZSgpO1xuXHRcdH1cblxuXHRcdG1lLmxhYmVsLmNzcyh7IHdpZHRoOiAyKnIrJ3B4Jywgb3BhY2l0eTogbWUuYWxwaGEgfSk7XG5cdFx0bWUubGFiZWwuY3NzKHsgbGVmdDogKG1lLnBvcy54LXIpKydweCcsIHRvcDogKG1lLnBvcy55LW1lLmxhYmVsLmhlaWdodCgpKjAuNSkrJ3B4JyB9KTtcblxuXHRcdHZhciB3ID0gTWF0aC5tYXgoNzAsIDMqcik7XG5cdFx0bWUubGFiZWwyLmNzcyh7IHdpZHRoOiB3KydweCcsIG9wYWNpdHk6IG1lLmFscGhhIH0pO1xuXHRcdG1lLmxhYmVsMi5jc3MoeyBsZWZ0OiAoeCAtIHcqMC41KSsncHgnLCB0b3A6ICh5ICsgcikrJ3B4JyB9KTtcblxuXHRcdC8vaWYgKG1lLmljb24pIG1lLmljb24udHJhbnNsYXRlKG1lLnBvcy54IC0gb3gsIG1lLnBvcy55IC0gb3kpO1xuXG5cdH07XG5cblx0Lypcblx0ICogcmVtb3ZlcyBhbGwgdmlzaWJsZSBlbGVtZW50cyBmcm9tIHRoZSBwYWdlXG5cdCAqL1xuXHRtZS5oaWRlID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgaTtcblx0XHRtZS5jaXJjbGUucmVtb3ZlKCk7XG5cdFx0bWUuZGFzaGVkQm9yZGVyLnJlbW92ZSgpO1xuXHRcdG1lLmxhYmVsLnJlbW92ZSgpO1xuXHRcdG1lLmxhYmVsMi5yZW1vdmUoKTtcblxuXHRcdC8vJCgnI2J1YmJsZS1jaGFydCcpXG5cdFx0bWUudmlzaWJsZSA9IGZhbHNlO1xuXG5cblx0XHQvL2lmIChtZS5pY29uKSBtZS5pY29uLnJlbW92ZSgpO1xuXHR9O1xuXG5cdC8qXG5cdCAqIGFkZHMgYWxsIHZpc2libGUgZWxlbWVudHMgdG8gdGhlIHBhZ2Vcblx0ICovXG5cdG1lLnNob3cgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCBpLCBjeCA9IG1lLnBvcy54LCBjeSA9IG1lLnBvcy55LCByID0gTWF0aC5tYXgoNSwgbWUuYnViYmxlUmFkICogbWUuYmMuYnViYmxlU2NhbGUpO1xuXG5cdFx0bWUuY2lyY2xlID0gbWUucGFwZXIuY2lyY2xlKGN4LCBjeSwgcilcblx0XHRcdC5hdHRyKHsgc3Ryb2tlOiBmYWxzZSwgZmlsbDogbWUuY29sb3IgfSk7XG5cblx0XHRtZS5kYXNoZWRCb3JkZXIgPSBtZS5wYXBlci5jaXJjbGUoY3gsIGN5LCByLTMpXG5cdFx0XHQuYXR0cih7IHN0cm9rZTogJyNmZmZmZmYnLCAnc3Ryb2tlLWRhc2hhcnJheSc6IFwiLSBcIiB9KTtcblxuXG5cdFx0bWUubGFiZWwgPSAkKCc8ZGl2IGNsYXNzPVwiYnViYmxldHJlZS1sYWJlbCAnK21lLm5vZGUuaWQrJ1wiPjxkaXYgY2xhc3M9XCJidWJibGV0cmVlLWFtb3VudFwiPicrXG4gICAgICBtZS5iYy5jb25maWcuZm9ybWF0VmFsdWUobWUubm9kZS5hbW91bnQpKyc8L2Rpdj48ZGl2IGNsYXNzPVwiYnViYmxldHJlZS1kZXNjXCI+JytcbiAgICAgIG1lLm5vZGUuc2hvcnRMYWJlbCsnPC9kaXY+PC9kaXY+Jyk7XG5cdFx0bWUuY29udGFpbmVyLmFwcGVuZChtZS5sYWJlbCk7XG5cblx0XHRpZiAobWUubm9kZS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG5cdFx0XHQkKG1lLmNpcmNsZS5ub2RlKS5jc3MoeyBjdXJzb3I6ICdwb2ludGVyJ30pO1xuXHRcdFx0JChtZS5sYWJlbCkuY3NzKHsgY3Vyc29yOiAncG9pbnRlcid9KTtcblx0XHR9XG5cblx0XHQvLyBhZGRpdGlvbmFsIGxhYmVsXG5cdFx0bWUubGFiZWwyID0gJCgnPGRpdiBjbGFzcz1cImJ1YmJsZXRyZWUtbGFiZWwyICcrbWUubm9kZS5pZCsnXCI+PHNwYW4+JyttZS5ub2RlLnNob3J0TGFiZWwrJzwvc3Bhbj48L2Rpdj4nKTtcblx0XHRtZS5jb250YWluZXIuYXBwZW5kKG1lLmxhYmVsMik7XG5cblx0XHR2YXIgbGlzdCA9IFttZS5jaXJjbGUubm9kZSwgbWUubGFiZWwsIG1lLmRhc2hlZEJvcmRlci5ub2RlXTtcblxuXHRcdHZhciBtZ3JvdXAgPSBuZXcgbWUubnMuTW91c2VFdmVudEdyb3VwKG1lLCBsaXN0KTtcblx0XHRtZ3JvdXAuY2xpY2sobWUub25jbGljay5iaW5kKG1lKSk7XG5cdFx0bWdyb3VwLmhvdmVyKG1lLm9uaG92ZXIuYmluZChtZSkpO1xuXHRcdG1ncm91cC51bmhvdmVyKG1lLm9udW5ob3Zlci5iaW5kKG1lKSk7XG5cblx0XHRtZS52aXNpYmxlID0gdHJ1ZTtcblxuXHR9O1xuXG5cdC8qXG5cdCAqIGFkZHMgYW4gaW52aXNpYmxlIGJ1YmJsZSBvbiB0b3AgZm9yIHNlYW1sZXNzXG5cdCAqIGV2ZW50IGhhbmRsaW5nXG5cdCAqL1xuXHRtZS5hZGRPdmVybGF5ID0gZnVuY3Rpb24oKSB7XG5cdFx0Ly8gYWRkIGludmlzaWJsZSBvdmVybGF5IGNpcmNsZVxuXHRcdHZhciBtZSA9IHRoaXM7XG5cblx0XHRtZS5vdmVybGF5ID0gbWUucGFwZXIuY2lyY2xlKG1lLmNpcmNsZS5hdHRycy5jeCwgbWUuY2lyY2xlLmF0dHJzLmN5LCBtZS5jaXJjbGUuYXR0cnMucilcblx0XHRcdC5hdHRyKHsgc3Ryb2tlOiBmYWxzZSwgZmlsbDogJyNmZmYnLCAnb3BhY2l0eSc6IDB9KTtcblxuXHRcdGlmIChSYXBoYWVsLnN2Zykge1xuXHRcdFx0bWUub3ZlcmxheS5ub2RlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCBtZS5ub2RlLmlkKTtcblx0XHR9XG5cdFx0JChtZS5vdmVybGF5Lm5vZGUpLmNzcyh7IGN1cnNvcjogJ3BvaW50ZXInfSk7XG5cdFx0JChtZS5vdmVybGF5Lm5vZGUpLmNsaWNrKG1lLm9uY2xpY2suYmluZChtZSkpO1xuXG5cdFx0JChtZS5sYWJlbCkuY2xpY2sobWUub25jbGljay5iaW5kKG1lKSk7XG5cdH07XG5cblx0bWUuaW5pdCgpO1xufTtcbiIsIi8qanNoaW50IHVuZGVmOiB0cnVlLCBicm93c2VyOnRydWUsIGpxdWVyeTogdHJ1ZSwgZGV2ZWw6IHRydWUsIHNtYXJ0dGFiczogdHJ1ZSAqL1xuLypnbG9iYWwgUmFwaGFlbCwgVFdFRU4sIEJ1YmJsZVRyZWUsIHZpczQgKi9cblxuQnViYmxlVHJlZS5CdWJibGVzID0gQnViYmxlVHJlZS5CdWJibGVzIHx8IHt9O1xuLypcbiAqIHJlcHJlc2VudHMgYSBidWJibGVcbiAqL1xuQnViYmxlVHJlZS5CdWJibGVzLkRvbnV0ID0gZnVuY3Rpb24obm9kZSwgYnViYmxlY2hhcnQsIG9yaWdpbiwgcmFkaXVzLCBhbmdsZSwgY29sb3IpIHtcblxuXHR2YXIgbnMgPSBCdWJibGVUcmVlLCB1dGlscyA9IG5zLlV0aWxzLCBtZSA9IHRoaXM7XG5cdG1lLmNsYXNzTmFtZSA9IFwiYnViYmxlXCI7XG5cdG1lLm5vZGUgPSBub2RlO1xuXHRtZS5wYXBlciA9IGJ1YmJsZWNoYXJ0LnBhcGVyO1xuXHRtZS5vcmlnaW4gPSBvcmlnaW47XG5cdG1lLmJjID0gYnViYmxlY2hhcnQ7XG5cdG1lLnJhZCA9IHJhZGl1cztcblx0bWUuYW5nbGUgPSBhbmdsZTtcblx0bWUuY29sb3IgPSBjb2xvcjtcblx0bWUuYWxwaGEgPSAxO1xuXHRtZS52aXNpYmxlID0gZmFsc2U7XG5cdG1lLm5zID0gbnM7XG5cdG1lLmJ1YmJsZVJhZCA9IHV0aWxzLmFtb3VudDJyYWQodGhpcy5ub2RlLmFtb3VudCk7XG5cblx0Lypcblx0ICogY2hpbGQgcm90YXRpb24gaXMganVzdCB1c2VkIGZyb20gb3V0c2lkZSB0byBsYXlvdXQgcG9zc2libGUgY2hpbGQgYnViYmxlc1xuXHQgKi9cblx0bWUuY2hpbGRSb3RhdGlvbiA9IDA7XG5cblxuXHQvKlxuXHQgKiBjb252ZXJ0ZXMgcG9sYXIgY29vcmRpbmF0ZXMgdG8geCx5XG5cdCAqL1xuXHRtZS5nZXRYWSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIG8gPSBtZS5vcmlnaW4sIGEgPSBtZS5hbmdsZSwgciA9IG1lLnJhZDtcblx0XHRtZS5wb3MueCA9IG8ueCArIE1hdGguY29zKGEpICogcjtcblx0XHRtZS5wb3MueSA9IG8ueSAtIE1hdGguc2luKGEpICogcjtcblx0fTtcblxuXHQvKlxuXHQgKiBpbmlzdGFsaXplcyB0aGUgYnViYmxlXG5cdCAqL1xuXHRtZS5pbml0ID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblx0XHRtZS5wb3MgPSBuZXcgbWUubnMuVmVjdG9yKDAsMCk7XG5cdFx0bWUuZ2V0WFkoKTtcblxuXHRcdHZhciBicmVha2Rvd24gPSBbXSwgYiwgaSwgdmFsLCBiZCA9IFtdLCBzdHlsZXMgPSBtZS5iYy5jb25maWcuYnViYmxlU3R5bGVzO1xuXG5cdFx0aWYgKCFtZS5ub2RlLnNob3J0TGFiZWwpIG1lLm5vZGUuc2hvcnRMYWJlbCA9IG1lLm5vZGUubGFiZWwubGVuZ3RoID4gNTAgPyBtZS5ub2RlLmxhYmVsLnN1YnN0cigwLCAzMCkrJy4uLicgOiBtZS5ub2RlLmxhYmVsO1xuXG5cdFx0bWUuYnJlYWtkb3duT3BhY2l0aWVzID0gWzAuMiwgMC43LCAwLjQ1LCAwLjYsIDAuMzVdO1xuXHRcdG1lLmJyZWFrZG93bkNvbG9ycyA9IFtmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZV07XG5cblx0XHRmb3IgKGkgaW4gbWUubm9kZS5icmVha2Rvd25zKSB7XG5cdFx0XHRiID0gbWUubm9kZS5icmVha2Rvd25zW2ldO1xuXHRcdFx0Yi5mYW1vdW50ID0gbWUuYmMuY29uZmlnLmZvcm1hdFZhbHVlKGIuYW1vdW50KTtcblx0XHRcdHZhbCA9IGIuYW1vdW50IC8gbWUubm9kZS5hbW91bnQ7XG5cdFx0XHRicmVha2Rvd24ucHVzaCh2YWwpO1xuXHRcdFx0YmQucHVzaChiKTtcblxuXHRcdFx0aWYgKHN0eWxlcyAmJiBzdHlsZXMuaGFzT3duUHJvcGVydHkoJ25hbWUnKSAmJiBzdHlsZXMubmFtZS5oYXNPd25Qcm9wZXJ0eShiLm5hbWUpICYmIHN0eWxlcy5uYW1lW2IubmFtZV0uaGFzT3duUHJvcGVydHkoJ29wYWNpdHknKSkge1xuXHRcdFx0XHRtZS5icmVha2Rvd25PcGFjaXRpZXNbYmQubGVuZ3RoLTFdID0gc3R5bGVzLm5hbWVbYi5uYW1lXS5vcGFjaXR5O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoc3R5bGVzICYmIHN0eWxlcy5oYXNPd25Qcm9wZXJ0eSgnbmFtZScpICYmIHN0eWxlcy5uYW1lLmhhc093blByb3BlcnR5KGIubmFtZSkgJiYgc3R5bGVzLm5hbWVbYi5uYW1lXS5oYXNPd25Qcm9wZXJ0eSgnY29sb3InKSkge1xuXHRcdFx0XHRtZS5icmVha2Rvd25Db2xvcnNbYmQubGVuZ3RoLTFdID0gc3R5bGVzLm5hbWVbYi5uYW1lXS5jb2xvcjtcblx0XHRcdFx0bWUuYnJlYWtkb3duT3BhY2l0aWVzW2JkLmxlbmd0aC0xXSA9IDE7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdG1lLm5vZGUuYnJlYWtkb3ducyA9IGJkO1xuXHRcdG1lLmJyZWFrZG93biA9IGJyZWFrZG93bjtcblxuXHRcdHZhciBzaG93SWNvbiA9IGZhbHNlOyAvL3RoaXMuYnViYmxlUmFkICogdGhpcy5iYy5idWJibGVTY2FsZSA+IDMwO1xuXHRcdC8vIGNyZWF0ZSBsYWJlbFxuXG5cdFx0bWUuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuXG5cdFx0Ly9tZS5zaG93KCk7XG5cdH07XG5cblx0Lypcblx0ICpcblx0ICovXG5cdG1lLm9uY2xpY2sgPSBmdW5jdGlvbihlKSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblxuXHRcdG1lLmJjLm5hdmlnYXRlVG8obWUubm9kZSk7XG5cblx0fTtcblxuXHRtZS5vbmhvdmVyID0gZnVuY3Rpb24oZSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGMgPSBtZS5iYy4kY29udGFpbmVyWzBdO1xuXHRcdGUubm9kZSA9IG1lLm5vZGU7XG5cdFx0ZS50YXJnZXQgPSBtZTtcblx0XHRlLmJ1YmJsZVBvcyA9IHsgeDptZS5wb3MueCwgeTogbWUucG9zLnkgfTtcblx0XHRlLm1vdXNlUG9zID0geyB4OmUub3JpZ0V2ZW50LnBhZ2VYIC0gYy5vZmZzZXRMZWZ0LCB5OiBlLm9yaWdFdmVudC5wYWdlWSAtIGMub2Zmc2V0VG9wIH07XG5cdFx0ZS50eXBlID0gJ1NIT1cnO1xuXHRcdG1lLmJjLnRvb2x0aXAoZSk7XG5cdH07XG5cblx0bWUub251bmhvdmVyID0gZnVuY3Rpb24oZSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGMgPSBtZS5iYy4kY29udGFpbmVyWzBdO1xuXHRcdGUubm9kZSA9IG1lLm5vZGU7XG5cdFx0ZS50YXJnZXQgPSBtZTtcblx0XHRlLnR5cGUgPSAnSElERSc7XG5cdFx0ZS5idWJibGVQb3MgPSB7IHg6bWUucG9zLngsIHk6IG1lLnBvcy55IH07XG5cdFx0ZS5tb3VzZVBvcyA9IHsgeDplLm9yaWdFdmVudC5wYWdlWCAtIGMub2Zmc2V0TGVmdCwgeTogZS5vcmlnRXZlbnQucGFnZVkgLSBjLm9mZnNldFRvcCB9O1xuXHRcdG1lLmJjLnRvb2x0aXAoZSk7XG5cdH07XG5cblx0dGhpcy5kcmF3ID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgciA9IE1hdGgubWF4KDUsIG1lLmJ1YmJsZVJhZCAqIG1lLmJjLmJ1YmJsZVNjYWxlKSwgb3ggPSBtZS5wb3MueCwgb3kgPSBtZS5wb3MueSwgZGV2bnVsbCA9IG1lLmdldFhZKCksIHNob3dMYWJlbCA9IHIgPiAyMCwgeCA9IG1lLnBvcy54LCB5ID0gbWUucG9zLnk7XG5cdFx0aWYgKCFtZS52aXNpYmxlKSByZXR1cm47XG5cblx0XHRtZS5jaXJjbGUuYXR0cih7IGN4OiB4LCBjeTogeSwgcjogciwgJ2ZpbGwtb3BhY2l0eSc6IG1lLmFscGhhIH0pO1xuXHRcdGlmIChtZS5ub2RlLmNoaWxkcmVuLmxlbmd0aCA+IDEpIG1lLmRhc2hlZEJvcmRlci5hdHRyKHsgY3g6IHgsIGN5OiB5LCByOiByKjAuODUsICdzdHJva2Utb3BhY2l0eSc6IG1lLmFscGhhICogMC44IH0pO1xuXHRcdGVsc2UgbWUuZGFzaGVkQm9yZGVyLmF0dHIoeyAnc3Ryb2tlLW9wYWNpdHknOiAwIH0pO1xuXG5cdFx0aWYgKG1lLmJyZWFrZG93bi5sZW5ndGggPiAxKSB7XG5cdFx0XHQvLyBkcmF3IGJyZWFrZG93biBjaGFydFxuXHRcdFx0dmFyIGkseDAseDEseDIseDMseTAseTEseTIseTMsaXIgPSByKjAuODUsIG9hID0gLU1hdGguUEkgKiAwLjUsIGRhO1xuXHRcdFx0Zm9yIChpIGluIG1lLmJyZWFrZG93bikge1xuXHRcdFx0XHRkYSA9IG1lLmJyZWFrZG93bltpXSAqIE1hdGguUEkgKiAyO1xuXHRcdFx0XHR4MCA9IHgrTWF0aC5jb3MoKG9hKSkqaXI7XG5cdFx0XHRcdHkwID0geStNYXRoLnNpbigob2EpKSppcjtcblx0XHRcdFx0eDEgPSB4K01hdGguY29zKChvYStkYSkpKmlyO1xuXHRcdFx0XHR5MSA9IHkrTWF0aC5zaW4oKG9hK2RhKSkqaXI7XG5cdFx0XHRcdHgyID0geCtNYXRoLmNvcygob2ErZGEpKSpyO1xuXHRcdFx0XHR5MiA9IHkrTWF0aC5zaW4oKG9hK2RhKSkqcjtcblx0XHRcdFx0eDMgPSB4K01hdGguY29zKChvYSkpKnI7XG5cdFx0XHRcdHkzID0geStNYXRoLnNpbigob2EpKSpyO1xuXHRcdFx0XHRvYSArPSBkYTtcblxuXHRcdFx0XHR2YXIgcGF0aCA9IFwiTVwiK3gwK1wiIFwiK3kwK1wiIEFcIitpcitcIixcIitpcitcIiAwIFwiKyhkYSA+IE1hdGguUEkgPyBcIjEsMVwiIDogXCIwLDFcIikrXCIgXCIreDErXCIsXCIreTErXCIgTFwiK3gyK1wiIFwiK3kyK1wiIEFcIityK1wiLFwiK3IrXCIgMCBcIisoZGEgPiBNYXRoLlBJID8gXCIxLDBcIiA6IFwiMCwwXCIpK1wiIFwiK3gzK1wiIFwiK3kzK1wiIFpcIjtcblxuXHRcdFx0XHRtZS5icmVha2Rvd25BcmNzW2ldLmF0dHIoeyBwYXRoOiBwYXRoLCAnc3Ryb2tlLW9wYWNpdHknOiBtZS5hbHBoYSowLjIsICdmaWxsLW9wYWNpdHknOiBtZS5icmVha2Rvd25PcGFjaXRpZXNbaV0qbWUuYWxwaGEgfSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly9tZS5sYWJlbC5hdHRyKHsgeDogbWUucG9zLngsIHk6IG1lLnBvcy55LCAnZm9udC1zaXplJzogTWF0aC5tYXgoNCwgbWUuYnViYmxlUmFkICogbWUuYmMuYnViYmxlU2NhbGUgKiAwLjI1KSB9KTtcblx0XHRpZiAoIXNob3dMYWJlbCkge1xuXHRcdFx0bWUubGFiZWwuaGlkZSgpO1xuXHRcdFx0bWUubGFiZWwyLnNob3coKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWUubGFiZWwuc2hvdygpO1xuXHRcdFx0aWYgKHIgPCA0MCkge1xuXHRcdFx0XHRtZS5sYWJlbC5maW5kKCcuYnViYmxldHJlZS1kZXNjJykuaGlkZSgpO1xuXHRcdFx0XHRtZS5sYWJlbDIuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ly8gZnVsbCBsYWJlbFxuXHRcdFx0XHRtZS5sYWJlbC5maW5kKCcuYnViYmxldHJlZS1kZXNjJykuc2hvdygpO1xuXHRcdFx0XHRtZS5sYWJlbDIuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdG1lLmxhYmVsLmNzcyh7IHdpZHRoOiAyKnIqMC45KydweCcsIG9wYWNpdHk6IG1lLmFscGhhIH0pO1xuXHRcdG1lLmxhYmVsLmNzcyh7IGxlZnQ6IChtZS5wb3MueC1yKjAuOSkrJ3B4JywgdG9wOiAobWUucG9zLnktbWUubGFiZWwuaGVpZ2h0KCkqMC41MykrJ3B4JyB9KTtcblxuXHRcdHZhciB3ID0gTWF0aC5tYXgoODAsIDMqcik7XG5cdFx0bWUubGFiZWwyLmNzcyh7IHdpZHRoOiB3KydweCcsIG9wYWNpdHk6IG1lLmFscGhhIH0pO1xuXHRcdG1lLmxhYmVsMi5jc3MoeyBsZWZ0OiAoeCAtIHcqMC41KSsncHgnLCB0b3A6ICh5ICsgcikrJ3B4JyB9KTtcblxuXHR9O1xuXG5cdC8qXG5cdCAqIHJlbW92ZXMgYWxsIHZpc2libGUgZWxlbWVudHMgZnJvbSB0aGUgcGFnZVxuXHQgKi9cblx0dGhpcy5oaWRlID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgaTtcblx0XHRtZS5jaXJjbGUucmVtb3ZlKCk7XG5cdFx0bWUuZGFzaGVkQm9yZGVyLnJlbW92ZSgpO1xuXHRcdG1lLmxhYmVsLnJlbW92ZSgpO1xuXHRcdG1lLmxhYmVsMi5yZW1vdmUoKTtcblxuXHRcdC8vbWUuYmMuJGNvbnRhaW5lclxuXHRcdG1lLnZpc2libGUgPSBmYWxzZTtcblx0XHRmb3IgKGkgaW4gbWUuYnJlYWtkb3duQXJjcykge1xuXHRcdFx0bWUuYnJlYWtkb3duQXJjc1tpXS5yZW1vdmUoKTtcblx0XHR9XG5cblx0XHQvL2lmIChtZS5pY29uKSBtZS5pY29uLnJlbW92ZSgpO1xuXHR9O1xuXG5cdC8qXG5cdCAqIGFkZHMgYWxsIHZpc2libGUgZWxlbWVudHMgdG8gdGhlIHBhZ2Vcblx0ICovXG5cdG1lLnNob3cgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbWUgPSB0aGlzLCBpLCByID0gTWF0aC5tYXgoNSwgbWUuYnViYmxlUmFkICogbWUuYmMuYnViYmxlU2NhbGUpO1xuXG5cdFx0bWUuY2lyY2xlID0gbWUucGFwZXIuY2lyY2xlKG1lLnBvcy54LCBtZS5wb3MueSwgcilcblx0XHRcdC5hdHRyKHsgc3Ryb2tlOiBmYWxzZSwgZmlsbDogbWUuY29sb3IgfSk7XG5cblx0XHRpZiAoJC5pc0Z1bmN0aW9uKG1lLmJjLmNvbmZpZy5pbml0VG9vbHRpcCkpIHtcblx0XHRcdG1lLmJjLmNvbmZpZy5pbml0VG9vbHRpcChtZS5ub2RlLCBtZS5jaXJjbGUubm9kZSk7XG5cdFx0fVxuXG5cdFx0bWUuZGFzaGVkQm9yZGVyID0gbWUucGFwZXIuY2lyY2xlKG1lLnBvcy54LCBtZS5wb3MueSwgIHIqMC44NSlcblx0XHRcdC5hdHRyKHsgc3Ryb2tlOiAnI2ZmZicsICdzdHJva2Utb3BhY2l0eSc6IG1lLmFscGhhICogMC40LCAgJ3N0cm9rZS1kYXNoYXJyYXknOiBcIi4gXCIsIGZpbGw6IGZhbHNlIH0pO1xuXG5cdFx0bWUubGFiZWwgPSAkKCc8ZGl2IGNsYXNzPVwiYnViYmxldHJlZS1sYWJlbCAnK21lLm5vZGUuaWQrJ1wiPjxkaXYgY2xhc3M9XCJidWJibGV0cmVlLWFtb3VudFwiPicrXG4gICAgICBtZS5iYy5jb25maWcuZm9ybWF0VmFsdWUobWUubm9kZS5hbW91bnQpKyc8L2Rpdj48ZGl2IGNsYXNzPVwiYnViYmxldHJlZS1kZXNjXCI+JytcbiAgICAgIG1lLm5vZGUuc2hvcnRMYWJlbCsnPC9kaXY+PC9kaXY+Jyk7XG5cdFx0bWUuYmMuJGNvbnRhaW5lci5hcHBlbmQobWUubGFiZWwpO1xuXG5cdFx0aWYgKG1lLm5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuXHRcdFx0JChtZS5jaXJjbGUubm9kZSkuY3NzKHsgY3Vyc29yOiAncG9pbnRlcid9KTtcblx0XHRcdCQobWUubGFiZWwpLmNzcyh7IGN1cnNvcjogJ3BvaW50ZXInfSk7XG5cdFx0fVxuXG5cdFx0Ly8gYWRkaXRpb25hbCBsYWJlbFxuXHRcdG1lLmxhYmVsMiA9ICQoJzxkaXYgY2xhc3M9XCJidWJibGV0cmVlLWxhYmVsMiAnK21lLm5vZGUuaWQrJ1wiPjxzcGFuPicrbWUubm9kZS5zaG9ydExhYmVsKyc8L3NwYW4+PC9kaXY+Jyk7XG5cdFx0bWUuYmMuJGNvbnRhaW5lci5hcHBlbmQobWUubGFiZWwyKTtcblxuXHRcdHZhciBsaXN0ID0gW21lLmNpcmNsZS5ub2RlLCBtZS5sYWJlbF07XG5cblx0XHRpZiAobWUuYnJlYWtkb3duLmxlbmd0aCA+IDEpIHtcblx0XHRcdG1lLmJyZWFrZG93bkFyY3MgPSB7fTtcblxuXHRcdFx0Zm9yIChpIGluIG1lLmJyZWFrZG93bikge1xuXHRcdFx0XHR2YXIgY29sID0gbWUuYnJlYWtkb3duQ29sb3JzW2ldID8gbWUuYnJlYWtkb3duQ29sb3JzW2ldIDogJyNmZmYnLFxuXHRcdFx0XHRcdGFyYyA9IG1lLnBhcGVyLnBhdGgoXCJNIDAgMCBMIDIgMlwiKVxuXHRcdFx0XHRcdC5hdHRyKHsgZmlsbDogY29sLCAnZmlsbC1vcGFjaXR5JzogTWF0aC5yYW5kb20oKSowLjQgKyAwLjMsIHN0cm9rZTogJyNmZmYnfSk7XG5cdFx0XHRcdG1lLmJyZWFrZG93bkFyY3NbaV0gPSBhcmM7XG5cdFx0XHRcdC8vICQoYXJjLm5vZGUpLmhvdmVyKG1lLmFyY0hvdmVyLmJpbmQobWUpLCBtZS5hcmNVbmhvdmVyLmJpbmQobWUpKTtcblxuXHRcdFx0XHRpZiAoJC5pc0Z1bmN0aW9uKG1lLmJjLmNvbmZpZy5pbml0VG9vbHRpcCkpIHtcblx0XHRcdFx0XHRtZS5iYy5jb25maWcuaW5pdFRvb2x0aXAobWUubm9kZS5icmVha2Rvd25zW2ldLCBhcmMubm9kZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Zm9yIChpIGluIG1lLmJyZWFrZG93bkFyY3MpIHtcblx0XHRcdFx0Ly8gd2UgZG9udCBhZGQgdGhlIGJyZWFrZG93biBhcmNzIHRvIHRoZSBsaXN0ICdjYXVzZVxuXHRcdFx0XHQvLyB3ZSB3YW50IHRoZW0gdG8gZmlyZSBkaWZmZXJlbnQgbW91c2Ugb3ZlciBldmVudHNcblx0XHRcdFx0Ly8gbGlzdC5wdXNoKG1lLmJyZWFrZG93bkFyY3NbaV0ubm9kZSk7XG5cdFx0XHRcdCQobWUuYnJlYWtkb3duQXJjc1tpXS5ub2RlKS5jbGljayhtZS5vbmNsaWNrLmJpbmQobWUpKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR2YXIgbWdyb3VwID0gbmV3IG1lLm5zLk1vdXNlRXZlbnRHcm91cChtZSwgbGlzdCk7XG5cdFx0bWdyb3VwLmNsaWNrKG1lLm9uY2xpY2suYmluZChtZSkpO1xuXHRcdG1ncm91cC5ob3ZlcihtZS5vbmhvdmVyLmJpbmQobWUpKTtcblx0XHRtZ3JvdXAudW5ob3ZlcihtZS5vbnVuaG92ZXIuYmluZChtZSkpO1xuXG5cdFx0bWUudmlzaWJsZSA9IHRydWU7XG5cblx0fTtcblxuXG5cdG1lLmFyY0hvdmVyID0gZnVuY3Rpb24oZSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGMgPSBtZS5iYy4kY29udGFpbmVyWzBdLCBpLFxuXHRcdFx0YXJjcyA9IG1lLmJyZWFrZG93bkFyY3MsIG5vZGUsXG5cdFx0XHRiZCA9IG1lLm5vZGUuYnJlYWtkb3ducztcblxuXHRcdGZvciAoaSBpbiBhcmNzKSB7XG5cdFx0XHRpZiAoYXJjc1tpXS5ub2RlID09IGUudGFyZ2V0KSB7XG5cdFx0XHRcdGUubm9kZSA9IGJkW2ldO1xuXHRcdFx0XHRlLmJ1YmJsZVBvcyA9IHsgeDptZS5wb3MueCwgeTogbWUucG9zLnkgfTtcblx0XHRcdFx0ZS5tb3VzZVBvcyA9IHsgeDplLnBhZ2VYIC0gYy5vZmZzZXRMZWZ0LCB5OiBlLnBhZ2VZIC0gYy5vZmZzZXRUb3AgfTtcblx0XHRcdFx0ZS50YXJnZXQgPSBtZTtcblx0XHRcdFx0ZS50eXBlID0gJ1NIT1cnO1xuXHRcdFx0XHRtZS5iYy50b29sdGlwKGUpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dmlzNC5sb2coJ2NhbnQgZmluZCB0aGUgYnJlYWtkb3duIG5vZGUnKTtcblx0fTtcblxuXHRtZS5hcmNVbmhvdmVyID0gZnVuY3Rpb24oZSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGMgPSBtZS5iYy4kY29udGFpbmVyWzBdLCBpLFxuXHRcdFx0YXJjcyA9IG1lLmJyZWFrZG93bkFyY3MsIG5vZGUsXG5cdFx0XHRiZCA9IG1lLm5vZGUuYnJlYWtkb3ducztcblxuXHRcdGZvciAoaSBpbiBhcmNzKSB7XG5cdFx0XHRpZiAoYXJjc1tpXS5ub2RlID09IGUudGFyZ2V0KSB7XG5cdFx0XHRcdGUubm9kZSA9IGJkW2ldO1xuXHRcdFx0XHRlLmJ1YmJsZVBvcyA9IHsgeDptZS5wb3MueCwgeTogbWUucG9zLnkgfTtcblx0XHRcdFx0ZS5tb3VzZVBvcyA9IHsgeDplLnBhZ2VYIC0gYy5vZmZzZXRMZWZ0LCB5OiBlLnBhZ2VZIC0gYy5vZmZzZXRUb3AgfTtcblx0XHRcdFx0ZS50eXBlID0gJ0hJREUnO1xuXHRcdFx0XHRlLnRhcmdldCA9IG1lO1xuXHRcdFx0XHRtZS5iYy50b29sdGlwKGUpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dmlzNC5sb2coJ2NhbnQgZmluZCB0aGUgYnJlYWtkb3duIG5vZGUnKTtcblx0fTtcblxuXHRtZS5pbml0KCk7XG59OyIsIi8qanNoaW50IHVuZGVmOiB0cnVlLCBicm93c2VyOnRydWUsIGpxdWVyeTogdHJ1ZSwgZGV2ZWw6IHRydWUsIHNtYXJ0dGFiczogdHJ1ZSAqL1xuLypnbG9iYWwgUmFwaGFlbCwgVFdFRU4sIEJ1YmJsZVRyZWUsIHZpczQsIHZpczRsb2FkZXIgKi9cblxuQnViYmxlVHJlZS5CdWJibGVzID0gQnViYmxlVHJlZS5CdWJibGVzIHx8IHt9O1xuXG4vKlxuICogcmVwcmVzZW50cyBhIGJ1YmJsZVxuICovXG5CdWJibGVUcmVlLkJ1YmJsZXMuSWNvbiA9IGZ1bmN0aW9uKG5vZGUsIGJ1YmJsZWNoYXJ0LCBvcmlnaW4sIHJhZGl1cywgYW5nbGUsIGNvbG9yKSB7XG5cblx0dmFyIG5zID0gQnViYmxlVHJlZSwgdXRpbHMgPSBucy5VdGlscywgbWUgPSB0aGlzO1xuXHRtZS5jbGFzc05hbWUgPSBcImJ1YmJsZVwiO1xuXHRtZS5ub2RlID0gbm9kZTtcblx0bWUucGFwZXIgPSBidWJibGVjaGFydC5wYXBlcjtcblx0bWUub3JpZ2luID0gb3JpZ2luO1xuXHRtZS5iYyA9IGJ1YmJsZWNoYXJ0O1xuXHRtZS5yYWQgPSByYWRpdXM7XG5cdG1lLmFuZ2xlID0gYW5nbGU7XG5cdG1lLmNvbG9yID0gY29sb3I7XG5cdG1lLmFscGhhID0gMTtcblx0bWUudmlzaWJsZSA9IGZhbHNlO1xuXHRtZS5ucyA9IG5zO1xuXHRtZS5wb3MgPSBucy5WZWN0b3IoMCwwKTtcblx0bWUuYnViYmxlUmFkID0gdXRpbHMuYW1vdW50MnJhZCh0aGlzLm5vZGUuYW1vdW50KTtcblxuXHRtZS5pY29uTG9hZGVkID0gZmFsc2U7XG5cblx0Lypcblx0ICogY2hpbGQgcm90YXRpb24gaXMganVzdCB1c2VkIGZyb20gb3V0c2lkZSB0byBsYXlvdXQgcG9zc2libGUgY2hpbGQgYnViYmxlc1xuXHQgKi9cblx0bWUuY2hpbGRSb3RhdGlvbiA9IDA7XG5cblxuXHQvKlxuXHQgKiBjb252ZXJ0ZXMgcG9sYXIgY29vcmRpbmF0ZXMgdG8geCx5XG5cdCAqL1xuXHRtZS5nZXRYWSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIG8gPSBtZS5vcmlnaW4sIGEgPSBtZS5hbmdsZSwgciA9IG1lLnJhZDtcblx0XHRpZiAobWUucG9zID09PSB1bmRlZmluZWQpIG1lLnBvcyA9IG5ldyBtZS5ucy5WZWN0b3IoMCwwKTtcblx0XHRtZS5wb3MueCA9IG8ueCArIE1hdGguY29zKGEpICogcjtcblx0XHRtZS5wb3MueSA9IG8ueSAtIE1hdGguc2luKGEpICogcjtcblx0fTtcblxuXHQvKlxuXHQgKiBpbmlzdGFsaXplcyB0aGUgYnViYmxlXG5cdCAqL1xuXHRtZS5pbml0ID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcztcblx0XHRtZS5nZXRYWSgpO1xuXG5cdFx0bWUuaGFzSWNvbiA9IG1lLm5vZGUuaGFzT3duUHJvcGVydHkoJ2ljb24nKTtcblxuXHRcdGlmICghbWUubm9kZS5zaG9ydExhYmVsKSBtZS5ub2RlLnNob3J0TGFiZWwgPSBtZS5ub2RlLmxhYmVsLmxlbmd0aCA+IDUwID8gbWUubm9kZS5sYWJlbC5zdWJzdHIoMCwgMzApKycuLi4nIDogbWUubm9kZS5sYWJlbDtcblxuXHRcdC8qaWYgKHNob3dJY29uKSB7XG5cdFx0XHRtZS5pY29uID0gbWUucGFwZXIucGF0aChcIk0xNy4wODEsNC4wNjVWMy4xMzdjMCwwLDAuMTA0LTAuODcyLTAuODgxLTAuODcyYy0wLjkyOCwwLTAuODkxLDAuOS0wLjg5MSwwLjl2MC45QzQuNTcyLDMuOTI1LDIuNjcyLDE1Ljc4MywyLjY3MiwxNS43ODNjMS4yMzctMi45OCw0LjQ2Mi0yLjc1NSw0LjQ2Mi0yLjc1NWM0LjA1LDAsNC40ODEsMi42ODEsNC40ODEsMi42ODFjMC45ODQtMi45NTMsNC41NDctMi42NjIsNC41NDctMi42NjJjMy43NjksMCw0LjUwOSwyLjcxOSw0LjUwOSwyLjcxOXMwLjc4Ny0yLjgxMiw0LjU1Ny0yLjc1NmMzLjI2MiwwLDQuNDQzLDIuNyw0LjQ0MywyLjd2LTAuMDU4QzI5LjY3Miw0LjM0OCwxNy4wODEsNC4wNjUsMTcuMDgxLDQuMDY1ek0xNS4zMjgsMjQuNzkzYzAsMS43NDQtMS44LDEuODAxLTEuOCwxLjgwMWMtMS44ODUsMC0xLjgtMS44MDEtMS44LTEuODAxczAuMDI4LTAuOTI4LTAuODcyLTAuOTI4Yy0wLjksMC0wLjk1NywwLjktMC45NTcsMC45YzAsMy42MjgsMy42LDMuNTcyLDMuNiwzLjU3MmMzLjYsMCwzLjU3Mi0zLjU0NSwzLjU3Mi0zLjU0NVYxMy45NjZoLTEuNzQ0VjI0Ljc5M3pcIilcblx0XHRcdFx0LnRyYW5zbGF0ZShtZS5wb3MueCwgbWUucG9zLnkpLmF0dHIoe2ZpbGw6IFwiI2ZmZlwiLCBzdHJva2U6IFwibm9uZVwifSk7XG5cdFx0fSovXG5cblxuXHRcdG1lLmluaXRpYWxpemVkID0gdHJ1ZTtcblxuXHRcdC8vbWUuc2hvdygpO1xuXHR9O1xuXG5cblx0Lypcblx0ICogYWRkcyBhbGwgdmlzaWJsZSBlbGVtZW50cyB0byB0aGUgcGFnZVxuXHQgKi9cblx0bWUuc2hvdyA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGksIGN4ID0gbWUucG9zLngsIGljb24sIGN5ID0gbWUucG9zLnksIHIgPSBNYXRoLm1heCg1LCBtZS5idWJibGVSYWQgKiBtZS5iYy5idWJibGVTY2FsZSk7XG5cblx0XHRtZS5jaXJjbGUgPSBtZS5wYXBlci5jaXJjbGUoY3gsIGN5LCByKVxuXHRcdFx0LmF0dHIoeyBzdHJva2U6IGZhbHNlLCBmaWxsOiBtZS5jb2xvciB9KTtcblxuXHRcdG1lLmRhc2hlZEJvcmRlciA9IG1lLnBhcGVyLmNpcmNsZShjeCwgY3ksIE1hdGgubWluKHItMywgciowLjk1KSlcblx0XHRcdC5hdHRyKHsgc3Ryb2tlOiAnI2ZmZmZmZicsICdzdHJva2UtZGFzaGFycmF5JzogXCItIFwiIH0pO1xuXG5cdFx0aWYgKCQuaXNGdW5jdGlvbihtZS5iYy5jb25maWcuaW5pdFRvb2x0aXApKSB7XG5cdFx0XHRtZS5iYy5jb25maWcuaW5pdFRvb2x0aXAobWUubm9kZSwgbWUuY2lyY2xlLm5vZGUpO1xuXHRcdH1cblxuXHRcdG1lLmxhYmVsID0gJCgnPGRpdiBjbGFzcz1cImJ1YmJsZXRyZWUtbGFiZWwgJyttZS5ub2RlLmlkKydcIj48ZGl2IGNsYXNzPVwiYnViYmxldHJlZS1hbW91bnRcIj4nK1xuICAgICAgbWUuYmMuY29uZmlnLmZvcm1hdFZhbHVlKG1lLm5vZGUuYW1vdW50KSsnPC9kaXY+PGRpdiBjbGFzcz1cImJ1YmJsZXRyZWUtZGVzY1wiPicrXG4gICAgICBtZS5ub2RlLnNob3J0TGFiZWwrJzwvZGl2PjwvZGl2PicpO1xuXHRcdG1lLmJjLiRjb250YWluZXIuYXBwZW5kKG1lLmxhYmVsKTtcblxuXHRcdGlmICgkLmlzRnVuY3Rpb24obWUuYmMuY29uZmlnLmluaXRUb29sdGlwKSkge1xuXHRcdFx0bWUuYmMuY29uZmlnLmluaXRUb29sdGlwKG1lLm5vZGUsIG1lLmxhYmVsWzBdKTtcblx0XHR9XG5cblx0XHQvLyBhZGRpdGlvbmFsIGxhYmVsXG5cdFx0bWUubGFiZWwyID0gJCgnPGRpdiBjbGFzcz1cImJ1YmJsZXRyZWUtbGFiZWwyICcrbWUubm9kZS5pZCsnXCI+PHNwYW4+JyttZS5ub2RlLnNob3J0TGFiZWwrJzwvc3Bhbj48L2Rpdj4nKTtcblx0XHRtZS5iYy4kY29udGFpbmVyLmFwcGVuZChtZS5sYWJlbDIpO1xuXG5cdFx0aWYgKG1lLm5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuXHRcdFx0JChtZS5jaXJjbGUubm9kZSkuY3NzKHsgY3Vyc29yOiAncG9pbnRlcid9KTtcblx0XHRcdCQobWUubGFiZWwpLmNzcyh7IGN1cnNvcjogJ3BvaW50ZXInfSk7XG5cdFx0fVxuXG5cdFx0Lyp2YXJcblx0XHRsaXN0PVttZS5jaXJjbGUubm9kZSwgbWUubGFiZWwsIG1lLmRhc2hlZEJvcmRlci5ub2RlXSxcblx0XHRtZ3JvdXAgPSBuZXcgbWUubnMuTW91c2VFdmVudEdyb3VwKG1lLCBsaXN0KTtcblx0XHRtZ3JvdXAuY2xpY2sobWUub25jbGljay5iaW5kKG1lKSk7XG5cdFx0bWdyb3VwLmhvdmVyKG1lLm9uaG92ZXIuYmluZChtZSkpO1xuXHRcdG1ncm91cC51bmhvdmVyKG1lLm9udW5ob3Zlci5iaW5kKG1lKSk7XG5cdFx0bWUubWdyb3VwID0gbWdyb3VwO1xuXHRcdCovXG5cblx0XHRtZS52aXNpYmxlID0gdHJ1ZTtcblxuXHRcdGlmIChtZS5oYXNJY29uKSB7XG5cdFx0XHRpZiAoIW1lLmljb25Mb2FkZWQpIG1lLmxvYWRJY29uKCk7XG5cdFx0XHRlbHNlIG1lLmRpc3BsYXlJY29uKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1lLmFkZE92ZXJsYXkoKTtcblx0XHR9XG5cdH07XG5cblx0Lypcblx0ICogd2lsbCBsb2FkIHRoZSBpY29uIGFzIHNvb24gYXMgbmVlZGVkXG5cdCAqL1xuXHRtZS5sb2FkSWNvbiA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGxkciA9IG5ldyB2aXM0bG9hZGVyKCk7XG5cdFx0bGRyLmFkZChtZS5iYy5jb25maWcucm9vdFBhdGggKyBtZS5ub2RlLmljb24pO1xuXHRcdGxkci5sb2FkKG1lLmljb25Mb2FkQ29tcGxldGUuYmluZChtZSkpO1xuXHR9O1xuXG5cdC8qXG5cdCAqIG9uIGNvbXBsZXRlIGhhbmRsZXIgZm9yIGljb24gbG9hZGluZyBwcm9jZXNzXG5cdCAqL1xuXHRtZS5pY29uTG9hZENvbXBsZXRlID0gZnVuY3Rpb24obGRyKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgc3ZnLCBqLCBwYXRocztcblx0XHRzdmcgPSBsZHIuaXRlbXNbMF0uZGF0YTtcblx0XHRtZS5pY29uUGF0aERhdGEgPSAnJztcblx0XHQvL2lmICh0eXBlb2Yoc3ZnKSA9PSBcInN0cmluZ1wiKSBzdmcgPSAkKHN2ZylbMF07XG5cdFx0c3ZnID0gJChzdmcpO1xuXHRcdHBhdGhzID0gJCgncGF0aCcsIHN2Zyk7IC8vc3ZnLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdwYXRoJyk7XG5cdFx0Zm9yIChqIGluIHBhdGhzKSB7XG5cdFx0XHRpZiAocGF0aHNbal0gJiYgJC5pc0Z1bmN0aW9uKHBhdGhzW2pdLmdldEF0dHJpYnV0ZSkpIHtcblx0XHRcdFx0bWUuaWNvblBhdGhEYXRhICs9IFN0cmluZyhwYXRoc1tqXS5nZXRBdHRyaWJ1dGUoJ2QnKSkrJyAnO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRtZS5pY29uTG9hZGVkID0gdHJ1ZTtcblx0XHRtZS5kaXNwbGF5SWNvbigpO1xuXHR9O1xuXG5cdC8qXG5cdCAqIHdpbGwgZGlzcGxheSB0aGUgaWNvbiwgY3JlYXRlIHRoZSBzdmcgcGF0aCBlbGVtZW50LCBldGNcblx0ICovXG5cdG1lLmRpc3BsYXlJY29uID0gZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG1lID0gdGhpcywgaSwgcGF0aDtcblx0XHRtZS5pY29uUGF0aHMgPSBbXTtcblxuXHRcdHBhdGggPSBtZS5wYXBlci5wYXRoKG1lLmljb25QYXRoRGF0YSk7XG5cdFx0cGF0aC5hdHRyKHtmaWxsOiBcIiNmZmZcIiwgc3Ryb2tlOiBcIm5vbmVcIn0pLnRyYW5zbGF0ZSgtNTAsIC01MCk7XG5cdFx0bWUuaWNvblBhdGhzLnB1c2gocGF0aCk7XG5cdFx0Ly9tZS5tZ3JvdXAuYWRkTWVtYmVyKHBhdGgubm9kZSk7XG5cblx0XHRtZS5hZGRPdmVybGF5KCk7XG5cdH07XG5cblx0Lypcblx0ICogYWRkcyBhbiBpbnZpc2libGUgYnViYmxlIG9uIHRvcCBmb3Igc2VhbWxlc3Ncblx0ICogZXZlbnQgaGFuZGxpbmdcblx0ICovXG5cdG1lLmFkZE92ZXJsYXkgPSBmdW5jdGlvbigpIHtcblx0XHQvLyBhZGQgaW52aXNpYmxlIG92ZXJsYXkgY2lyY2xlXG5cdFx0dmFyIG1lID0gdGhpcztcblxuXHRcdG1lLm92ZXJsYXkgPSBtZS5wYXBlci5jaXJjbGUobWUuY2lyY2xlLmF0dHJzLmN4LCBtZS5jaXJjbGUuYXR0cnMuY3ksIG1lLmNpcmNsZS5hdHRycy5yKVxuXHRcdFx0LmF0dHIoeyBzdHJva2U6IGZhbHNlLCBmaWxsOiAnI2ZmZicsICdmaWxsLW9wYWNpdHknOiAwfSk7XG5cblx0XHRpZiAoUmFwaGFlbC5zdmcpIHtcblx0XHRcdG1lLm92ZXJsYXkubm9kZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgbWUubm9kZS5pZCk7XG5cdFx0fVxuXHRcdCQobWUub3ZlcmxheS5ub2RlKS5jc3MoeyBjdXJzb3I6ICdwb2ludGVyJ30pO1xuXG5cdFx0JChtZS5vdmVybGF5Lm5vZGUpLmNsaWNrKG1lLm9uY2xpY2suYmluZChtZSkpO1xuXHRcdCQobWUubGFiZWwpLmNsaWNrKG1lLm9uY2xpY2suYmluZChtZSkpO1xuXHRcdCQobWUubGFiZWwyKS5jbGljayhtZS5vbmNsaWNrLmJpbmQobWUpKTtcblxuXHRcdGlmICgkLmlzUGxhaW5PYmplY3QobWUuYmMudG9vbHRpcCkpIHtcblx0XHRcdC8vIHVzZSBxLXRpcCB0b29sdGlwc1xuXHRcdFx0dmFyIHR0ID0gbWUuYmMudG9vbHRpcC5jb250ZW50KG1lLm5vZGUpO1xuXHRcdFx0JChtZS5vdmVybGF5Lm5vZGUpLnF0aXAoe1xuXHRcdFx0XHRwb3NpdGlvbjoge1xuXHRcdFx0XHRcdHRhcmdldDogJ21vdXNlJyxcblx0XHRcdFx0XHR2aWV3cG9ydDogJCh3aW5kb3cpLFxuXHRcdFx0XHRcdGFkanVzdDogeyB4OjcsIHk6NyB9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHNob3c6IHtcblx0XHRcdFx0XHRkZWxheTogbWUuYmMudG9vbHRpcC5kZWxheSB8fCAxMDBcblx0XHRcdFx0fSxcblx0XHRcdFx0Y29udGVudDoge1xuXHRcdFx0XHRcdHRpdGxlOiB0dFswXSxcblx0XHRcdFx0XHR0ZXh0OiB0dFsxXVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cblx0Lypcblx0ICogd2lsbCByZW1vdmUgdGhlIGljb24gZnJvbSBzdGFnZVxuXHQgKi9cblx0bWUucmVtb3ZlSWNvbiA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGksIHBhdGg7XG5cdFx0Zm9yIChpIGluIG1lLmljb25QYXRocykge1xuXHRcdFx0bWUuaWNvblBhdGhzW2ldLnJlbW92ZSgpO1xuXHRcdH1cblx0XHRtZS5pY29uUGF0aHMgPSBbXTtcblx0fTtcblxuXG5cdG1lLmRyYXcgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgbWUgPSB0aGlzLFxuXHRcdFx0ciA9IE1hdGgubWF4KDUsIG1lLmJ1YmJsZVJhZCAqIG1lLmJjLmJ1YmJsZVNjYWxlKSxcblx0XHRcdG94ID0gbWUucG9zLngsXG5cdFx0XHRveSA9IG1lLnBvcy55LFxuXHRcdFx0ZGV2bnVsbCA9IG1lLmdldFhZKCksXG5cdFx0XHR4ID0gbWUucG9zLngsIHkgPSBtZS5wb3MueSxcblx0XHRcdHNob3dJY29uID0gbWUuaGFzSWNvbiAmJiByID4gMTUsXG5cdFx0XHRzaG93TGFiZWwgPSBtZS5oYXNJY29uID8gciA+IDQwIDogciA+IDIwLFxuXHRcdFx0aSwgcGF0aCwgc2NhbGUsIHRyYW5zZm9ybSwgbHk7XG5cblx0XHRpZiAoIW1lLnZpc2libGUpIHJldHVybjtcblxuXHRcdG1lLmNpcmNsZS5hdHRyKHsgY3g6IHgsIGN5OiB5LCByOiByLCAnZmlsbC1vcGFjaXR5JzogbWUuYWxwaGEgfSk7XG5cdFx0aWYobWUub3ZlcmxheSlcblx0XHRcdG1lLm92ZXJsYXkuYXR0cih7IGN4OiB4LCBjeTogeSwgcjogTWF0aC5tYXgoMTAscil9KTtcblxuXHRcdGlmIChtZS5ub2RlLmNoaWxkcmVuLmxlbmd0aCA+IDEpIG1lLmRhc2hlZEJvcmRlci5hdHRyKHsgY3g6IG1lLnBvcy54LCBjeTogbWUucG9zLnksIHI6IE1hdGgubWluKHItMywgci00KSwgJ3N0cm9rZS1vcGFjaXR5JzogbWUuYWxwaGEgKiAwLjkgfSk7XG5cdFx0ZWxzZSBtZS5kYXNoZWRCb3JkZXIuYXR0cih7ICdzdHJva2Utb3BhY2l0eSc6IDAgfSk7XG5cblxuXHRcdC8vbWUubGFiZWwuYXR0cih7IHg6IG1lLnBvcy54LCB5OiBtZS5wb3MueSwgJ2ZvbnQtc2l6ZSc6IE1hdGgubWF4KDQsIG1lLmJ1YmJsZVJhZCAqIG1lLmJjLmJ1YmJsZVNjYWxlICogMC4yNSkgfSk7XG5cdFx0aWYgKCFzaG93TGFiZWwpIHtcblx0XHRcdG1lLmxhYmVsLmhpZGUoKTtcblx0XHRcdG1lLmxhYmVsMi5zaG93KCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1lLmxhYmVsLnNob3coKTtcblx0XHRcdGlmICgoc2hvd0ljb24gJiYgciA8IDcwKSB8fCAoIXNob3dJY29uICYmIHIgPCA0MCkpIHtcblx0XHRcdFx0bWUubGFiZWwuZmluZCgnLmJ1YmJsZXRyZWUtZGVzYycpLmhpZGUoKTtcblx0XHRcdFx0bWUubGFiZWwyLnNob3coKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIGZ1bGwgbGFiZWxcblx0XHRcdFx0bWUubGFiZWwuZmluZCgnLmJ1YmJsZXRyZWUtZGVzYycpLnNob3coKTtcblx0XHRcdFx0bWUubGFiZWwyLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRseSA9IHNob3dJY29uID8geStyKjAuNzctbWUubGFiZWwuaGVpZ2h0KCkgOiB5LW1lLmxhYmVsLmhlaWdodCgpKjAuNTtcblx0XHRtZS5sYWJlbC5jc3MoeyB3aWR0aDogKHNob3dJY29uID8gcioxLjIgOiAyKnIpKydweCcsIG9wYWNpdHk6IG1lLmFscGhhIH0pO1xuXHRcdG1lLmxhYmVsLmNzcyh7IGxlZnQ6IChzaG93SWNvbiA/IHggLSByKjAuNiA6IHgtcikrJ3B4JywgdG9wOiBseSsncHgnIH0pO1xuXG5cdFx0dmFyIHcgPSBNYXRoLm1heCg4MCwgMypyKTtcblx0XHRtZS5sYWJlbDIuY3NzKHsgd2lkdGg6IHcrJ3B4Jywgb3BhY2l0eTogbWUuYWxwaGEgfSk7XG5cdFx0bWUubGFiZWwyLmNzcyh7IGxlZnQ6ICh4IC0gdyowLjUpKydweCcsIHRvcDogKHkgKyByKSsncHgnIH0pO1xuXG5cblx0XHQvL2lmIChtZS5pY29uKSBtZS5pY29uLnRyYW5zbGF0ZShtZS5wb3MueCAtIG94LCBtZS5wb3MueSAtIG95KTtcblx0XHRpZiAobWUuaGFzSWNvbikge1xuXHRcdFx0aWYgKHNob3dJY29uKSB7XG5cdFx0XHRcdHNjYWxlID0gKHIgLSAoc2hvd0xhYmVsID8gbWUubGFiZWwuaGVpZ2h0KCkqMC41IDogMCkpIC8gNjA7XG5cdFx0XHRcdGZvciAoaSBpbiBtZS5pY29uUGF0aHMpIHtcblx0XHRcdFx0XHRwYXRoID0gbWUuaWNvblBhdGhzW2ldO1xuXHRcdFx0XHRcdC8vcGF0aC50cmFuc2xhdGUobWUucG9zLnggLSBveCwgbWUucG9zLnkgLSBveSk7XG5cdFx0XHRcdFx0aWYgKFJhcGhhZWwudmVyc2lvblswXSA9PSBcIjFcIikge1xuXHRcdFx0XHRcdFx0dHJhbnNmb3JtID0gXCJzY2FsZShcIitzY2FsZStcIikgdHJhbnNsYXRlKFwiKyh4L3NjYWxlKStcIiwgXCIrKCh5KyhzaG93TGFiZWwgPyBtZS5sYWJlbC5oZWlnaHQoKSotMC41IDogMCkpL3NjYWxlKStcIilcIjtcblxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHQvLyB2ZXJzaW9uID4gMVxuXHRcdFx0XHRcdFx0dHJhbnNmb3JtID0gXCJzY2FsZShcIitzY2FsZStcIikgdHJhbnNsYXRlKFwiKyh4L3NjYWxlLTUwKStcIiwgXCIrKCh5KyhzaG93TGFiZWwgPyBtZS5sYWJlbC5oZWlnaHQoKSotMC41IDogMCkpL3NjYWxlLTUwKStcIilcIjtcblxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwYXRoLm5vZGUuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHRyYW5zZm9ybSk7XG5cdFx0XHRcdFx0cGF0aC5hdHRyKHsgJ2ZpbGwtb3BhY2l0eSc6IG1lLmFscGhhIH0pO1xuXG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZvciAoaSBpbiBtZS5pY29uUGF0aHMpIHtcblx0XHRcdFx0XHRwYXRoID0gbWUuaWNvblBhdGhzW2ldO1xuXHRcdFx0XHRcdHBhdGguYXR0cih7ICdmaWxsLW9wYWNpdHknOiAwIH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG5cdC8qXG5cdCAqIHJlbW92ZXMgYWxsIHZpc2libGUgZWxlbWVudHMgZnJvbSB0aGUgcGFnZVxuXHQgKi9cblx0bWUuaGlkZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGk7XG5cdFx0bWUuY2lyY2xlLnJlbW92ZSgpO1xuXHRcdG1lLmRhc2hlZEJvcmRlci5yZW1vdmUoKTtcblx0XHRtZS5sYWJlbC5yZW1vdmUoKTtcblx0XHRtZS5sYWJlbDIucmVtb3ZlKCk7XG5cblx0XHQvL21lLmJjLiRjb250YWluZXJcblx0XHRtZS52aXNpYmxlID0gZmFsc2U7XG5cdFx0aWYgKG1lLmhhc0ljb24pIG1lLnJlbW92ZUljb24oKTtcblx0XHRpZiAobWUub3ZlcmxheSkgbWUub3ZlcmxheS5yZW1vdmUoKTtcblx0fTtcblxuXHQvKlxuXHQgKlxuXHQgKi9cblx0bWUub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcblx0XHR2YXIgbWUgPSB0aGlzO1xuXHRcdG1lLmJjLm9uTm9kZUNsaWNrKG1lLm5vZGUpO1xuXHRcdC8vaWYgKG1lLm5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuXHRcdFx0bWUuYmMubmF2aWdhdGVUbyhtZS5ub2RlKTtcblx0XHQvL31cblx0fTtcblxuXHRtZS5vbmhvdmVyID0gZnVuY3Rpb24oZSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGMgPSBtZS5iYy4kY29udGFpbmVyWzBdO1xuXHRcdGUubm9kZSA9IG1lLm5vZGU7XG5cdFx0ZS5idWJibGVQb3MgPSB7IHg6bWUucG9zLngsIHk6IG1lLnBvcy55IH07XG5cdFx0ZS5tb3VzZVBvcyA9IHsgeDplLm9yaWdFdmVudC5wYWdlWCAtIGMub2Zmc2V0TGVmdCwgeTogZS5vcmlnRXZlbnQucGFnZVkgLSBjLm9mZnNldFRvcCB9O1xuXHRcdGUudHlwZSA9ICdTSE9XJztcblx0XHRlLnRhcmdldCA9IG1lO1xuXHRcdG1lLmJjLnRvb2x0aXAoZSk7XG5cdH07XG5cblx0bWUub251bmhvdmVyID0gZnVuY3Rpb24oZSkge1xuXHRcdHZhciBtZSA9IHRoaXMsIGMgPSBtZS5iYy4kY29udGFpbmVyWzBdO1xuXHRcdGUubm9kZSA9IG1lLm5vZGU7XG5cdFx0ZS50eXBlID0gJ0hJREUnO1xuXHRcdGUudGFyZ2V0ID0gbWU7XG5cdFx0ZS5idWJibGVQb3MgPSB7IHg6bWUucG9zLngsIHk6IG1lLnBvcy55IH07XG5cdFx0ZS5tb3VzZVBvcyA9IHsgeDplLm9yaWdFdmVudC5wYWdlWCAtIGMub2Zmc2V0TGVmdCwgeTogZS5vcmlnRXZlbnQucGFnZVkgLSBjLm9mZnNldFRvcCB9O1xuXHRcdG1lLmJjLnRvb2x0aXAoZSk7XG5cdH07XG5cblxuXHRtZS5pbml0KCk7XG59O1xuIiwiaWYgKCh0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnKSAmJiAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09ICdvYmplY3QnKSkge1xuICBtb2R1bGUuZXhwb3J0cyA9IEJ1YmJsZVRyZWU7XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
